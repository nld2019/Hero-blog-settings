{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":1,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":1,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":1,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/CWNA-802-11-MAC-体系结构.md","hash":"866ab5dc7f4c4208ffedb5cc630015443aa5c208","modified":1644829625494},{"_id":"source/_posts/CWNA-802-11介质访问（二）.md","hash":"5d516e8bedd69127e9cdafc0d7ec493c454c80c4","modified":1644823269429},{"_id":"source/_posts/CWNA-802-11-MAC-体系结构-二.md","hash":"87c9a7d1a8524033aede0add332a37e7276bb6ed","modified":1644917719515},{"_id":"source/_posts/CWNA-射频信号与天线概念.md","hash":"2cc4d99acfaf9920c0f50f0eab8bd5fab1f8579d","modified":1642408496638},{"_id":"source/_posts/CWNA-IEEE-802-11标准与修正案-3.md","hash":"7e47d561804674cc26bd344ade81f402a8d8796b","modified":1641816929983},{"_id":"source/_posts/CWNA-802-11介质访问.md","hash":"b5e6435552611d063bd84d3ed6324d62e187698b","modified":1644573260620},{"_id":"source/_posts/CWNA-IEEE-802-11标准与修正案.md","hash":"da3821d98698b95980b79e59fb10769fadd7ec07","modified":1641816924465},{"_id":"source/_posts/CWNA-IEEE-802-11标准与修正案-2.md","hash":"849d4a6efc45ff7ab59c486ec1b026bb3945070e","modified":1641816918529},{"_id":"source/_posts/CWNA-射频基础知识-5.md","hash":"2e9cf5c904ff5e4628e8d5e00f8244bccbf823c5","modified":1641957086832},{"_id":"source/_posts/CWNA-射频基础知识.md","hash":"d3c4bba8571e6316a1c483a9708edc1735e71151","modified":1641865358601},{"_id":"source/_posts/CWNA-射频基础知识（2）.md","hash":"ec183517823207cb45c94d240ce397a20cc50903","modified":1641882373811},{"_id":"source/_posts/CWNA-无线局域网拓扑-二.md","hash":"c8d6e3ab550d715a020e7e598881ec8de26dc170","modified":1644404183754},{"_id":"source/_posts/CWNA-射频数学计算.md","hash":"6771c8106863fe50162d51438ee19e5655146967","modified":1641952560836},{"_id":"source/_posts/CWNA-无线局域网拓扑.md","hash":"eed288d2b0bacc676c4e752758d8d9130304c769","modified":1644382713788},{"_id":"source/_posts/CWNA-无线网络与扩频技术-2.md","hash":"bffd7b2437c831678319fd165eb472b4dac3dacf","modified":1643188736353},{"_id":"source/_posts/CWNA-无线网络与扩频技术.md","hash":"a1d51849a83553b4864a0c49af776a5dacc2c2fd","modified":1642661563496},{"_id":"source/_posts/CWNA-无线网络与扩频技术（三）.md","hash":"759231ce07076cd86c7559f3567bde1696bda084","modified":1643200158719},{"_id":"source/_posts/CWNA-标准、行业组织与通信基础知识概述.md","hash":"02ecd444f0ab9063b066abe7aae27580015dc445","modified":1641816942462},{"_id":"source/_posts/Step-by-step-to-build-personal-blog.md","hash":"dbc09ebe5166d7cd005ef33b5d140e50dfe89b69","modified":1639234706372},{"_id":"source/_posts/Linux-shell-script-实践记录-一.md","hash":"df24a93fc444d2ba9f39cd83e7580150a1ab43a2","modified":1644920408442},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1639234706373},{"_id":"source/_posts/CWNA：射频组件、度量与数学计算.md","hash":"cb68bb8ff6a2a9ab5c2134f542f8c55e3d95fc48","modified":1641896916743},{"_id":"source/_posts/SVN服务仓库搭建记录.md","hash":"3a5cf4d177b72fb280fb7091ab1fa26a499c4b6b","modified":1639725372696},{"_id":"source/_posts/vim-cscope-ctags阅读源码.md","hash":"f4cbfcc11aa70a681d7a840d0bd0e2a7598dded5","modified":1640154791719},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1639234706390},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1639234706515},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1639234706426},{"_id":"themes/yilia/_config.yml","hash":"47abf11a02d5f02912a66c3a22fc50da1fabd89a","modified":1642408691677},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1639234706428},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1639234706428},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1639234706491},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1639234706376},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1639234706494},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1639234706493},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1639234706434},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1639234706495},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1639234706430},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1639234706430},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1639234706431},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1639234706433},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1639234706432},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1639234706425},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1639234706426},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1639234706378},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1639234706424},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1639234706435},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1639234706421},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1639234706505},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1639234706422},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1639234706450},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1639234706452},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1639234706423},{"_id":"themes/yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1639234706508},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1639234706418},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1639234706392},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1639234706414},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1639234706387},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"b86b248720ad415ec1b5fee53fb583776c776f83","modified":1639234706413},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1639234706420},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1639234706386},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1639234706412},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1639234706390},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"910b3adca0e1c65fbfa82c4599f843ee79a247bc","modified":1639234706384},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1639234706417},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1639234706416},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1639234706382},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1639234706393},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1639234706419},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1639234706380},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1639234706462},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1639234706475},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1639234706453},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1639234706479},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1639234706483},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1639234706490},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1639234706478},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1639234706477},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1639234706484},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1639234706467},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1639234706473},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1639234706480},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1639234706457},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1639234706459},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1639234706473},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1639234706456},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1639234706454},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1639234706482},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1639234706460},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1639234706478},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1639234706468},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1639234706455},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1639234706458},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1639234706457},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1639234706449},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1639234706461},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1639234706474},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1639234706440},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1639234706442},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1639234706481},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1639234706447},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1639234706437},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1639234706444},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1639234706445},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1639234706448},{"_id":"themes/yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1639234706441},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1639234706443},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1639234706438},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1639234706500},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1639234706499},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1639234706503},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1639234706504},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1639234706501},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1639234706439},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1639234706514},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1639234706497},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1639234706397},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"534b12ebc22d21ac565b20045e7382f0bb4c29e7","modified":1639234706409},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1639234706512},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1639234706511},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1639234706407},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1639234706405},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1639234706408},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1639234706396},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1639234706399},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1639234706402},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1639234706401},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1639234706404},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1639234706463},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1639234706466},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1639234706465},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1639234706464},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1639234706467},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1639234706489},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1639234706487},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1639234706486},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1639234706488},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1639234706469},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1639234706470},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1639234706472},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1639234706506},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1639234706509},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1639234706411},{"_id":"public/content.json","hash":"85054b0add005ee85a8dc700e65b9d040cec9a85","modified":1644920455827},{"_id":"public/2022/02/15/Linux-shell-script-实践记录-一/index.html","hash":"61f60bae01f56694288394595b5d75f046b54525","modified":1644920455827},{"_id":"public/2022/02/15/CWNA-802-11-MAC-体系结构-二/index.html","hash":"77cbfb682fe88408ef0886d6be69b5b4f6311f7a","modified":1644920455827},{"_id":"public/2022/02/14/CWNA-802-11-MAC-体系结构/index.html","hash":"b84a237be76aa7da41dd2137c37e5e2714f67d22","modified":1644920455827},{"_id":"public/2022/02/14/CWNA-802-11介质访问（二）/index.html","hash":"4d1ab609f0c2888a4cefced248e21868014bcdc1","modified":1644920455827},{"_id":"public/2022/02/10/CWNA-802-11介质访问/index.html","hash":"ce11ab83dbbec82804c3f2c66bda45e5c1e70828","modified":1644920455827},{"_id":"public/2022/02/09/CWNA-无线局域网拓扑-二/index.html","hash":"de0701ba9f6b28e398228024fdce64209ae3d320","modified":1644920455827},{"_id":"public/2022/01/26/CWNA-无线网络与扩频技术（三）/index.html","hash":"639c9b9a410accd8c71fa8027a2417a49f4c4002","modified":1644920455827},{"_id":"public/2022/02/09/CWNA-无线局域网拓扑/index.html","hash":"8122c5bc54259e225b1350277126f2d5811d961c","modified":1644920455827},{"_id":"public/2022/01/26/CWNA-无线网络与扩频技术-2/index.html","hash":"70e52eb6dbd329d60bb3e34d2fa6a463bf4fa0f0","modified":1644920455827},{"_id":"public/2022/01/14/CWNA-射频信号与天线概念/index.html","hash":"faeb408ff9df960fa761ebc86e31efcdeda77a7d","modified":1644920455827},{"_id":"public/2022/01/18/CWNA-无线网络与扩频技术/index.html","hash":"32b157a39a31606c9d1b0c09570d95d0f1689fa5","modified":1644920455827},{"_id":"public/2022/01/12/CWNA-射频数学计算/index.html","hash":"05e72a77577c0b7c28f320521c238f61749a752b","modified":1644920455827},{"_id":"public/2022/01/12/CWNA-射频基础知识-5/index.html","hash":"b1093d573f396809af57680f9ff2432be5c4f192","modified":1644920455827},{"_id":"public/2022/01/11/CWNA：射频组件、度量与数学计算/index.html","hash":"e3c3c472ca216aa85c72e916b6bf2addc4c1bcb5","modified":1644920455827},{"_id":"public/2022/01/10/CWNA-射频基础知识/index.html","hash":"20544d602cd1c03dbcb9c10d340950c355b0cc5d","modified":1644920455827},{"_id":"public/2022/01/11/CWNA-射频基础知识（2）/index.html","hash":"4041341a606b4091a02c1c710320da633fb6a63e","modified":1644920455827},{"_id":"public/2022/01/10/CWNA-IEEE-802-11标准与修正案-3/index.html","hash":"d08e66872bfdfc1cc34d1226fc48e78e896abf10","modified":1644920455827},{"_id":"public/2022/01/06/CWNA-标准、行业组织与通信基础知识概述/index.html","hash":"858757bfea384916c16d1746787e57464d747ad1","modified":1644920455827},{"_id":"public/2022/01/10/CWNA-IEEE-802-11标准与修正案-2/index.html","hash":"ecb93f26bcb29a562f40120a7302f01ce414969b","modified":1644920455827},{"_id":"public/2022/01/07/CWNA-IEEE-802-11标准与修正案/index.html","hash":"4faddde69b30d7d28f1fae7638d930c8a1a07539","modified":1644920455827},{"_id":"public/2021/12/22/vim-cscope-ctags阅读源码/index.html","hash":"64f55012e8a34ccc925eb423070935abc3c4ec66","modified":1644920455827},{"_id":"public/2021/12/16/SVN服务仓库搭建记录/index.html","hash":"be2a6fd1df9dd7ded3b21d37371d4e724f9505f2","modified":1644920455827},{"_id":"public/2021/12/11/hello-world/index.html","hash":"cad6e04b40d2be19d7da5d8a95ed8bc3b729ed69","modified":1644920455827},{"_id":"public/2021/12/08/Step-by-step-to-build-personal-blog/index.html","hash":"304c74fa51e5ddb61ad44084f6a3ea4743f52792","modified":1644920455827},{"_id":"public/page/2/index.html","hash":"84768e079ec9cee6a0d73b17c094dd71770e0c9d","modified":1644920455827},{"_id":"public/index.html","hash":"104a9d1138f76b2ed475a1af7e0958f8f872efd2","modified":1644920455827},{"_id":"public/page/3/index.html","hash":"5c96823f0804f9e550c6c2456fa57ac90360c3c4","modified":1644920455827},{"_id":"public/tags/Wi-Fi/index.html","hash":"14f41eda6c8e48bbb731207a18b4eaada3a98f36","modified":1644920455827},{"_id":"public/tags/Wi-Fi/page/2/index.html","hash":"1355f98646d63f88a633d37e49730894371b1ba2","modified":1644920455827},{"_id":"public/tags/Shell-script/index.html","hash":"e3d2b3f3d10bca4c577db087ad15337da9ffd960","modified":1644920455827},{"_id":"public/archives/page/2/index.html","hash":"e8436d866e2b55e2f16e1d478670d711a7ea61d4","modified":1644920455827},{"_id":"public/archives/index.html","hash":"8dd9b601f0767fcfc0518b336e958725d00f62a1","modified":1644920455827},{"_id":"public/archives/page/3/index.html","hash":"22d386622b238477c472e04bd06c1832f80c4787","modified":1644920455827},{"_id":"public/archives/2021/index.html","hash":"cf283e00d7dc306a14f449f5fb8e4368a48d484f","modified":1644920455827},{"_id":"public/archives/2021/12/index.html","hash":"21a83788a0121e1f59b5b6e1e1dc4194f1352f8d","modified":1644920455827},{"_id":"public/archives/2022/index.html","hash":"8837085bf665e5567655f05283c6a3fe9093d7db","modified":1644920455827},{"_id":"public/archives/2022/01/index.html","hash":"2d3f11fc6b58861b8cb2c843b7dd928094f8debe","modified":1644920455827},{"_id":"public/archives/2022/01/page/2/index.html","hash":"68ff3f7a216a232343b1510d495204902609ed5b","modified":1644920455827},{"_id":"public/archives/2022/page/2/index.html","hash":"c2091d1e52d113e5e03768759fb2e36d4297ae66","modified":1644920455827},{"_id":"public/archives/2022/02/index.html","hash":"7173ab3d1fa32c5eda2c3a805f335a54a8004235","modified":1644920455827},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1644920455827},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1644920455827},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1644920455827},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1644920455827},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1644920455827},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1644920455827},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1644920455827},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1644920455827},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1644920455827},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1644920455827},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1644920455827},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1644920455827},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1644920455827}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"CWNA:802.11 MAC 体系结构","date":"2022-02-14T07:25:22.000Z","_content":"包、帧与比特\n数据链路层\n> MAC服务数据单元\n> MAC协议数据单元 \n\n物理层\n> PLCP服务数据单元\n> PLCP协议数据单元\n\n802.11与802.3互操作性\n802.11 MAC 帧头\n> 帧控制字段\n> 持续时间/ID字段\n> MAC寻址\n> 序列控制字段\n> QoS控制字段\n> HT控制字段\n\n802.11帧体\n802.11帧尾\n802.11状态机\n管理帧\n> 信标帧\n> 身份验证帧\n> 关联帧\n> 重关联帧\n> 取消关联帧\n> 接触身份验证帧\n> 行动帧\n\n控制帧\n> 确认帧\n> 块确认帧\n> 节电轮询帧\n> RTS/CTS\n> CTS-to-Self\n> 保护机制\n\n数据帧\n> Qos数据帧与非Qos数据帧\n> 不携带数据的数据帧\n\n电源管理\n> 遗留的电源管理机制\n> WMM节电与非调度自动节电传输\n> MIMO电源管理机制\n\n### 包、帧与比特\n对于802.11通信而言，主要目标就是在计算机设备之间传输用户数据。\n当数据在计算机中处理完毕并准备从一台计算机发送到另一台计算机时，数据从OSI模型的上层向下传递至物理层，最终经由物理层传输给其他设备。\n网络三层数据称为包\n网络二层数据称为帧\n物理层数据称为比特，数据最终以单比特的形式传输。比特是值为0或1的二进制数字，二进制数字是数字通信的基础。\n\n### 数据链路层（网络二层）\n包含两个子层：\n802.2逻辑链路控制子层（LLC),所有802网络具有相同的LLC子层结构；\n介质访问子层（MAC子层）， 802.11无线局域网通信位于MAC子层。\n\n**MAC服务数据单元**\n网络层将数据发送给数据链路层，数据在LLC子层后称为MAC服务数据单元（MSDU), 它有LLC子层以及第三~第七层信息构成。\n802.11有3种主要的帧类型。\n802.11管理帧和控制帧 不携带上层信息，\n802.11数据帧携带MSDU净荷。\n\nMSDU最大长度为2304字节，帧体的最大长度有MSDU最大长度与加密开销决定。\n\n2009年获批的802.11n引入 聚合MAC服务数据单元（A-MSDU)的概念。 A-MSDU最大长度（3839或7935）\n\n**MAC协议数据单元**\nLLC子层向MAC子层发送MSDU时，将添加MAC帧头信息，封装后的MSDU称为MAC协议数据单元（MPDU），也就是802.11帧。\n\nMPDU = MAC帧头 + 帧体 + 帧校验序列\nMAC帧头： 帧控制、持续时间、MAC寻址、序列控制、Qos控制、HT控制等信息。\n帧头： MSDU净荷在其中\n帧校验序列： FCS包括32为循环容易校验，用于验证帧的完整性。\n\n### 物理层\n分为两个子层：\n物理层会聚过程子层（PLCP）\n物理介质相关子层（PMD）\n\nMAC子层向 PLCP子层发送帧， PLCP子层创建 PLCP协议数据单元（PPDU）以便传输，PMD子层随后会调制数据并以比特形式发送出去。\n\n**PLCP服务数据单元**\nPLCP服务数据单元（PSDU）是物理层对MPDU的称谓。\n\n**PLCP协议数据单元**\nPPDU = 前同步码 + 物理层头部 + PSDU\n\n信息在各层之间流动的过程\n\n\n网络层（网络三层）\n——————————————————————————————————————————————————————————————————————————————————————\n数据链路层（第二层） LLC子层------------MSDU（第三~第七层数据）----------------LLC子层\n                                    \n------------------ MAC子层------------MSDU封装在MPDU中----------------------MAC子层\n-------------------------------------添加或删除MAC帧头与帧尾\n——————————————————————————————————————————————————————————————————————————————————————\n物理层（第一层）--- PLCP子层-----------PSDU封装在 PPDU中---------------------PLCP子层\n---------------------------------添加或删除前同步码与物理层头部\n------------------ PMD子层-----------数据以比特形式传输----------------------PMD子层\n","source":"_posts/CWNA-802-11-MAC-体系结构.md","raw":"---\ntitle: 'CWNA:802.11 MAC 体系结构'\ndate: 2022-02-14 15:25:22\ntags: 'Wi-Fi'\n---\n包、帧与比特\n数据链路层\n> MAC服务数据单元\n> MAC协议数据单元 \n\n物理层\n> PLCP服务数据单元\n> PLCP协议数据单元\n\n802.11与802.3互操作性\n802.11 MAC 帧头\n> 帧控制字段\n> 持续时间/ID字段\n> MAC寻址\n> 序列控制字段\n> QoS控制字段\n> HT控制字段\n\n802.11帧体\n802.11帧尾\n802.11状态机\n管理帧\n> 信标帧\n> 身份验证帧\n> 关联帧\n> 重关联帧\n> 取消关联帧\n> 接触身份验证帧\n> 行动帧\n\n控制帧\n> 确认帧\n> 块确认帧\n> 节电轮询帧\n> RTS/CTS\n> CTS-to-Self\n> 保护机制\n\n数据帧\n> Qos数据帧与非Qos数据帧\n> 不携带数据的数据帧\n\n电源管理\n> 遗留的电源管理机制\n> WMM节电与非调度自动节电传输\n> MIMO电源管理机制\n\n### 包、帧与比特\n对于802.11通信而言，主要目标就是在计算机设备之间传输用户数据。\n当数据在计算机中处理完毕并准备从一台计算机发送到另一台计算机时，数据从OSI模型的上层向下传递至物理层，最终经由物理层传输给其他设备。\n网络三层数据称为包\n网络二层数据称为帧\n物理层数据称为比特，数据最终以单比特的形式传输。比特是值为0或1的二进制数字，二进制数字是数字通信的基础。\n\n### 数据链路层（网络二层）\n包含两个子层：\n802.2逻辑链路控制子层（LLC),所有802网络具有相同的LLC子层结构；\n介质访问子层（MAC子层）， 802.11无线局域网通信位于MAC子层。\n\n**MAC服务数据单元**\n网络层将数据发送给数据链路层，数据在LLC子层后称为MAC服务数据单元（MSDU), 它有LLC子层以及第三~第七层信息构成。\n802.11有3种主要的帧类型。\n802.11管理帧和控制帧 不携带上层信息，\n802.11数据帧携带MSDU净荷。\n\nMSDU最大长度为2304字节，帧体的最大长度有MSDU最大长度与加密开销决定。\n\n2009年获批的802.11n引入 聚合MAC服务数据单元（A-MSDU)的概念。 A-MSDU最大长度（3839或7935）\n\n**MAC协议数据单元**\nLLC子层向MAC子层发送MSDU时，将添加MAC帧头信息，封装后的MSDU称为MAC协议数据单元（MPDU），也就是802.11帧。\n\nMPDU = MAC帧头 + 帧体 + 帧校验序列\nMAC帧头： 帧控制、持续时间、MAC寻址、序列控制、Qos控制、HT控制等信息。\n帧头： MSDU净荷在其中\n帧校验序列： FCS包括32为循环容易校验，用于验证帧的完整性。\n\n### 物理层\n分为两个子层：\n物理层会聚过程子层（PLCP）\n物理介质相关子层（PMD）\n\nMAC子层向 PLCP子层发送帧， PLCP子层创建 PLCP协议数据单元（PPDU）以便传输，PMD子层随后会调制数据并以比特形式发送出去。\n\n**PLCP服务数据单元**\nPLCP服务数据单元（PSDU）是物理层对MPDU的称谓。\n\n**PLCP协议数据单元**\nPPDU = 前同步码 + 物理层头部 + PSDU\n\n信息在各层之间流动的过程\n\n\n网络层（网络三层）\n——————————————————————————————————————————————————————————————————————————————————————\n数据链路层（第二层） LLC子层------------MSDU（第三~第七层数据）----------------LLC子层\n                                    \n------------------ MAC子层------------MSDU封装在MPDU中----------------------MAC子层\n-------------------------------------添加或删除MAC帧头与帧尾\n——————————————————————————————————————————————————————————————————————————————————————\n物理层（第一层）--- PLCP子层-----------PSDU封装在 PPDU中---------------------PLCP子层\n---------------------------------添加或删除前同步码与物理层头部\n------------------ PMD子层-----------数据以比特形式传输----------------------PMD子层\n","slug":"CWNA-802-11-MAC-体系结构","published":1,"updated":"2022-02-14T09:07:05.494Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz631m0000h6fdakx3eoj0","content":"<p>包、帧与比特<br>数据链路层</p>\n<blockquote>\n<p>MAC服务数据单元<br>MAC协议数据单元 </p>\n</blockquote>\n<p>物理层</p>\n<blockquote>\n<p>PLCP服务数据单元<br>PLCP协议数据单元</p>\n</blockquote>\n<p>802.11与802.3互操作性<br>802.11 MAC 帧头</p>\n<blockquote>\n<p>帧控制字段<br>持续时间/ID字段<br>MAC寻址<br>序列控制字段<br>QoS控制字段<br>HT控制字段</p>\n</blockquote>\n<p>802.11帧体<br>802.11帧尾<br>802.11状态机<br>管理帧</p>\n<blockquote>\n<p>信标帧<br>身份验证帧<br>关联帧<br>重关联帧<br>取消关联帧<br>接触身份验证帧<br>行动帧</p>\n</blockquote>\n<p>控制帧</p>\n<blockquote>\n<p>确认帧<br>块确认帧<br>节电轮询帧<br>RTS/CTS<br>CTS-to-Self<br>保护机制</p>\n</blockquote>\n<p>数据帧</p>\n<blockquote>\n<p>Qos数据帧与非Qos数据帧<br>不携带数据的数据帧</p>\n</blockquote>\n<p>电源管理</p>\n<blockquote>\n<p>遗留的电源管理机制<br>WMM节电与非调度自动节电传输<br>MIMO电源管理机制</p>\n</blockquote>\n<h3 id=\"包、帧与比特\"><a href=\"#包、帧与比特\" class=\"headerlink\" title=\"包、帧与比特\"></a>包、帧与比特</h3><p>对于802.11通信而言，主要目标就是在计算机设备之间传输用户数据。<br>当数据在计算机中处理完毕并准备从一台计算机发送到另一台计算机时，数据从OSI模型的上层向下传递至物理层，最终经由物理层传输给其他设备。<br>网络三层数据称为包<br>网络二层数据称为帧<br>物理层数据称为比特，数据最终以单比特的形式传输。比特是值为0或1的二进制数字，二进制数字是数字通信的基础。</p>\n<h3 id=\"数据链路层（网络二层）\"><a href=\"#数据链路层（网络二层）\" class=\"headerlink\" title=\"数据链路层（网络二层）\"></a>数据链路层（网络二层）</h3><p>包含两个子层：<br>802.2逻辑链路控制子层（LLC),所有802网络具有相同的LLC子层结构；<br>介质访问子层（MAC子层）， 802.11无线局域网通信位于MAC子层。</p>\n<p><strong>MAC服务数据单元</strong><br>网络层将数据发送给数据链路层，数据在LLC子层后称为MAC服务数据单元（MSDU), 它有LLC子层以及第三~第七层信息构成。<br>802.11有3种主要的帧类型。<br>802.11管理帧和控制帧 不携带上层信息，<br>802.11数据帧携带MSDU净荷。</p>\n<p>MSDU最大长度为2304字节，帧体的最大长度有MSDU最大长度与加密开销决定。</p>\n<p>2009年获批的802.11n引入 聚合MAC服务数据单元（A-MSDU)的概念。 A-MSDU最大长度（3839或7935）</p>\n<p><strong>MAC协议数据单元</strong><br>LLC子层向MAC子层发送MSDU时，将添加MAC帧头信息，封装后的MSDU称为MAC协议数据单元（MPDU），也就是802.11帧。</p>\n<p>MPDU = MAC帧头 + 帧体 + 帧校验序列<br>MAC帧头： 帧控制、持续时间、MAC寻址、序列控制、Qos控制、HT控制等信息。<br>帧头： MSDU净荷在其中<br>帧校验序列： FCS包括32为循环容易校验，用于验证帧的完整性。</p>\n<h3 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h3><p>分为两个子层：<br>物理层会聚过程子层（PLCP）<br>物理介质相关子层（PMD）</p>\n<p>MAC子层向 PLCP子层发送帧， PLCP子层创建 PLCP协议数据单元（PPDU）以便传输，PMD子层随后会调制数据并以比特形式发送出去。</p>\n<p><strong>PLCP服务数据单元</strong><br>PLCP服务数据单元（PSDU）是物理层对MPDU的称谓。</p>\n<p><strong>PLCP协议数据单元</strong><br>PPDU = 前同步码 + 物理层头部 + PSDU</p>\n<p>信息在各层之间流动的过程</p>\n<p>网络层（网络三层）<br>——————————————————————————————————————————————————————————————————————————————————————<br>数据链路层（第二层） LLC子层——————MSDU（第三~第七层数据）————————LLC子层</p>\n<p>————————— MAC子层——————MSDU封装在MPDU中———————————MAC子层<br>——————————————————-添加或删除MAC帧头与帧尾<br>——————————————————————————————————————————————————————————————————————————————————————<br>物理层（第一层）—- PLCP子层—————-PSDU封装在 PPDU中——————————-PLCP子层<br>————————————————-添加或删除前同步码与物理层头部<br>————————— PMD子层—————-数据以比特形式传输———————————PMD子层</p>\n","site":{"data":{}},"excerpt":"","more":"<p>包、帧与比特<br>数据链路层</p>\n<blockquote>\n<p>MAC服务数据单元<br>MAC协议数据单元 </p>\n</blockquote>\n<p>物理层</p>\n<blockquote>\n<p>PLCP服务数据单元<br>PLCP协议数据单元</p>\n</blockquote>\n<p>802.11与802.3互操作性<br>802.11 MAC 帧头</p>\n<blockquote>\n<p>帧控制字段<br>持续时间/ID字段<br>MAC寻址<br>序列控制字段<br>QoS控制字段<br>HT控制字段</p>\n</blockquote>\n<p>802.11帧体<br>802.11帧尾<br>802.11状态机<br>管理帧</p>\n<blockquote>\n<p>信标帧<br>身份验证帧<br>关联帧<br>重关联帧<br>取消关联帧<br>接触身份验证帧<br>行动帧</p>\n</blockquote>\n<p>控制帧</p>\n<blockquote>\n<p>确认帧<br>块确认帧<br>节电轮询帧<br>RTS/CTS<br>CTS-to-Self<br>保护机制</p>\n</blockquote>\n<p>数据帧</p>\n<blockquote>\n<p>Qos数据帧与非Qos数据帧<br>不携带数据的数据帧</p>\n</blockquote>\n<p>电源管理</p>\n<blockquote>\n<p>遗留的电源管理机制<br>WMM节电与非调度自动节电传输<br>MIMO电源管理机制</p>\n</blockquote>\n<h3 id=\"包、帧与比特\"><a href=\"#包、帧与比特\" class=\"headerlink\" title=\"包、帧与比特\"></a>包、帧与比特</h3><p>对于802.11通信而言，主要目标就是在计算机设备之间传输用户数据。<br>当数据在计算机中处理完毕并准备从一台计算机发送到另一台计算机时，数据从OSI模型的上层向下传递至物理层，最终经由物理层传输给其他设备。<br>网络三层数据称为包<br>网络二层数据称为帧<br>物理层数据称为比特，数据最终以单比特的形式传输。比特是值为0或1的二进制数字，二进制数字是数字通信的基础。</p>\n<h3 id=\"数据链路层（网络二层）\"><a href=\"#数据链路层（网络二层）\" class=\"headerlink\" title=\"数据链路层（网络二层）\"></a>数据链路层（网络二层）</h3><p>包含两个子层：<br>802.2逻辑链路控制子层（LLC),所有802网络具有相同的LLC子层结构；<br>介质访问子层（MAC子层）， 802.11无线局域网通信位于MAC子层。</p>\n<p><strong>MAC服务数据单元</strong><br>网络层将数据发送给数据链路层，数据在LLC子层后称为MAC服务数据单元（MSDU), 它有LLC子层以及第三~第七层信息构成。<br>802.11有3种主要的帧类型。<br>802.11管理帧和控制帧 不携带上层信息，<br>802.11数据帧携带MSDU净荷。</p>\n<p>MSDU最大长度为2304字节，帧体的最大长度有MSDU最大长度与加密开销决定。</p>\n<p>2009年获批的802.11n引入 聚合MAC服务数据单元（A-MSDU)的概念。 A-MSDU最大长度（3839或7935）</p>\n<p><strong>MAC协议数据单元</strong><br>LLC子层向MAC子层发送MSDU时，将添加MAC帧头信息，封装后的MSDU称为MAC协议数据单元（MPDU），也就是802.11帧。</p>\n<p>MPDU = MAC帧头 + 帧体 + 帧校验序列<br>MAC帧头： 帧控制、持续时间、MAC寻址、序列控制、Qos控制、HT控制等信息。<br>帧头： MSDU净荷在其中<br>帧校验序列： FCS包括32为循环容易校验，用于验证帧的完整性。</p>\n<h3 id=\"物理层\"><a href=\"#物理层\" class=\"headerlink\" title=\"物理层\"></a>物理层</h3><p>分为两个子层：<br>物理层会聚过程子层（PLCP）<br>物理介质相关子层（PMD）</p>\n<p>MAC子层向 PLCP子层发送帧， PLCP子层创建 PLCP协议数据单元（PPDU）以便传输，PMD子层随后会调制数据并以比特形式发送出去。</p>\n<p><strong>PLCP服务数据单元</strong><br>PLCP服务数据单元（PSDU）是物理层对MPDU的称谓。</p>\n<p><strong>PLCP协议数据单元</strong><br>PPDU = 前同步码 + 物理层头部 + PSDU</p>\n<p>信息在各层之间流动的过程</p>\n<p>网络层（网络三层）<br>——————————————————————————————————————————————————————————————————————————————————————<br>数据链路层（第二层） LLC子层——————MSDU（第三~第七层数据）————————LLC子层</p>\n<p>————————— MAC子层——————MSDU封装在MPDU中———————————MAC子层<br>——————————————————-添加或删除MAC帧头与帧尾<br>——————————————————————————————————————————————————————————————————————————————————————<br>物理层（第一层）—- PLCP子层—————-PSDU封装在 PPDU中——————————-PLCP子层<br>————————————————-添加或删除前同步码与物理层头部<br>————————— PMD子层—————-数据以比特形式传输———————————PMD子层</p>\n"},{"title":"CWNA:802.11 MAC 体系结构(二)","date":"2022-02-15T02:03:56.000Z","_content":"\n### 802.11 MAC 帧头\nMAC帧头属于二层信息，二层信息没有加密，可以通过协议分析仪查看内容。\nMAC帧头由9个字段构成，4个字段用于寻址，5个字段用于控制\n\n|帧控制|持续时间/ID|地址1|地址2|地址3|序列控制|地址4|QoS控制|HT控制|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|2字节|2|6|0 or 6|0 or 6|0 or 2|0 or 6|0 or 2|0 or 4|\n\n**帧控制字段**\n\n|协议版本|类型|子类型|发往DS|来自DS|更多分片|重试|电源管理|更多数据|受保护帧|+HTC/顺序|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|2|2|4|1|1|1|1|1|1|1|1|\n\n目前协议版本只有一种，值为0\n帧类型四种：\n管理帧（00）， 发现接入点并加入基本服务集\n控制帧（01）， 确认传输成功并保留无线介质\n数据帧（10）， 携带上层MSDU净荷\n扩展帧（11）， 一种新的灵活帧格式，仅用于802.11ad\n\n由于帧类型多，类型和子类型字段共同决定帧类型，具体子类型可以抓控制包查看。\n\n\n重试字段，802.11 MAC帧头中最重要的字段之一。\n0：表示首次传输\n1：表示重传\n可以通过重试字段设置为1的管理帧和数据帧计算二层重传率。\n\n受保护帧字段，标识数据帧的MSDU净荷是否加密。\n0：未加密\n1：加密\n\n\n**持续时间/ID字段**\n多数情况，持续时间字段用于虚载波监听，用来设置NAV的倒数计数器；\n个别情况，遗留的电源管理，客户端利用节电轮询帧的持续时间/ID向接入点通过电源管理状态。\n\n**MAC 寻址**\nMAC地址分为两类：\n单地址，分配给网络中唯一终端的地址\n组地址，一个和多个终端使用的目的地址\n多播地址，上层实体用于定义终端逻辑组的地址\n广播地址，FF:FF:FF:FF:FF:FF\n\nMAC地址6字节：\n前三个字节，组织唯一标识符（OUI)\n后三个字节，扩展标识符\n\n源地址（SA)，原发终端的MAC地址；\n目的地址(DA)，二层帧最终目的地的MAC地址；\n发射机地址(TA)，发送端802.11无线接口的MAC地址\n接收机地址(RA)，接收端802.11无线接口的MAC地址\n\n\n**发往DS和来自DS字段**\n00  常用于管理帧和控制帧\n01  表示接入点向客户端发送802.11数据帧（下行传输）\n10  表示客户端向接入点发送802.11数据帧（上行传输）\n11  表示使用无线分布系统，需要4个地址，源和目的通过中间的发送和接收转接。\n\n**序列控制字段**\n两字节，在802.11 MSDU分片时使用。\n分片总是在帧突发中传输，较小分片会降低数据吞吐量。\n支持帧聚合和块确认的802.11n/ac网络不需要分片机制。\n\n**Qos控制字段**\n2字节，仅有Qos数据帧的帧头使用该字段。\n\n**HT控制字段**\n用于802.11n/ac发射机和接收机的链路自适应、发射波束成形等高级功能。\n\n### 802.11 MAC 帧体\n控制帧没有帧体。\n802.11管理帧又称MAC管理协议数据单元（MMPDU），不携带任何上层信息。帧体包含二层信息字段和信息原始。帧体没有加密。\n数据帧，携带上层信息，可以通过加密来保护。\nnull data的数据帧也没有帧体。特殊功能。\n\n\n### 802.11 MAC 帧尾\n携带整个帧数据完整性校验信息。\n帧校验失败，将导致帧重传。\n","source":"_posts/CWNA-802-11-MAC-体系结构-二.md","raw":"---\ntitle: 'CWNA:802.11 MAC 体系结构(二)'\ndate: 2022-02-15 10:03:56\ntags: 'Wi-Fi'\n---\n\n### 802.11 MAC 帧头\nMAC帧头属于二层信息，二层信息没有加密，可以通过协议分析仪查看内容。\nMAC帧头由9个字段构成，4个字段用于寻址，5个字段用于控制\n\n|帧控制|持续时间/ID|地址1|地址2|地址3|序列控制|地址4|QoS控制|HT控制|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|2字节|2|6|0 or 6|0 or 6|0 or 2|0 or 6|0 or 2|0 or 4|\n\n**帧控制字段**\n\n|协议版本|类型|子类型|发往DS|来自DS|更多分片|重试|电源管理|更多数据|受保护帧|+HTC/顺序|\n|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n|2|2|4|1|1|1|1|1|1|1|1|\n\n目前协议版本只有一种，值为0\n帧类型四种：\n管理帧（00）， 发现接入点并加入基本服务集\n控制帧（01）， 确认传输成功并保留无线介质\n数据帧（10）， 携带上层MSDU净荷\n扩展帧（11）， 一种新的灵活帧格式，仅用于802.11ad\n\n由于帧类型多，类型和子类型字段共同决定帧类型，具体子类型可以抓控制包查看。\n\n\n重试字段，802.11 MAC帧头中最重要的字段之一。\n0：表示首次传输\n1：表示重传\n可以通过重试字段设置为1的管理帧和数据帧计算二层重传率。\n\n受保护帧字段，标识数据帧的MSDU净荷是否加密。\n0：未加密\n1：加密\n\n\n**持续时间/ID字段**\n多数情况，持续时间字段用于虚载波监听，用来设置NAV的倒数计数器；\n个别情况，遗留的电源管理，客户端利用节电轮询帧的持续时间/ID向接入点通过电源管理状态。\n\n**MAC 寻址**\nMAC地址分为两类：\n单地址，分配给网络中唯一终端的地址\n组地址，一个和多个终端使用的目的地址\n多播地址，上层实体用于定义终端逻辑组的地址\n广播地址，FF:FF:FF:FF:FF:FF\n\nMAC地址6字节：\n前三个字节，组织唯一标识符（OUI)\n后三个字节，扩展标识符\n\n源地址（SA)，原发终端的MAC地址；\n目的地址(DA)，二层帧最终目的地的MAC地址；\n发射机地址(TA)，发送端802.11无线接口的MAC地址\n接收机地址(RA)，接收端802.11无线接口的MAC地址\n\n\n**发往DS和来自DS字段**\n00  常用于管理帧和控制帧\n01  表示接入点向客户端发送802.11数据帧（下行传输）\n10  表示客户端向接入点发送802.11数据帧（上行传输）\n11  表示使用无线分布系统，需要4个地址，源和目的通过中间的发送和接收转接。\n\n**序列控制字段**\n两字节，在802.11 MSDU分片时使用。\n分片总是在帧突发中传输，较小分片会降低数据吞吐量。\n支持帧聚合和块确认的802.11n/ac网络不需要分片机制。\n\n**Qos控制字段**\n2字节，仅有Qos数据帧的帧头使用该字段。\n\n**HT控制字段**\n用于802.11n/ac发射机和接收机的链路自适应、发射波束成形等高级功能。\n\n### 802.11 MAC 帧体\n控制帧没有帧体。\n802.11管理帧又称MAC管理协议数据单元（MMPDU），不携带任何上层信息。帧体包含二层信息字段和信息原始。帧体没有加密。\n数据帧，携带上层信息，可以通过加密来保护。\nnull data的数据帧也没有帧体。特殊功能。\n\n\n### 802.11 MAC 帧尾\n携带整个帧数据完整性校验信息。\n帧校验失败，将导致帧重传。\n","slug":"CWNA-802-11-MAC-体系结构-二","published":1,"updated":"2022-02-15T09:35:19.515Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz631r0001h6fd9722gldu","content":"<h3 id=\"802-11-MAC-帧头\"><a href=\"#802-11-MAC-帧头\" class=\"headerlink\" title=\"802.11 MAC 帧头\"></a>802.11 MAC 帧头</h3><p>MAC帧头属于二层信息，二层信息没有加密，可以通过协议分析仪查看内容。<br>MAC帧头由9个字段构成，4个字段用于寻址，5个字段用于控制</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">帧控制</th>\n<th style=\"text-align:center\">持续时间/ID</th>\n<th style=\"text-align:center\">地址1</th>\n<th style=\"text-align:center\">地址2</th>\n<th style=\"text-align:center\">地址3</th>\n<th style=\"text-align:center\">序列控制</th>\n<th style=\"text-align:center\">地址4</th>\n<th style=\"text-align:center\">QoS控制</th>\n<th style=\"text-align:center\">HT控制</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2字节</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">0 or 6</td>\n<td style=\"text-align:center\">0 or 6</td>\n<td style=\"text-align:center\">0 or 2</td>\n<td style=\"text-align:center\">0 or 6</td>\n<td style=\"text-align:center\">0 or 2</td>\n<td style=\"text-align:center\">0 or 4</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>帧控制字段</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">协议版本</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">子类型</th>\n<th style=\"text-align:center\">发往DS</th>\n<th style=\"text-align:center\">来自DS</th>\n<th style=\"text-align:center\">更多分片</th>\n<th style=\"text-align:center\">重试</th>\n<th style=\"text-align:center\">电源管理</th>\n<th style=\"text-align:center\">更多数据</th>\n<th style=\"text-align:center\">受保护帧</th>\n<th style=\"text-align:center\">+HTC/顺序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>目前协议版本只有一种，值为0<br>帧类型四种：<br>管理帧（00）， 发现接入点并加入基本服务集<br>控制帧（01）， 确认传输成功并保留无线介质<br>数据帧（10）， 携带上层MSDU净荷<br>扩展帧（11）， 一种新的灵活帧格式，仅用于802.11ad</p>\n<p>由于帧类型多，类型和子类型字段共同决定帧类型，具体子类型可以抓控制包查看。</p>\n<p>重试字段，802.11 MAC帧头中最重要的字段之一。<br>0：表示首次传输<br>1：表示重传<br>可以通过重试字段设置为1的管理帧和数据帧计算二层重传率。</p>\n<p>受保护帧字段，标识数据帧的MSDU净荷是否加密。<br>0：未加密<br>1：加密</p>\n<p><strong>持续时间/ID字段</strong><br>多数情况，持续时间字段用于虚载波监听，用来设置NAV的倒数计数器；<br>个别情况，遗留的电源管理，客户端利用节电轮询帧的持续时间/ID向接入点通过电源管理状态。</p>\n<p><strong>MAC 寻址</strong><br>MAC地址分为两类：<br>单地址，分配给网络中唯一终端的地址<br>组地址，一个和多个终端使用的目的地址<br>多播地址，上层实体用于定义终端逻辑组的地址<br>广播地址，FF:FF:FF:FF:FF:FF</p>\n<p>MAC地址6字节：<br>前三个字节，组织唯一标识符（OUI)<br>后三个字节，扩展标识符</p>\n<p>源地址（SA)，原发终端的MAC地址；<br>目的地址(DA)，二层帧最终目的地的MAC地址；<br>发射机地址(TA)，发送端802.11无线接口的MAC地址<br>接收机地址(RA)，接收端802.11无线接口的MAC地址</p>\n<p><strong>发往DS和来自DS字段</strong><br>00  常用于管理帧和控制帧<br>01  表示接入点向客户端发送802.11数据帧（下行传输）<br>10  表示客户端向接入点发送802.11数据帧（上行传输）<br>11  表示使用无线分布系统，需要4个地址，源和目的通过中间的发送和接收转接。</p>\n<p><strong>序列控制字段</strong><br>两字节，在802.11 MSDU分片时使用。<br>分片总是在帧突发中传输，较小分片会降低数据吞吐量。<br>支持帧聚合和块确认的802.11n/ac网络不需要分片机制。</p>\n<p><strong>Qos控制字段</strong><br>2字节，仅有Qos数据帧的帧头使用该字段。</p>\n<p><strong>HT控制字段</strong><br>用于802.11n/ac发射机和接收机的链路自适应、发射波束成形等高级功能。</p>\n<h3 id=\"802-11-MAC-帧体\"><a href=\"#802-11-MAC-帧体\" class=\"headerlink\" title=\"802.11 MAC 帧体\"></a>802.11 MAC 帧体</h3><p>控制帧没有帧体。<br>802.11管理帧又称MAC管理协议数据单元（MMPDU），不携带任何上层信息。帧体包含二层信息字段和信息原始。帧体没有加密。<br>数据帧，携带上层信息，可以通过加密来保护。<br>null data的数据帧也没有帧体。特殊功能。</p>\n<h3 id=\"802-11-MAC-帧尾\"><a href=\"#802-11-MAC-帧尾\" class=\"headerlink\" title=\"802.11 MAC 帧尾\"></a>802.11 MAC 帧尾</h3><p>携带整个帧数据完整性校验信息。<br>帧校验失败，将导致帧重传。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"802-11-MAC-帧头\"><a href=\"#802-11-MAC-帧头\" class=\"headerlink\" title=\"802.11 MAC 帧头\"></a>802.11 MAC 帧头</h3><p>MAC帧头属于二层信息，二层信息没有加密，可以通过协议分析仪查看内容。<br>MAC帧头由9个字段构成，4个字段用于寻址，5个字段用于控制</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">帧控制</th>\n<th style=\"text-align:center\">持续时间/ID</th>\n<th style=\"text-align:center\">地址1</th>\n<th style=\"text-align:center\">地址2</th>\n<th style=\"text-align:center\">地址3</th>\n<th style=\"text-align:center\">序列控制</th>\n<th style=\"text-align:center\">地址4</th>\n<th style=\"text-align:center\">QoS控制</th>\n<th style=\"text-align:center\">HT控制</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2字节</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">0 or 6</td>\n<td style=\"text-align:center\">0 or 6</td>\n<td style=\"text-align:center\">0 or 2</td>\n<td style=\"text-align:center\">0 or 6</td>\n<td style=\"text-align:center\">0 or 2</td>\n<td style=\"text-align:center\">0 or 4</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p><strong>帧控制字段</strong></p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">协议版本</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">子类型</th>\n<th style=\"text-align:center\">发往DS</th>\n<th style=\"text-align:center\">来自DS</th>\n<th style=\"text-align:center\">更多分片</th>\n<th style=\"text-align:center\">重试</th>\n<th style=\"text-align:center\">电源管理</th>\n<th style=\"text-align:center\">更多数据</th>\n<th style=\"text-align:center\">受保护帧</th>\n<th style=\"text-align:center\">+HTC/顺序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">1</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>目前协议版本只有一种，值为0<br>帧类型四种：<br>管理帧（00）， 发现接入点并加入基本服务集<br>控制帧（01）， 确认传输成功并保留无线介质<br>数据帧（10）， 携带上层MSDU净荷<br>扩展帧（11）， 一种新的灵活帧格式，仅用于802.11ad</p>\n<p>由于帧类型多，类型和子类型字段共同决定帧类型，具体子类型可以抓控制包查看。</p>\n<p>重试字段，802.11 MAC帧头中最重要的字段之一。<br>0：表示首次传输<br>1：表示重传<br>可以通过重试字段设置为1的管理帧和数据帧计算二层重传率。</p>\n<p>受保护帧字段，标识数据帧的MSDU净荷是否加密。<br>0：未加密<br>1：加密</p>\n<p><strong>持续时间/ID字段</strong><br>多数情况，持续时间字段用于虚载波监听，用来设置NAV的倒数计数器；<br>个别情况，遗留的电源管理，客户端利用节电轮询帧的持续时间/ID向接入点通过电源管理状态。</p>\n<p><strong>MAC 寻址</strong><br>MAC地址分为两类：<br>单地址，分配给网络中唯一终端的地址<br>组地址，一个和多个终端使用的目的地址<br>多播地址，上层实体用于定义终端逻辑组的地址<br>广播地址，FF:FF:FF:FF:FF:FF</p>\n<p>MAC地址6字节：<br>前三个字节，组织唯一标识符（OUI)<br>后三个字节，扩展标识符</p>\n<p>源地址（SA)，原发终端的MAC地址；<br>目的地址(DA)，二层帧最终目的地的MAC地址；<br>发射机地址(TA)，发送端802.11无线接口的MAC地址<br>接收机地址(RA)，接收端802.11无线接口的MAC地址</p>\n<p><strong>发往DS和来自DS字段</strong><br>00  常用于管理帧和控制帧<br>01  表示接入点向客户端发送802.11数据帧（下行传输）<br>10  表示客户端向接入点发送802.11数据帧（上行传输）<br>11  表示使用无线分布系统，需要4个地址，源和目的通过中间的发送和接收转接。</p>\n<p><strong>序列控制字段</strong><br>两字节，在802.11 MSDU分片时使用。<br>分片总是在帧突发中传输，较小分片会降低数据吞吐量。<br>支持帧聚合和块确认的802.11n/ac网络不需要分片机制。</p>\n<p><strong>Qos控制字段</strong><br>2字节，仅有Qos数据帧的帧头使用该字段。</p>\n<p><strong>HT控制字段</strong><br>用于802.11n/ac发射机和接收机的链路自适应、发射波束成形等高级功能。</p>\n<h3 id=\"802-11-MAC-帧体\"><a href=\"#802-11-MAC-帧体\" class=\"headerlink\" title=\"802.11 MAC 帧体\"></a>802.11 MAC 帧体</h3><p>控制帧没有帧体。<br>802.11管理帧又称MAC管理协议数据单元（MMPDU），不携带任何上层信息。帧体包含二层信息字段和信息原始。帧体没有加密。<br>数据帧，携带上层信息，可以通过加密来保护。<br>null data的数据帧也没有帧体。特殊功能。</p>\n<h3 id=\"802-11-MAC-帧尾\"><a href=\"#802-11-MAC-帧尾\" class=\"headerlink\" title=\"802.11 MAC 帧尾\"></a>802.11 MAC 帧尾</h3><p>携带整个帧数据完整性校验信息。<br>帧校验失败，将导致帧重传。</p>\n"},{"title":"CWNA:802.11介质访问（二）","date":"2022-02-14T02:00:36.000Z","_content":"\n### 点协调功能\nPCF是一种可选的介质访问方法，IEEE认为PCF已经过时，可能今后会将其删除。\n\n### 混合协调功能\n定义服务质量的802.11e增加了混合协调功能。\nHCF将DCF和PCF功能相结合并加以改进，定义了两种信道访问方法：增强型分布式信道访问（EDCA）和HCF受控信道访问（HCCA)\n前面的DCF和PCF介质争用机制只允许802.11无线接口传输单个帧。\nHCF定义的机制允许802.11无线接口通过射频介质传输多个帧。当兼容HCF的无线接口争用介质时，无线接口将获得帧发送时间，这段时间称为发送机会（TXOP）。\n在此期间，802.11无线接口可以通过帧突发（frame burst)发送多个帧，帧之间通过SIFS隔开，以确保其他无线接口不会在帧突发期间占用介质。\n\n**增强型分布式信道访问**\n提供差异化访问的无线介质访问方法，能将流量定向到4种访问类别的QoS优先级队列。优先级标记提供了在MAC子层实现QoS的机制。\nEDMAC基于8个用户优先级字段定义了4种访问类别，优先级从低到高：\nAC_BK(背景)\nAC_BE（尽力而为)\nAC_VI(视频)\nAC_VO(语音)\n\n每种访问类别经过改进的增强型分布式信道访问功能争用介质。拥有高优先级的帧具有最小退避值，因此机会更多。\n\n**HCF受控信道访问**\n内置在接入点中，具有更高的无线介质访问优先级。\n\n### Wi-Fi 多媒体\n语音，音频，视频等应用流量对延迟和抖动的容忍度较低，需要比标准数据流量更高的优先级。\nWMM基于EDCA机制，因此以太网的802.1D优先级标记用于将流量定向到4种访问类别的优先级队列。\n\n### 占用时长公平性\n由于存在高速设备和低速设备争用无线介质会导致低速设备占用较多传输时长，\n占用时长公平性，使得高数设备和低速设备有均等的时长，而非均等的机会。这样高速设备能够更多机会访问介质，最终提升无线局域网的性能、容量和吞吐量。\n它致力于避免速度较慢设备影响网络的整体性能。\n\n","source":"_posts/CWNA-802-11介质访问（二）.md","raw":"---\ntitle: 'CWNA:802.11介质访问（二）'\ndate: 2022-02-14 10:00:36\ntags: 'Wi-Fi'\n---\n\n### 点协调功能\nPCF是一种可选的介质访问方法，IEEE认为PCF已经过时，可能今后会将其删除。\n\n### 混合协调功能\n定义服务质量的802.11e增加了混合协调功能。\nHCF将DCF和PCF功能相结合并加以改进，定义了两种信道访问方法：增强型分布式信道访问（EDCA）和HCF受控信道访问（HCCA)\n前面的DCF和PCF介质争用机制只允许802.11无线接口传输单个帧。\nHCF定义的机制允许802.11无线接口通过射频介质传输多个帧。当兼容HCF的无线接口争用介质时，无线接口将获得帧发送时间，这段时间称为发送机会（TXOP）。\n在此期间，802.11无线接口可以通过帧突发（frame burst)发送多个帧，帧之间通过SIFS隔开，以确保其他无线接口不会在帧突发期间占用介质。\n\n**增强型分布式信道访问**\n提供差异化访问的无线介质访问方法，能将流量定向到4种访问类别的QoS优先级队列。优先级标记提供了在MAC子层实现QoS的机制。\nEDMAC基于8个用户优先级字段定义了4种访问类别，优先级从低到高：\nAC_BK(背景)\nAC_BE（尽力而为)\nAC_VI(视频)\nAC_VO(语音)\n\n每种访问类别经过改进的增强型分布式信道访问功能争用介质。拥有高优先级的帧具有最小退避值，因此机会更多。\n\n**HCF受控信道访问**\n内置在接入点中，具有更高的无线介质访问优先级。\n\n### Wi-Fi 多媒体\n语音，音频，视频等应用流量对延迟和抖动的容忍度较低，需要比标准数据流量更高的优先级。\nWMM基于EDCA机制，因此以太网的802.1D优先级标记用于将流量定向到4种访问类别的优先级队列。\n\n### 占用时长公平性\n由于存在高速设备和低速设备争用无线介质会导致低速设备占用较多传输时长，\n占用时长公平性，使得高数设备和低速设备有均等的时长，而非均等的机会。这样高速设备能够更多机会访问介质，最终提升无线局域网的性能、容量和吞吐量。\n它致力于避免速度较慢设备影响网络的整体性能。\n\n","slug":"CWNA-802-11介质访问（二）","published":1,"updated":"2022-02-14T07:21:09.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz631u0003h6fd6bo85bb8","content":"<h3 id=\"点协调功能\"><a href=\"#点协调功能\" class=\"headerlink\" title=\"点协调功能\"></a>点协调功能</h3><p>PCF是一种可选的介质访问方法，IEEE认为PCF已经过时，可能今后会将其删除。</p>\n<h3 id=\"混合协调功能\"><a href=\"#混合协调功能\" class=\"headerlink\" title=\"混合协调功能\"></a>混合协调功能</h3><p>定义服务质量的802.11e增加了混合协调功能。<br>HCF将DCF和PCF功能相结合并加以改进，定义了两种信道访问方法：增强型分布式信道访问（EDCA）和HCF受控信道访问（HCCA)<br>前面的DCF和PCF介质争用机制只允许802.11无线接口传输单个帧。<br>HCF定义的机制允许802.11无线接口通过射频介质传输多个帧。当兼容HCF的无线接口争用介质时，无线接口将获得帧发送时间，这段时间称为发送机会（TXOP）。<br>在此期间，802.11无线接口可以通过帧突发（frame burst)发送多个帧，帧之间通过SIFS隔开，以确保其他无线接口不会在帧突发期间占用介质。</p>\n<p><strong>增强型分布式信道访问</strong><br>提供差异化访问的无线介质访问方法，能将流量定向到4种访问类别的QoS优先级队列。优先级标记提供了在MAC子层实现QoS的机制。<br>EDMAC基于8个用户优先级字段定义了4种访问类别，优先级从低到高：<br>AC_BK(背景)<br>AC_BE（尽力而为)<br>AC_VI(视频)<br>AC_VO(语音)</p>\n<p>每种访问类别经过改进的增强型分布式信道访问功能争用介质。拥有高优先级的帧具有最小退避值，因此机会更多。</p>\n<p><strong>HCF受控信道访问</strong><br>内置在接入点中，具有更高的无线介质访问优先级。</p>\n<h3 id=\"Wi-Fi-多媒体\"><a href=\"#Wi-Fi-多媒体\" class=\"headerlink\" title=\"Wi-Fi 多媒体\"></a>Wi-Fi 多媒体</h3><p>语音，音频，视频等应用流量对延迟和抖动的容忍度较低，需要比标准数据流量更高的优先级。<br>WMM基于EDCA机制，因此以太网的802.1D优先级标记用于将流量定向到4种访问类别的优先级队列。</p>\n<h3 id=\"占用时长公平性\"><a href=\"#占用时长公平性\" class=\"headerlink\" title=\"占用时长公平性\"></a>占用时长公平性</h3><p>由于存在高速设备和低速设备争用无线介质会导致低速设备占用较多传输时长，<br>占用时长公平性，使得高数设备和低速设备有均等的时长，而非均等的机会。这样高速设备能够更多机会访问介质，最终提升无线局域网的性能、容量和吞吐量。<br>它致力于避免速度较慢设备影响网络的整体性能。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"点协调功能\"><a href=\"#点协调功能\" class=\"headerlink\" title=\"点协调功能\"></a>点协调功能</h3><p>PCF是一种可选的介质访问方法，IEEE认为PCF已经过时，可能今后会将其删除。</p>\n<h3 id=\"混合协调功能\"><a href=\"#混合协调功能\" class=\"headerlink\" title=\"混合协调功能\"></a>混合协调功能</h3><p>定义服务质量的802.11e增加了混合协调功能。<br>HCF将DCF和PCF功能相结合并加以改进，定义了两种信道访问方法：增强型分布式信道访问（EDCA）和HCF受控信道访问（HCCA)<br>前面的DCF和PCF介质争用机制只允许802.11无线接口传输单个帧。<br>HCF定义的机制允许802.11无线接口通过射频介质传输多个帧。当兼容HCF的无线接口争用介质时，无线接口将获得帧发送时间，这段时间称为发送机会（TXOP）。<br>在此期间，802.11无线接口可以通过帧突发（frame burst)发送多个帧，帧之间通过SIFS隔开，以确保其他无线接口不会在帧突发期间占用介质。</p>\n<p><strong>增强型分布式信道访问</strong><br>提供差异化访问的无线介质访问方法，能将流量定向到4种访问类别的QoS优先级队列。优先级标记提供了在MAC子层实现QoS的机制。<br>EDMAC基于8个用户优先级字段定义了4种访问类别，优先级从低到高：<br>AC_BK(背景)<br>AC_BE（尽力而为)<br>AC_VI(视频)<br>AC_VO(语音)</p>\n<p>每种访问类别经过改进的增强型分布式信道访问功能争用介质。拥有高优先级的帧具有最小退避值，因此机会更多。</p>\n<p><strong>HCF受控信道访问</strong><br>内置在接入点中，具有更高的无线介质访问优先级。</p>\n<h3 id=\"Wi-Fi-多媒体\"><a href=\"#Wi-Fi-多媒体\" class=\"headerlink\" title=\"Wi-Fi 多媒体\"></a>Wi-Fi 多媒体</h3><p>语音，音频，视频等应用流量对延迟和抖动的容忍度较低，需要比标准数据流量更高的优先级。<br>WMM基于EDCA机制，因此以太网的802.1D优先级标记用于将流量定向到4种访问类别的优先级队列。</p>\n<h3 id=\"占用时长公平性\"><a href=\"#占用时长公平性\" class=\"headerlink\" title=\"占用时长公平性\"></a>占用时长公平性</h3><p>由于存在高速设备和低速设备争用无线介质会导致低速设备占用较多传输时长，<br>占用时长公平性，使得高数设备和低速设备有均等的时长，而非均等的机会。这样高速设备能够更多机会访问介质，最终提升无线局域网的性能、容量和吞吐量。<br>它致力于避免速度较慢设备影响网络的整体性能。</p>\n"},{"title":"CWNA:802.11介质访问","date":"2022-02-10T05:37:53.000Z","_content":"CSMA/CA与 CSMA/CD\n冲突检测\n分布式协调功能\n> 物理载波监听\n> 虚拟载波监听\n> 伪随机退避计时器\n> 帧间间隔\n\n点协调功能\n混合协调功能\n> 增强型分布式信道访问\n> HCF受控信道访问\n\nWi-Fi多媒体\n占用时长公平性\n\n### CSMA/CD 与 CSMA/CA\n802.3以太网使用带冲突检测的载波监听多路访问（CSMA/CD)的介质争用方法。\n802.11无线局域网使用带冲突避免的载波监听多路访问（CSMA/CA）的介质争用方法。\n\n**CSMA/CD**\n有线节点首先检查另一个节点是否在传输数据。如果其他节点没有占用以太网介质，节点将发送第一个信息比特。\n如果没有检测到冲突，则节点继续发送其他信息比特，同时继续检测是否存在冲突。\n如果检测到冲突，则节点计算一个随机等待时间，然后重新开始上述过程。\n\n**CSMA/CA**\n802.11节点无法同时发送和接收数据，半双工的特性决定了采用CSMA/CA\n终端确定其他终端没有传输数据时，802.11无线接口选择一个随机的退避值，并根据退避值等待一段额外的时间再开始传输。\n在此期间，终端继续监听介质，确保没有其他终端开始传输。\n\n载波监听，确定介质是否繁忙；\n多路访问，确保所有无线接口都能获得公平使用介质的机会（一次仅有一个无线接口可以传输）\n冲突避免，任何给定时间，仅有一个无线接口能访问介质，以避免可能存在的冲突。\n\n\n### 冲突检测\n所有802.11单播帧必须经过确认，而广播帧和多播帧不需要确认。\n如果无线接口没有收到确认帧，则说明传输过程中可能存在冲突。\n确认帧相当于验证802.11单播帧是否成功交付的机制：如果无法提供交付证明，原无线接口假定传输失败并**重传单播帧**。\n\n\n### 分布式协调功能\nDCF是无线局域网通信的基本访问方法，而CSMA/CA过程是DCF的基础。\nCSMA/CA协议主要包括4种机制：\n> 物理载波监听         确定无线介质是否繁忙\n> 虚拟载波监听         确定无线介质是否繁忙\n> 伪随机退避计时器     争用介质\n> 帧间间隔            提供访问无线介质的优先级\n\n4种机制同时实施，旨在确保仅有一个802.11无线接口使用半双工介质传输数据。\n\n**物理载波监听**\n所有没有收发数据的终端都会持续进行物理载波监听。它是监听信道，查看是否有其他射频传输占用信道。\n确定是否存在需要终端接收的帧传输。如果介质繁忙，无线接口将尝试与传输同步。\n确定介质在传输开始前是否繁忙。仅当介质空闲时，终端才能传输数据。\n\n802.11无线接口通过空闲信道评估（CCA)实现这个目的。它通过两种空闲信道评估阈值实现。\n**信号检测阈值**用于识别802.11无线接口的前同步码传输。如果接收信号高于本底噪声4dB左右，无线接口通常能解码任何收到的802.11前同部门传输。\n**能量检测阈值**用于在空闲信道评估期间检测其他类型的射频传输。能量检测阈值比信号检测阈值高20dB\n只有检测到两个阈值都空闲时，才允许传输。  如何判定繁忙？这是个问题。\n\n**虚拟载波监听**\n802.11帧头包括一个持续时间/ID字段。客户端发送单播帧时，该字段值介于0和32767之间。它表示一个活动帧交换过程所需的时间，在此期间，其他无线接口不会中断传输过程。\n这个值用于重置其他终端的网络分配向量计时器。\n\n虚载波监听使用称为网络分配向量（NAV)的计时器机制，NAV计时器根据从前一个帧传输中观察到的持续时间值来预测介质今后的流量。\n\n工作方式：\n监听终端在侦听到其他终端的帧传输时将查看帧头，并确定持续时间/ID字段是否包含持续时间值或ID值。如果字段中包含持续时间值，监听终端将自己的NAV计时器设置为该值，\n然后使用NAV作为倒数计时器。在倒计时减少到0之前，终端认为射频介质处于繁忙状态。传输数据的802.11无线接口通过这个过程通知其他终端，将在一段时间（持续时间/ID)\n值内占用介质。没有传输数据的终端，等NAV减少为0再开始争用介质的使用权。再NAV计时器到达0之前，终端无法争用介质。\n它是一种二层载波监听机制。\n\n虚载波监听属于二层防御措施，物理载波监听属于一层防御措施。\n\n**伪随机退避计时器**\n伪随机退避计时器是终端在传输前最后使用的计时器。退避计时器减少到0时，终端重新评估信道状态，如果信道空闲，则开始传输数据。\n如果物理载波监听或虚拟载波监听机制发现介质繁忙，则中止递减退避计数并保持退避计数的值。退避技术减少到0时，开始传输。\n> OFDM终端从0~15的争用窗口中选择一个随机数，假如是4\n> 终端将随机数与时隙值9微妙相乘\n> 如果在时隙内没有介质活动，退避计数器将减少一个时隙\n> 退避计数递减至0\n> 终端执行最后一次信道评估，如果空闲，开始传输。\n> 如果信道繁忙，终端将推迟一个时隙，然后再次执行空闲信道评估，如果空闲，开始传输。\n\n伪随机数保证了各个终端都有机会。\n在复杂环境中，重传的终端的伪随机退避计将越来越大，直至最大值。\n\n**帧间间隔**\n无线帧传输之间的一段时间，共10种，时间从短到长排列\n> 缩减的帧间间隔（RIFS),优先级最高。\n> 短帧帧间间隔（SIFS)，优先级第二。\n> PCF帧间间隔(PIFS)，优先级中等。\n> DCF帧间间隔(DIFS)，优先级最低\n> 仲裁帧间间隔(AIFS), 由QoS终端使用\n> 扩展的帧间将(EIFS)，在收到损坏的帧后使用。\n\n帧间间隔用于确定随后传输的802.11流量类型，也可以作为虚载波监听的备份机制。\n\n","source":"_posts/CWNA-802-11介质访问.md","raw":"---\ntitle: 'CWNA:802.11介质访问'\ndate: 2022-02-10 13:37:53\ntags: 'Wi-Fi'\n---\nCSMA/CA与 CSMA/CD\n冲突检测\n分布式协调功能\n> 物理载波监听\n> 虚拟载波监听\n> 伪随机退避计时器\n> 帧间间隔\n\n点协调功能\n混合协调功能\n> 增强型分布式信道访问\n> HCF受控信道访问\n\nWi-Fi多媒体\n占用时长公平性\n\n### CSMA/CD 与 CSMA/CA\n802.3以太网使用带冲突检测的载波监听多路访问（CSMA/CD)的介质争用方法。\n802.11无线局域网使用带冲突避免的载波监听多路访问（CSMA/CA）的介质争用方法。\n\n**CSMA/CD**\n有线节点首先检查另一个节点是否在传输数据。如果其他节点没有占用以太网介质，节点将发送第一个信息比特。\n如果没有检测到冲突，则节点继续发送其他信息比特，同时继续检测是否存在冲突。\n如果检测到冲突，则节点计算一个随机等待时间，然后重新开始上述过程。\n\n**CSMA/CA**\n802.11节点无法同时发送和接收数据，半双工的特性决定了采用CSMA/CA\n终端确定其他终端没有传输数据时，802.11无线接口选择一个随机的退避值，并根据退避值等待一段额外的时间再开始传输。\n在此期间，终端继续监听介质，确保没有其他终端开始传输。\n\n载波监听，确定介质是否繁忙；\n多路访问，确保所有无线接口都能获得公平使用介质的机会（一次仅有一个无线接口可以传输）\n冲突避免，任何给定时间，仅有一个无线接口能访问介质，以避免可能存在的冲突。\n\n\n### 冲突检测\n所有802.11单播帧必须经过确认，而广播帧和多播帧不需要确认。\n如果无线接口没有收到确认帧，则说明传输过程中可能存在冲突。\n确认帧相当于验证802.11单播帧是否成功交付的机制：如果无法提供交付证明，原无线接口假定传输失败并**重传单播帧**。\n\n\n### 分布式协调功能\nDCF是无线局域网通信的基本访问方法，而CSMA/CA过程是DCF的基础。\nCSMA/CA协议主要包括4种机制：\n> 物理载波监听         确定无线介质是否繁忙\n> 虚拟载波监听         确定无线介质是否繁忙\n> 伪随机退避计时器     争用介质\n> 帧间间隔            提供访问无线介质的优先级\n\n4种机制同时实施，旨在确保仅有一个802.11无线接口使用半双工介质传输数据。\n\n**物理载波监听**\n所有没有收发数据的终端都会持续进行物理载波监听。它是监听信道，查看是否有其他射频传输占用信道。\n确定是否存在需要终端接收的帧传输。如果介质繁忙，无线接口将尝试与传输同步。\n确定介质在传输开始前是否繁忙。仅当介质空闲时，终端才能传输数据。\n\n802.11无线接口通过空闲信道评估（CCA)实现这个目的。它通过两种空闲信道评估阈值实现。\n**信号检测阈值**用于识别802.11无线接口的前同步码传输。如果接收信号高于本底噪声4dB左右，无线接口通常能解码任何收到的802.11前同部门传输。\n**能量检测阈值**用于在空闲信道评估期间检测其他类型的射频传输。能量检测阈值比信号检测阈值高20dB\n只有检测到两个阈值都空闲时，才允许传输。  如何判定繁忙？这是个问题。\n\n**虚拟载波监听**\n802.11帧头包括一个持续时间/ID字段。客户端发送单播帧时，该字段值介于0和32767之间。它表示一个活动帧交换过程所需的时间，在此期间，其他无线接口不会中断传输过程。\n这个值用于重置其他终端的网络分配向量计时器。\n\n虚载波监听使用称为网络分配向量（NAV)的计时器机制，NAV计时器根据从前一个帧传输中观察到的持续时间值来预测介质今后的流量。\n\n工作方式：\n监听终端在侦听到其他终端的帧传输时将查看帧头，并确定持续时间/ID字段是否包含持续时间值或ID值。如果字段中包含持续时间值，监听终端将自己的NAV计时器设置为该值，\n然后使用NAV作为倒数计时器。在倒计时减少到0之前，终端认为射频介质处于繁忙状态。传输数据的802.11无线接口通过这个过程通知其他终端，将在一段时间（持续时间/ID)\n值内占用介质。没有传输数据的终端，等NAV减少为0再开始争用介质的使用权。再NAV计时器到达0之前，终端无法争用介质。\n它是一种二层载波监听机制。\n\n虚载波监听属于二层防御措施，物理载波监听属于一层防御措施。\n\n**伪随机退避计时器**\n伪随机退避计时器是终端在传输前最后使用的计时器。退避计时器减少到0时，终端重新评估信道状态，如果信道空闲，则开始传输数据。\n如果物理载波监听或虚拟载波监听机制发现介质繁忙，则中止递减退避计数并保持退避计数的值。退避技术减少到0时，开始传输。\n> OFDM终端从0~15的争用窗口中选择一个随机数，假如是4\n> 终端将随机数与时隙值9微妙相乘\n> 如果在时隙内没有介质活动，退避计数器将减少一个时隙\n> 退避计数递减至0\n> 终端执行最后一次信道评估，如果空闲，开始传输。\n> 如果信道繁忙，终端将推迟一个时隙，然后再次执行空闲信道评估，如果空闲，开始传输。\n\n伪随机数保证了各个终端都有机会。\n在复杂环境中，重传的终端的伪随机退避计将越来越大，直至最大值。\n\n**帧间间隔**\n无线帧传输之间的一段时间，共10种，时间从短到长排列\n> 缩减的帧间间隔（RIFS),优先级最高。\n> 短帧帧间间隔（SIFS)，优先级第二。\n> PCF帧间间隔(PIFS)，优先级中等。\n> DCF帧间间隔(DIFS)，优先级最低\n> 仲裁帧间间隔(AIFS), 由QoS终端使用\n> 扩展的帧间将(EIFS)，在收到损坏的帧后使用。\n\n帧间间隔用于确定随后传输的802.11流量类型，也可以作为虚载波监听的备份机制。\n\n","slug":"CWNA-802-11介质访问","published":1,"updated":"2022-02-11T09:54:20.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz631v0004h6fde6sf04ff","content":"<p>CSMA/CA与 CSMA/CD<br>冲突检测<br>分布式协调功能</p>\n<blockquote>\n<p>物理载波监听<br>虚拟载波监听<br>伪随机退避计时器<br>帧间间隔</p>\n</blockquote>\n<p>点协调功能<br>混合协调功能</p>\n<blockquote>\n<p>增强型分布式信道访问<br>HCF受控信道访问</p>\n</blockquote>\n<p>Wi-Fi多媒体<br>占用时长公平性</p>\n<h3 id=\"CSMA-CD-与-CSMA-CA\"><a href=\"#CSMA-CD-与-CSMA-CA\" class=\"headerlink\" title=\"CSMA/CD 与 CSMA/CA\"></a>CSMA/CD 与 CSMA/CA</h3><p>802.3以太网使用带冲突检测的载波监听多路访问（CSMA/CD)的介质争用方法。<br>802.11无线局域网使用带冲突避免的载波监听多路访问（CSMA/CA）的介质争用方法。</p>\n<p><strong>CSMA/CD</strong><br>有线节点首先检查另一个节点是否在传输数据。如果其他节点没有占用以太网介质，节点将发送第一个信息比特。<br>如果没有检测到冲突，则节点继续发送其他信息比特，同时继续检测是否存在冲突。<br>如果检测到冲突，则节点计算一个随机等待时间，然后重新开始上述过程。</p>\n<p><strong>CSMA/CA</strong><br>802.11节点无法同时发送和接收数据，半双工的特性决定了采用CSMA/CA<br>终端确定其他终端没有传输数据时，802.11无线接口选择一个随机的退避值，并根据退避值等待一段额外的时间再开始传输。<br>在此期间，终端继续监听介质，确保没有其他终端开始传输。</p>\n<p>载波监听，确定介质是否繁忙；<br>多路访问，确保所有无线接口都能获得公平使用介质的机会（一次仅有一个无线接口可以传输）<br>冲突避免，任何给定时间，仅有一个无线接口能访问介质，以避免可能存在的冲突。</p>\n<h3 id=\"冲突检测\"><a href=\"#冲突检测\" class=\"headerlink\" title=\"冲突检测\"></a>冲突检测</h3><p>所有802.11单播帧必须经过确认，而广播帧和多播帧不需要确认。<br>如果无线接口没有收到确认帧，则说明传输过程中可能存在冲突。<br>确认帧相当于验证802.11单播帧是否成功交付的机制：如果无法提供交付证明，原无线接口假定传输失败并<strong>重传单播帧</strong>。</p>\n<h3 id=\"分布式协调功能\"><a href=\"#分布式协调功能\" class=\"headerlink\" title=\"分布式协调功能\"></a>分布式协调功能</h3><p>DCF是无线局域网通信的基本访问方法，而CSMA/CA过程是DCF的基础。<br>CSMA/CA协议主要包括4种机制：</p>\n<blockquote>\n<p>物理载波监听         确定无线介质是否繁忙<br>虚拟载波监听         确定无线介质是否繁忙<br>伪随机退避计时器     争用介质<br>帧间间隔            提供访问无线介质的优先级</p>\n</blockquote>\n<p>4种机制同时实施，旨在确保仅有一个802.11无线接口使用半双工介质传输数据。</p>\n<p><strong>物理载波监听</strong><br>所有没有收发数据的终端都会持续进行物理载波监听。它是监听信道，查看是否有其他射频传输占用信道。<br>确定是否存在需要终端接收的帧传输。如果介质繁忙，无线接口将尝试与传输同步。<br>确定介质在传输开始前是否繁忙。仅当介质空闲时，终端才能传输数据。</p>\n<p>802.11无线接口通过空闲信道评估（CCA)实现这个目的。它通过两种空闲信道评估阈值实现。<br><strong>信号检测阈值</strong>用于识别802.11无线接口的前同步码传输。如果接收信号高于本底噪声4dB左右，无线接口通常能解码任何收到的802.11前同部门传输。<br><strong>能量检测阈值</strong>用于在空闲信道评估期间检测其他类型的射频传输。能量检测阈值比信号检测阈值高20dB<br>只有检测到两个阈值都空闲时，才允许传输。  如何判定繁忙？这是个问题。</p>\n<p><strong>虚拟载波监听</strong><br>802.11帧头包括一个持续时间/ID字段。客户端发送单播帧时，该字段值介于0和32767之间。它表示一个活动帧交换过程所需的时间，在此期间，其他无线接口不会中断传输过程。<br>这个值用于重置其他终端的网络分配向量计时器。</p>\n<p>虚载波监听使用称为网络分配向量（NAV)的计时器机制，NAV计时器根据从前一个帧传输中观察到的持续时间值来预测介质今后的流量。</p>\n<p>工作方式：<br>监听终端在侦听到其他终端的帧传输时将查看帧头，并确定持续时间/ID字段是否包含持续时间值或ID值。如果字段中包含持续时间值，监听终端将自己的NAV计时器设置为该值，<br>然后使用NAV作为倒数计时器。在倒计时减少到0之前，终端认为射频介质处于繁忙状态。传输数据的802.11无线接口通过这个过程通知其他终端，将在一段时间（持续时间/ID)<br>值内占用介质。没有传输数据的终端，等NAV减少为0再开始争用介质的使用权。再NAV计时器到达0之前，终端无法争用介质。<br>它是一种二层载波监听机制。</p>\n<p>虚载波监听属于二层防御措施，物理载波监听属于一层防御措施。</p>\n<p><strong>伪随机退避计时器</strong><br>伪随机退避计时器是终端在传输前最后使用的计时器。退避计时器减少到0时，终端重新评估信道状态，如果信道空闲，则开始传输数据。<br>如果物理载波监听或虚拟载波监听机制发现介质繁忙，则中止递减退避计数并保持退避计数的值。退避技术减少到0时，开始传输。</p>\n<blockquote>\n<p>OFDM终端从0~15的争用窗口中选择一个随机数，假如是4<br>终端将随机数与时隙值9微妙相乘<br>如果在时隙内没有介质活动，退避计数器将减少一个时隙<br>退避计数递减至0<br>终端执行最后一次信道评估，如果空闲，开始传输。<br>如果信道繁忙，终端将推迟一个时隙，然后再次执行空闲信道评估，如果空闲，开始传输。</p>\n</blockquote>\n<p>伪随机数保证了各个终端都有机会。<br>在复杂环境中，重传的终端的伪随机退避计将越来越大，直至最大值。</p>\n<p><strong>帧间间隔</strong><br>无线帧传输之间的一段时间，共10种，时间从短到长排列</p>\n<blockquote>\n<p>缩减的帧间间隔（RIFS),优先级最高。<br>短帧帧间间隔（SIFS)，优先级第二。<br>PCF帧间间隔(PIFS)，优先级中等。<br>DCF帧间间隔(DIFS)，优先级最低<br>仲裁帧间间隔(AIFS), 由QoS终端使用<br>扩展的帧间将(EIFS)，在收到损坏的帧后使用。</p>\n</blockquote>\n<p>帧间间隔用于确定随后传输的802.11流量类型，也可以作为虚载波监听的备份机制。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>CSMA/CA与 CSMA/CD<br>冲突检测<br>分布式协调功能</p>\n<blockquote>\n<p>物理载波监听<br>虚拟载波监听<br>伪随机退避计时器<br>帧间间隔</p>\n</blockquote>\n<p>点协调功能<br>混合协调功能</p>\n<blockquote>\n<p>增强型分布式信道访问<br>HCF受控信道访问</p>\n</blockquote>\n<p>Wi-Fi多媒体<br>占用时长公平性</p>\n<h3 id=\"CSMA-CD-与-CSMA-CA\"><a href=\"#CSMA-CD-与-CSMA-CA\" class=\"headerlink\" title=\"CSMA/CD 与 CSMA/CA\"></a>CSMA/CD 与 CSMA/CA</h3><p>802.3以太网使用带冲突检测的载波监听多路访问（CSMA/CD)的介质争用方法。<br>802.11无线局域网使用带冲突避免的载波监听多路访问（CSMA/CA）的介质争用方法。</p>\n<p><strong>CSMA/CD</strong><br>有线节点首先检查另一个节点是否在传输数据。如果其他节点没有占用以太网介质，节点将发送第一个信息比特。<br>如果没有检测到冲突，则节点继续发送其他信息比特，同时继续检测是否存在冲突。<br>如果检测到冲突，则节点计算一个随机等待时间，然后重新开始上述过程。</p>\n<p><strong>CSMA/CA</strong><br>802.11节点无法同时发送和接收数据，半双工的特性决定了采用CSMA/CA<br>终端确定其他终端没有传输数据时，802.11无线接口选择一个随机的退避值，并根据退避值等待一段额外的时间再开始传输。<br>在此期间，终端继续监听介质，确保没有其他终端开始传输。</p>\n<p>载波监听，确定介质是否繁忙；<br>多路访问，确保所有无线接口都能获得公平使用介质的机会（一次仅有一个无线接口可以传输）<br>冲突避免，任何给定时间，仅有一个无线接口能访问介质，以避免可能存在的冲突。</p>\n<h3 id=\"冲突检测\"><a href=\"#冲突检测\" class=\"headerlink\" title=\"冲突检测\"></a>冲突检测</h3><p>所有802.11单播帧必须经过确认，而广播帧和多播帧不需要确认。<br>如果无线接口没有收到确认帧，则说明传输过程中可能存在冲突。<br>确认帧相当于验证802.11单播帧是否成功交付的机制：如果无法提供交付证明，原无线接口假定传输失败并<strong>重传单播帧</strong>。</p>\n<h3 id=\"分布式协调功能\"><a href=\"#分布式协调功能\" class=\"headerlink\" title=\"分布式协调功能\"></a>分布式协调功能</h3><p>DCF是无线局域网通信的基本访问方法，而CSMA/CA过程是DCF的基础。<br>CSMA/CA协议主要包括4种机制：</p>\n<blockquote>\n<p>物理载波监听         确定无线介质是否繁忙<br>虚拟载波监听         确定无线介质是否繁忙<br>伪随机退避计时器     争用介质<br>帧间间隔            提供访问无线介质的优先级</p>\n</blockquote>\n<p>4种机制同时实施，旨在确保仅有一个802.11无线接口使用半双工介质传输数据。</p>\n<p><strong>物理载波监听</strong><br>所有没有收发数据的终端都会持续进行物理载波监听。它是监听信道，查看是否有其他射频传输占用信道。<br>确定是否存在需要终端接收的帧传输。如果介质繁忙，无线接口将尝试与传输同步。<br>确定介质在传输开始前是否繁忙。仅当介质空闲时，终端才能传输数据。</p>\n<p>802.11无线接口通过空闲信道评估（CCA)实现这个目的。它通过两种空闲信道评估阈值实现。<br><strong>信号检测阈值</strong>用于识别802.11无线接口的前同步码传输。如果接收信号高于本底噪声4dB左右，无线接口通常能解码任何收到的802.11前同部门传输。<br><strong>能量检测阈值</strong>用于在空闲信道评估期间检测其他类型的射频传输。能量检测阈值比信号检测阈值高20dB<br>只有检测到两个阈值都空闲时，才允许传输。  如何判定繁忙？这是个问题。</p>\n<p><strong>虚拟载波监听</strong><br>802.11帧头包括一个持续时间/ID字段。客户端发送单播帧时，该字段值介于0和32767之间。它表示一个活动帧交换过程所需的时间，在此期间，其他无线接口不会中断传输过程。<br>这个值用于重置其他终端的网络分配向量计时器。</p>\n<p>虚载波监听使用称为网络分配向量（NAV)的计时器机制，NAV计时器根据从前一个帧传输中观察到的持续时间值来预测介质今后的流量。</p>\n<p>工作方式：<br>监听终端在侦听到其他终端的帧传输时将查看帧头，并确定持续时间/ID字段是否包含持续时间值或ID值。如果字段中包含持续时间值，监听终端将自己的NAV计时器设置为该值，<br>然后使用NAV作为倒数计时器。在倒计时减少到0之前，终端认为射频介质处于繁忙状态。传输数据的802.11无线接口通过这个过程通知其他终端，将在一段时间（持续时间/ID)<br>值内占用介质。没有传输数据的终端，等NAV减少为0再开始争用介质的使用权。再NAV计时器到达0之前，终端无法争用介质。<br>它是一种二层载波监听机制。</p>\n<p>虚载波监听属于二层防御措施，物理载波监听属于一层防御措施。</p>\n<p><strong>伪随机退避计时器</strong><br>伪随机退避计时器是终端在传输前最后使用的计时器。退避计时器减少到0时，终端重新评估信道状态，如果信道空闲，则开始传输数据。<br>如果物理载波监听或虚拟载波监听机制发现介质繁忙，则中止递减退避计数并保持退避计数的值。退避技术减少到0时，开始传输。</p>\n<blockquote>\n<p>OFDM终端从0~15的争用窗口中选择一个随机数，假如是4<br>终端将随机数与时隙值9微妙相乘<br>如果在时隙内没有介质活动，退避计数器将减少一个时隙<br>退避计数递减至0<br>终端执行最后一次信道评估，如果空闲，开始传输。<br>如果信道繁忙，终端将推迟一个时隙，然后再次执行空闲信道评估，如果空闲，开始传输。</p>\n</blockquote>\n<p>伪随机数保证了各个终端都有机会。<br>在复杂环境中，重传的终端的伪随机退避计将越来越大，直至最大值。</p>\n<p><strong>帧间间隔</strong><br>无线帧传输之间的一段时间，共10种，时间从短到长排列</p>\n<blockquote>\n<p>缩减的帧间间隔（RIFS),优先级最高。<br>短帧帧间间隔（SIFS)，优先级第二。<br>PCF帧间间隔(PIFS)，优先级中等。<br>DCF帧间间隔(DIFS)，优先级最低<br>仲裁帧间间隔(AIFS), 由QoS终端使用<br>扩展的帧间将(EIFS)，在收到损坏的帧后使用。</p>\n</blockquote>\n<p>帧间间隔用于确定随后传输的802.11流量类型，也可以作为虚载波监听的备份机制。</p>\n"},{"title":"CWNA:IEEE 802.11标准与修正案(3)","date":"2022-01-10T05:59:00.000Z","_content":"承接上一篇\n\n### 802.11aa-2012\n为MAC子层定义了经过改进的Qos机制，以便为消费类应用和企业应用提供强健的音频和视频流。\n\n### 802.11ac-2013\n根据5GHz U-NII频段拥有更多的频谱空间而定义了低于6GHz频段的甚高吞吐量(VHT)增强机制。最高速率\n可达6933.3Mbps，这是由以下增强机制实现。\n**更宽的信道**\n802.11n定义了40MHz信道，而802.11ac支持20,40,80,160MHz信道宽度。这是2.4G所不具备的资源。\n\n**新的调制技术**\n支持256-QAM调制，不过需要很高的信噪比才能发挥作用。\n\n**更多的空间流**\n无线接口可以发送并接收最多8路空间流。\n\n**改进的MIMO与波束成形**\n引入MU-MIMO技术，如果多个客户端支持MU-MIMO且位于不同的物理区域，具有MU-MIMO功能的接入点就能同\n时向同一信道的这些客户端发送信号。\n\n### 802.11ad-2012\n为了提高无线网络性能，引入更高的60GHz非授权频段，也定义了多向吉比特(DMG)技术，支持高达7Gbps的\n数据速率。仅用于视距传输。\n\n引入了快速会话转移功能，以便在60GHz与遗留2.4GHz/5GHz频段之间无缝切换。\nCCMP对于大数据量加密存在缺陷，引入了GCMP加密。\n\n### 802.11ae-2012\n定义了经过改进的QoS管理机制，启用服务质量管理帧(QMF)服务，使用QoS访问类别，提高流量服务质量。\n\n### 802.11af-2014\n允许无线局域网通信使用54MHz~790MHz的空白电视频段(TVWS)。\n\n### 802.11ah-2016\n定义1GHz以下频段的Wi-Fi应用，有望用于传感器网络，智能家居，汽车，零售业，农业等。\n\n### 802.11ai-2016\n定义了快速初始链路建立机制，以应对高密度环境中存在的挑战。旨在改善机场，体育馆，购物中心的应用。\n\n### 802.11aj-2018\n定义59GHz~64GHz频段操作提供支持。还对802.11ad进行调整，以使得中国的45GHz频段传输数据。\n\n### 802.11ak-2018\n又称为通用链路(GLK)，致力于完善802.11链路，以便在桥接网络中使用。允许终端提供桥接服务。\n\n### 802.11aq-2018\n研究终端与802.11网络建立关联之前如何交付网络服务信息。\n\n### 802.11ax\n称为高校无线局域网修正案，支持2.4GHz和5GHz频段，提高吞吐量，支持更多的用户和更高的密度。引入了\nOFDMA技术。\n\n### 802.11ay\n致力于完善11ad方案，提高传输速度和增加传输距离。\n\n### 802.11az\n致力于提高物理位置跟踪和定位精度。\n\n### 802.11ba\n提出了唤醒无线电(WuR)的节电数据接收模式，致力于不增加网络延迟和性能的情况下增加设备的电池使用时间。\n\n\n### 802.11m\n致力于维护802.11标准的技术性文档。对外发布的综合性文档如下\nIEEE 802.11-2007标准\nIEEE 802.11-2012标准\nIEEE 802.11-2016标准\n\n\n以上就是标准历史演进和功能概述。\n","source":"_posts/CWNA-IEEE-802-11标准与修正案-3.md","raw":"---\ntitle: 'CWNA:IEEE 802.11标准与修正案(3)'\ndate: 2022-01-10 13:59:00\ntags: 'Wi-Fi'\n---\n承接上一篇\n\n### 802.11aa-2012\n为MAC子层定义了经过改进的Qos机制，以便为消费类应用和企业应用提供强健的音频和视频流。\n\n### 802.11ac-2013\n根据5GHz U-NII频段拥有更多的频谱空间而定义了低于6GHz频段的甚高吞吐量(VHT)增强机制。最高速率\n可达6933.3Mbps，这是由以下增强机制实现。\n**更宽的信道**\n802.11n定义了40MHz信道，而802.11ac支持20,40,80,160MHz信道宽度。这是2.4G所不具备的资源。\n\n**新的调制技术**\n支持256-QAM调制，不过需要很高的信噪比才能发挥作用。\n\n**更多的空间流**\n无线接口可以发送并接收最多8路空间流。\n\n**改进的MIMO与波束成形**\n引入MU-MIMO技术，如果多个客户端支持MU-MIMO且位于不同的物理区域，具有MU-MIMO功能的接入点就能同\n时向同一信道的这些客户端发送信号。\n\n### 802.11ad-2012\n为了提高无线网络性能，引入更高的60GHz非授权频段，也定义了多向吉比特(DMG)技术，支持高达7Gbps的\n数据速率。仅用于视距传输。\n\n引入了快速会话转移功能，以便在60GHz与遗留2.4GHz/5GHz频段之间无缝切换。\nCCMP对于大数据量加密存在缺陷，引入了GCMP加密。\n\n### 802.11ae-2012\n定义了经过改进的QoS管理机制，启用服务质量管理帧(QMF)服务，使用QoS访问类别，提高流量服务质量。\n\n### 802.11af-2014\n允许无线局域网通信使用54MHz~790MHz的空白电视频段(TVWS)。\n\n### 802.11ah-2016\n定义1GHz以下频段的Wi-Fi应用，有望用于传感器网络，智能家居，汽车，零售业，农业等。\n\n### 802.11ai-2016\n定义了快速初始链路建立机制，以应对高密度环境中存在的挑战。旨在改善机场，体育馆，购物中心的应用。\n\n### 802.11aj-2018\n定义59GHz~64GHz频段操作提供支持。还对802.11ad进行调整，以使得中国的45GHz频段传输数据。\n\n### 802.11ak-2018\n又称为通用链路(GLK)，致力于完善802.11链路，以便在桥接网络中使用。允许终端提供桥接服务。\n\n### 802.11aq-2018\n研究终端与802.11网络建立关联之前如何交付网络服务信息。\n\n### 802.11ax\n称为高校无线局域网修正案，支持2.4GHz和5GHz频段，提高吞吐量，支持更多的用户和更高的密度。引入了\nOFDMA技术。\n\n### 802.11ay\n致力于完善11ad方案，提高传输速度和增加传输距离。\n\n### 802.11az\n致力于提高物理位置跟踪和定位精度。\n\n### 802.11ba\n提出了唤醒无线电(WuR)的节电数据接收模式，致力于不增加网络延迟和性能的情况下增加设备的电池使用时间。\n\n\n### 802.11m\n致力于维护802.11标准的技术性文档。对外发布的综合性文档如下\nIEEE 802.11-2007标准\nIEEE 802.11-2012标准\nIEEE 802.11-2016标准\n\n\n以上就是标准历史演进和功能概述。\n","slug":"CWNA-IEEE-802-11标准与修正案-3","published":1,"updated":"2022-01-10T12:15:29.983Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz631w0005h6fd5uo45r3w","content":"<p>承接上一篇</p>\n<h3 id=\"802-11aa-2012\"><a href=\"#802-11aa-2012\" class=\"headerlink\" title=\"802.11aa-2012\"></a>802.11aa-2012</h3><p>为MAC子层定义了经过改进的Qos机制，以便为消费类应用和企业应用提供强健的音频和视频流。</p>\n<h3 id=\"802-11ac-2013\"><a href=\"#802-11ac-2013\" class=\"headerlink\" title=\"802.11ac-2013\"></a>802.11ac-2013</h3><p>根据5GHz U-NII频段拥有更多的频谱空间而定义了低于6GHz频段的甚高吞吐量(VHT)增强机制。最高速率<br>可达6933.3Mbps，这是由以下增强机制实现。<br><strong>更宽的信道</strong><br>802.11n定义了40MHz信道，而802.11ac支持20,40,80,160MHz信道宽度。这是2.4G所不具备的资源。</p>\n<p><strong>新的调制技术</strong><br>支持256-QAM调制，不过需要很高的信噪比才能发挥作用。</p>\n<p><strong>更多的空间流</strong><br>无线接口可以发送并接收最多8路空间流。</p>\n<p><strong>改进的MIMO与波束成形</strong><br>引入MU-MIMO技术，如果多个客户端支持MU-MIMO且位于不同的物理区域，具有MU-MIMO功能的接入点就能同<br>时向同一信道的这些客户端发送信号。</p>\n<h3 id=\"802-11ad-2012\"><a href=\"#802-11ad-2012\" class=\"headerlink\" title=\"802.11ad-2012\"></a>802.11ad-2012</h3><p>为了提高无线网络性能，引入更高的60GHz非授权频段，也定义了多向吉比特(DMG)技术，支持高达7Gbps的<br>数据速率。仅用于视距传输。</p>\n<p>引入了快速会话转移功能，以便在60GHz与遗留2.4GHz/5GHz频段之间无缝切换。<br>CCMP对于大数据量加密存在缺陷，引入了GCMP加密。</p>\n<h3 id=\"802-11ae-2012\"><a href=\"#802-11ae-2012\" class=\"headerlink\" title=\"802.11ae-2012\"></a>802.11ae-2012</h3><p>定义了经过改进的QoS管理机制，启用服务质量管理帧(QMF)服务，使用QoS访问类别，提高流量服务质量。</p>\n<h3 id=\"802-11af-2014\"><a href=\"#802-11af-2014\" class=\"headerlink\" title=\"802.11af-2014\"></a>802.11af-2014</h3><p>允许无线局域网通信使用54MHz~790MHz的空白电视频段(TVWS)。</p>\n<h3 id=\"802-11ah-2016\"><a href=\"#802-11ah-2016\" class=\"headerlink\" title=\"802.11ah-2016\"></a>802.11ah-2016</h3><p>定义1GHz以下频段的Wi-Fi应用，有望用于传感器网络，智能家居，汽车，零售业，农业等。</p>\n<h3 id=\"802-11ai-2016\"><a href=\"#802-11ai-2016\" class=\"headerlink\" title=\"802.11ai-2016\"></a>802.11ai-2016</h3><p>定义了快速初始链路建立机制，以应对高密度环境中存在的挑战。旨在改善机场，体育馆，购物中心的应用。</p>\n<h3 id=\"802-11aj-2018\"><a href=\"#802-11aj-2018\" class=\"headerlink\" title=\"802.11aj-2018\"></a>802.11aj-2018</h3><p>定义59GHz~64GHz频段操作提供支持。还对802.11ad进行调整，以使得中国的45GHz频段传输数据。</p>\n<h3 id=\"802-11ak-2018\"><a href=\"#802-11ak-2018\" class=\"headerlink\" title=\"802.11ak-2018\"></a>802.11ak-2018</h3><p>又称为通用链路(GLK)，致力于完善802.11链路，以便在桥接网络中使用。允许终端提供桥接服务。</p>\n<h3 id=\"802-11aq-2018\"><a href=\"#802-11aq-2018\" class=\"headerlink\" title=\"802.11aq-2018\"></a>802.11aq-2018</h3><p>研究终端与802.11网络建立关联之前如何交付网络服务信息。</p>\n<h3 id=\"802-11ax\"><a href=\"#802-11ax\" class=\"headerlink\" title=\"802.11ax\"></a>802.11ax</h3><p>称为高校无线局域网修正案，支持2.4GHz和5GHz频段，提高吞吐量，支持更多的用户和更高的密度。引入了<br>OFDMA技术。</p>\n<h3 id=\"802-11ay\"><a href=\"#802-11ay\" class=\"headerlink\" title=\"802.11ay\"></a>802.11ay</h3><p>致力于完善11ad方案，提高传输速度和增加传输距离。</p>\n<h3 id=\"802-11az\"><a href=\"#802-11az\" class=\"headerlink\" title=\"802.11az\"></a>802.11az</h3><p>致力于提高物理位置跟踪和定位精度。</p>\n<h3 id=\"802-11ba\"><a href=\"#802-11ba\" class=\"headerlink\" title=\"802.11ba\"></a>802.11ba</h3><p>提出了唤醒无线电(WuR)的节电数据接收模式，致力于不增加网络延迟和性能的情况下增加设备的电池使用时间。</p>\n<h3 id=\"802-11m\"><a href=\"#802-11m\" class=\"headerlink\" title=\"802.11m\"></a>802.11m</h3><p>致力于维护802.11标准的技术性文档。对外发布的综合性文档如下<br>IEEE 802.11-2007标准<br>IEEE 802.11-2012标准<br>IEEE 802.11-2016标准</p>\n<p>以上就是标准历史演进和功能概述。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>承接上一篇</p>\n<h3 id=\"802-11aa-2012\"><a href=\"#802-11aa-2012\" class=\"headerlink\" title=\"802.11aa-2012\"></a>802.11aa-2012</h3><p>为MAC子层定义了经过改进的Qos机制，以便为消费类应用和企业应用提供强健的音频和视频流。</p>\n<h3 id=\"802-11ac-2013\"><a href=\"#802-11ac-2013\" class=\"headerlink\" title=\"802.11ac-2013\"></a>802.11ac-2013</h3><p>根据5GHz U-NII频段拥有更多的频谱空间而定义了低于6GHz频段的甚高吞吐量(VHT)增强机制。最高速率<br>可达6933.3Mbps，这是由以下增强机制实现。<br><strong>更宽的信道</strong><br>802.11n定义了40MHz信道，而802.11ac支持20,40,80,160MHz信道宽度。这是2.4G所不具备的资源。</p>\n<p><strong>新的调制技术</strong><br>支持256-QAM调制，不过需要很高的信噪比才能发挥作用。</p>\n<p><strong>更多的空间流</strong><br>无线接口可以发送并接收最多8路空间流。</p>\n<p><strong>改进的MIMO与波束成形</strong><br>引入MU-MIMO技术，如果多个客户端支持MU-MIMO且位于不同的物理区域，具有MU-MIMO功能的接入点就能同<br>时向同一信道的这些客户端发送信号。</p>\n<h3 id=\"802-11ad-2012\"><a href=\"#802-11ad-2012\" class=\"headerlink\" title=\"802.11ad-2012\"></a>802.11ad-2012</h3><p>为了提高无线网络性能，引入更高的60GHz非授权频段，也定义了多向吉比特(DMG)技术，支持高达7Gbps的<br>数据速率。仅用于视距传输。</p>\n<p>引入了快速会话转移功能，以便在60GHz与遗留2.4GHz/5GHz频段之间无缝切换。<br>CCMP对于大数据量加密存在缺陷，引入了GCMP加密。</p>\n<h3 id=\"802-11ae-2012\"><a href=\"#802-11ae-2012\" class=\"headerlink\" title=\"802.11ae-2012\"></a>802.11ae-2012</h3><p>定义了经过改进的QoS管理机制，启用服务质量管理帧(QMF)服务，使用QoS访问类别，提高流量服务质量。</p>\n<h3 id=\"802-11af-2014\"><a href=\"#802-11af-2014\" class=\"headerlink\" title=\"802.11af-2014\"></a>802.11af-2014</h3><p>允许无线局域网通信使用54MHz~790MHz的空白电视频段(TVWS)。</p>\n<h3 id=\"802-11ah-2016\"><a href=\"#802-11ah-2016\" class=\"headerlink\" title=\"802.11ah-2016\"></a>802.11ah-2016</h3><p>定义1GHz以下频段的Wi-Fi应用，有望用于传感器网络，智能家居，汽车，零售业，农业等。</p>\n<h3 id=\"802-11ai-2016\"><a href=\"#802-11ai-2016\" class=\"headerlink\" title=\"802.11ai-2016\"></a>802.11ai-2016</h3><p>定义了快速初始链路建立机制，以应对高密度环境中存在的挑战。旨在改善机场，体育馆，购物中心的应用。</p>\n<h3 id=\"802-11aj-2018\"><a href=\"#802-11aj-2018\" class=\"headerlink\" title=\"802.11aj-2018\"></a>802.11aj-2018</h3><p>定义59GHz~64GHz频段操作提供支持。还对802.11ad进行调整，以使得中国的45GHz频段传输数据。</p>\n<h3 id=\"802-11ak-2018\"><a href=\"#802-11ak-2018\" class=\"headerlink\" title=\"802.11ak-2018\"></a>802.11ak-2018</h3><p>又称为通用链路(GLK)，致力于完善802.11链路，以便在桥接网络中使用。允许终端提供桥接服务。</p>\n<h3 id=\"802-11aq-2018\"><a href=\"#802-11aq-2018\" class=\"headerlink\" title=\"802.11aq-2018\"></a>802.11aq-2018</h3><p>研究终端与802.11网络建立关联之前如何交付网络服务信息。</p>\n<h3 id=\"802-11ax\"><a href=\"#802-11ax\" class=\"headerlink\" title=\"802.11ax\"></a>802.11ax</h3><p>称为高校无线局域网修正案，支持2.4GHz和5GHz频段，提高吞吐量，支持更多的用户和更高的密度。引入了<br>OFDMA技术。</p>\n<h3 id=\"802-11ay\"><a href=\"#802-11ay\" class=\"headerlink\" title=\"802.11ay\"></a>802.11ay</h3><p>致力于完善11ad方案，提高传输速度和增加传输距离。</p>\n<h3 id=\"802-11az\"><a href=\"#802-11az\" class=\"headerlink\" title=\"802.11az\"></a>802.11az</h3><p>致力于提高物理位置跟踪和定位精度。</p>\n<h3 id=\"802-11ba\"><a href=\"#802-11ba\" class=\"headerlink\" title=\"802.11ba\"></a>802.11ba</h3><p>提出了唤醒无线电(WuR)的节电数据接收模式，致力于不增加网络延迟和性能的情况下增加设备的电池使用时间。</p>\n<h3 id=\"802-11m\"><a href=\"#802-11m\" class=\"headerlink\" title=\"802.11m\"></a>802.11m</h3><p>致力于维护802.11标准的技术性文档。对外发布的综合性文档如下<br>IEEE 802.11-2007标准<br>IEEE 802.11-2012标准<br>IEEE 802.11-2016标准</p>\n<p>以上就是标准历史演进和功能概述。</p>\n"},{"title":"CWNA:射频信号与天线概念","date":"2022-01-14T08:47:44.000Z","_content":"\n方位图与立面图(天线辐射包络)\n理解极坐标图\n波束宽度\n天线类型\n> 全向天线\n> 半定向天线\n> 强方向性天线\n> 扇形天线\n> 天线阵\n\n可视视距\n射频视距\n菲涅尔区\n地球曲率\n天线极化\n天线分集\n多输入多输出\nMIMO天线\n> 室内MIMO天线\n> 室外MIMO天线\n\n天线的连接与安装\n> 电压驻波比\n> 信号损失\n> 天线的安装\n\n天线附件\n> 电缆\n> 连接器\n> 分路器\n> 放大器\n> 衰减器\n> 避雷器\n> 接地棒与接地线\n\n法规遵从性\n\n\n——————————————\n\n天线的安装是决定通信能否成功进行的首要因素。在无线网络中成功规划和安装天线是一项孰能生巧且有所收获的工作。\n\n\n### 方位图与立面图\n有两种天线辐射方向图：方位图，立面图。\n方位图=H平面=自顶向下视图；\n立面图=E平面=侧视图；\n\n### 波束宽度\n从天线信号的中心或最强点开始，沿横轴和纵轴测量每一个信号功率减半的点(-3dB)。这个半功率点的界面可以称为波束宽度。\n射频信号的大部分能量都集中在天线的波束宽度之内，波束宽度以内的部分称为天线的主瓣，波束宽度以外的称为旁瓣或后瓣。\n\n天线的波束宽度\n\n|天线类型|水平波束宽度|垂直波束宽度|\n|:----------:|:------:|:------:|\n|全向天线|360度|7~80度|\n|贴片天线|30~180度|6~90度|\n|八木天线|30~78度|14~64度|\n|扇形天线|60~180度|7~17度|\n|抛物面天线|4~25度|4~21度|\n\n\n### 天线类型\n全向天线： 类似于台灯灯光的辐射方式，所有方向提供水平覆盖。多用于市内安装。\n半定向天线：类似于壁灯的辐射方式，提供区域覆盖。多用于中短距离通信。\n强方向性天线：类似于聚光灯。用于远距离通信。\n\n天线阵列：由两幅或多幅天线构成的一组天线。天线阵列可以实现波束成形(beamforming)。\n波束成形是集中射频能量的一种技术，信号能量的集中，意味着功率增加，接收机的信噪比随之提高，从而提供更好的传输质量。\n几种波束成形技术：\n> 静态波束成形\n> 动态波束成形\n> 发射波束成形\n\n**静态波束成形**\n利用定向天线提供固定的辐射方向图。\n\n**动态波束成形**\n将射频能量集中于特定方向和特定形状。\n能够实现辐射方向逐帧改变，从而为每台终端提供最佳功率和信号质量。\n\n**发射波束成形**\n通过传输多个相移信号，使得这些信号能同时到达发射机认为接收机所处的位置。\n802.11ac 定义了两种发射波束成形：\n> 隐式发射波束成形：采用隐式信道探测过程优化传输链之间的相位差。\n> 显式发射波束成形：通过终端的反馈来确定每个信号所需的相移量。\n\n### 可视视距\n光从一点传播到另一点时，其传播路径理论上是一条畅通无阻的致谢， 称为可视视距。\n### 射频视距\n可视视距+菲涅尔区，菲涅尔区是一块虚构的细长椭球体区域，环绕在两幅点对点天线的可视视距路径周围。\n\n### 地球曲率\n一般来说，点对点距离超过11.3km,就应该考虑地球曲率的影响。\n\n### 天线极化\n天线向外发射电磁波时，电波振幅即可以是水平的，也可以是垂直的，但两幅天线需要保持一致的极化方向，以获取最佳信号质量。\n\n### 天线分集\n接入点使用两幅或多幅天线，并于接收机共同工作，以最大限度减小多径的不利影响。\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/CWNA-射频信号与天线概念.md","raw":"---\ntitle: 'CWNA:射频信号与天线概念'\ndate: 2022-01-14 16:47:44\ntags: 'Wi-Fi'\n---\n\n方位图与立面图(天线辐射包络)\n理解极坐标图\n波束宽度\n天线类型\n> 全向天线\n> 半定向天线\n> 强方向性天线\n> 扇形天线\n> 天线阵\n\n可视视距\n射频视距\n菲涅尔区\n地球曲率\n天线极化\n天线分集\n多输入多输出\nMIMO天线\n> 室内MIMO天线\n> 室外MIMO天线\n\n天线的连接与安装\n> 电压驻波比\n> 信号损失\n> 天线的安装\n\n天线附件\n> 电缆\n> 连接器\n> 分路器\n> 放大器\n> 衰减器\n> 避雷器\n> 接地棒与接地线\n\n法规遵从性\n\n\n——————————————\n\n天线的安装是决定通信能否成功进行的首要因素。在无线网络中成功规划和安装天线是一项孰能生巧且有所收获的工作。\n\n\n### 方位图与立面图\n有两种天线辐射方向图：方位图，立面图。\n方位图=H平面=自顶向下视图；\n立面图=E平面=侧视图；\n\n### 波束宽度\n从天线信号的中心或最强点开始，沿横轴和纵轴测量每一个信号功率减半的点(-3dB)。这个半功率点的界面可以称为波束宽度。\n射频信号的大部分能量都集中在天线的波束宽度之内，波束宽度以内的部分称为天线的主瓣，波束宽度以外的称为旁瓣或后瓣。\n\n天线的波束宽度\n\n|天线类型|水平波束宽度|垂直波束宽度|\n|:----------:|:------:|:------:|\n|全向天线|360度|7~80度|\n|贴片天线|30~180度|6~90度|\n|八木天线|30~78度|14~64度|\n|扇形天线|60~180度|7~17度|\n|抛物面天线|4~25度|4~21度|\n\n\n### 天线类型\n全向天线： 类似于台灯灯光的辐射方式，所有方向提供水平覆盖。多用于市内安装。\n半定向天线：类似于壁灯的辐射方式，提供区域覆盖。多用于中短距离通信。\n强方向性天线：类似于聚光灯。用于远距离通信。\n\n天线阵列：由两幅或多幅天线构成的一组天线。天线阵列可以实现波束成形(beamforming)。\n波束成形是集中射频能量的一种技术，信号能量的集中，意味着功率增加，接收机的信噪比随之提高，从而提供更好的传输质量。\n几种波束成形技术：\n> 静态波束成形\n> 动态波束成形\n> 发射波束成形\n\n**静态波束成形**\n利用定向天线提供固定的辐射方向图。\n\n**动态波束成形**\n将射频能量集中于特定方向和特定形状。\n能够实现辐射方向逐帧改变，从而为每台终端提供最佳功率和信号质量。\n\n**发射波束成形**\n通过传输多个相移信号，使得这些信号能同时到达发射机认为接收机所处的位置。\n802.11ac 定义了两种发射波束成形：\n> 隐式发射波束成形：采用隐式信道探测过程优化传输链之间的相位差。\n> 显式发射波束成形：通过终端的反馈来确定每个信号所需的相移量。\n\n### 可视视距\n光从一点传播到另一点时，其传播路径理论上是一条畅通无阻的致谢， 称为可视视距。\n### 射频视距\n可视视距+菲涅尔区，菲涅尔区是一块虚构的细长椭球体区域，环绕在两幅点对点天线的可视视距路径周围。\n\n### 地球曲率\n一般来说，点对点距离超过11.3km,就应该考虑地球曲率的影响。\n\n### 天线极化\n天线向外发射电磁波时，电波振幅即可以是水平的，也可以是垂直的，但两幅天线需要保持一致的极化方向，以获取最佳信号质量。\n\n### 天线分集\n接入点使用两幅或多幅天线，并于接收机共同工作，以最大限度减小多径的不利影响。\n\n\n\n\n\n\n\n\n\n\n\n","slug":"CWNA-射频信号与天线概念","published":1,"updated":"2022-01-17T08:34:56.638Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz631y0008h6fdgrz26ei4","content":"<p>方位图与立面图(天线辐射包络)<br>理解极坐标图<br>波束宽度<br>天线类型</p>\n<blockquote>\n<p>全向天线<br>半定向天线<br>强方向性天线<br>扇形天线<br>天线阵</p>\n</blockquote>\n<p>可视视距<br>射频视距<br>菲涅尔区<br>地球曲率<br>天线极化<br>天线分集<br>多输入多输出<br>MIMO天线</p>\n<blockquote>\n<p>室内MIMO天线<br>室外MIMO天线</p>\n</blockquote>\n<p>天线的连接与安装</p>\n<blockquote>\n<p>电压驻波比<br>信号损失<br>天线的安装</p>\n</blockquote>\n<p>天线附件</p>\n<blockquote>\n<p>电缆<br>连接器<br>分路器<br>放大器<br>衰减器<br>避雷器<br>接地棒与接地线</p>\n</blockquote>\n<p>法规遵从性</p>\n<p>——————————————</p>\n<p>天线的安装是决定通信能否成功进行的首要因素。在无线网络中成功规划和安装天线是一项孰能生巧且有所收获的工作。</p>\n<h3 id=\"方位图与立面图\"><a href=\"#方位图与立面图\" class=\"headerlink\" title=\"方位图与立面图\"></a>方位图与立面图</h3><p>有两种天线辐射方向图：方位图，立面图。<br>方位图=H平面=自顶向下视图；<br>立面图=E平面=侧视图；</p>\n<h3 id=\"波束宽度\"><a href=\"#波束宽度\" class=\"headerlink\" title=\"波束宽度\"></a>波束宽度</h3><p>从天线信号的中心或最强点开始，沿横轴和纵轴测量每一个信号功率减半的点(-3dB)。这个半功率点的界面可以称为波束宽度。<br>射频信号的大部分能量都集中在天线的波束宽度之内，波束宽度以内的部分称为天线的主瓣，波束宽度以外的称为旁瓣或后瓣。</p>\n<p>天线的波束宽度</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">天线类型</th>\n<th style=\"text-align:center\">水平波束宽度</th>\n<th style=\"text-align:center\">垂直波束宽度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">全向天线</td>\n<td style=\"text-align:center\">360度</td>\n<td style=\"text-align:center\">7~80度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">贴片天线</td>\n<td style=\"text-align:center\">30~180度</td>\n<td style=\"text-align:center\">6~90度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八木天线</td>\n<td style=\"text-align:center\">30~78度</td>\n<td style=\"text-align:center\">14~64度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">扇形天线</td>\n<td style=\"text-align:center\">60~180度</td>\n<td style=\"text-align:center\">7~17度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">抛物面天线</td>\n<td style=\"text-align:center\">4~25度</td>\n<td style=\"text-align:center\">4~21度</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"天线类型\"><a href=\"#天线类型\" class=\"headerlink\" title=\"天线类型\"></a>天线类型</h3><p>全向天线： 类似于台灯灯光的辐射方式，所有方向提供水平覆盖。多用于市内安装。<br>半定向天线：类似于壁灯的辐射方式，提供区域覆盖。多用于中短距离通信。<br>强方向性天线：类似于聚光灯。用于远距离通信。</p>\n<p>天线阵列：由两幅或多幅天线构成的一组天线。天线阵列可以实现波束成形(beamforming)。<br>波束成形是集中射频能量的一种技术，信号能量的集中，意味着功率增加，接收机的信噪比随之提高，从而提供更好的传输质量。<br>几种波束成形技术：</p>\n<blockquote>\n<p>静态波束成形<br>动态波束成形<br>发射波束成形</p>\n</blockquote>\n<p><strong>静态波束成形</strong><br>利用定向天线提供固定的辐射方向图。</p>\n<p><strong>动态波束成形</strong><br>将射频能量集中于特定方向和特定形状。<br>能够实现辐射方向逐帧改变，从而为每台终端提供最佳功率和信号质量。</p>\n<p><strong>发射波束成形</strong><br>通过传输多个相移信号，使得这些信号能同时到达发射机认为接收机所处的位置。<br>802.11ac 定义了两种发射波束成形：</p>\n<blockquote>\n<p>隐式发射波束成形：采用隐式信道探测过程优化传输链之间的相位差。<br>显式发射波束成形：通过终端的反馈来确定每个信号所需的相移量。</p>\n</blockquote>\n<h3 id=\"可视视距\"><a href=\"#可视视距\" class=\"headerlink\" title=\"可视视距\"></a>可视视距</h3><p>光从一点传播到另一点时，其传播路径理论上是一条畅通无阻的致谢， 称为可视视距。</p>\n<h3 id=\"射频视距\"><a href=\"#射频视距\" class=\"headerlink\" title=\"射频视距\"></a>射频视距</h3><p>可视视距+菲涅尔区，菲涅尔区是一块虚构的细长椭球体区域，环绕在两幅点对点天线的可视视距路径周围。</p>\n<h3 id=\"地球曲率\"><a href=\"#地球曲率\" class=\"headerlink\" title=\"地球曲率\"></a>地球曲率</h3><p>一般来说，点对点距离超过11.3km,就应该考虑地球曲率的影响。</p>\n<h3 id=\"天线极化\"><a href=\"#天线极化\" class=\"headerlink\" title=\"天线极化\"></a>天线极化</h3><p>天线向外发射电磁波时，电波振幅即可以是水平的，也可以是垂直的，但两幅天线需要保持一致的极化方向，以获取最佳信号质量。</p>\n<h3 id=\"天线分集\"><a href=\"#天线分集\" class=\"headerlink\" title=\"天线分集\"></a>天线分集</h3><p>接入点使用两幅或多幅天线，并于接收机共同工作，以最大限度减小多径的不利影响。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>方位图与立面图(天线辐射包络)<br>理解极坐标图<br>波束宽度<br>天线类型</p>\n<blockquote>\n<p>全向天线<br>半定向天线<br>强方向性天线<br>扇形天线<br>天线阵</p>\n</blockquote>\n<p>可视视距<br>射频视距<br>菲涅尔区<br>地球曲率<br>天线极化<br>天线分集<br>多输入多输出<br>MIMO天线</p>\n<blockquote>\n<p>室内MIMO天线<br>室外MIMO天线</p>\n</blockquote>\n<p>天线的连接与安装</p>\n<blockquote>\n<p>电压驻波比<br>信号损失<br>天线的安装</p>\n</blockquote>\n<p>天线附件</p>\n<blockquote>\n<p>电缆<br>连接器<br>分路器<br>放大器<br>衰减器<br>避雷器<br>接地棒与接地线</p>\n</blockquote>\n<p>法规遵从性</p>\n<p>——————————————</p>\n<p>天线的安装是决定通信能否成功进行的首要因素。在无线网络中成功规划和安装天线是一项孰能生巧且有所收获的工作。</p>\n<h3 id=\"方位图与立面图\"><a href=\"#方位图与立面图\" class=\"headerlink\" title=\"方位图与立面图\"></a>方位图与立面图</h3><p>有两种天线辐射方向图：方位图，立面图。<br>方位图=H平面=自顶向下视图；<br>立面图=E平面=侧视图；</p>\n<h3 id=\"波束宽度\"><a href=\"#波束宽度\" class=\"headerlink\" title=\"波束宽度\"></a>波束宽度</h3><p>从天线信号的中心或最强点开始，沿横轴和纵轴测量每一个信号功率减半的点(-3dB)。这个半功率点的界面可以称为波束宽度。<br>射频信号的大部分能量都集中在天线的波束宽度之内，波束宽度以内的部分称为天线的主瓣，波束宽度以外的称为旁瓣或后瓣。</p>\n<p>天线的波束宽度</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">天线类型</th>\n<th style=\"text-align:center\">水平波束宽度</th>\n<th style=\"text-align:center\">垂直波束宽度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">全向天线</td>\n<td style=\"text-align:center\">360度</td>\n<td style=\"text-align:center\">7~80度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">贴片天线</td>\n<td style=\"text-align:center\">30~180度</td>\n<td style=\"text-align:center\">6~90度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">八木天线</td>\n<td style=\"text-align:center\">30~78度</td>\n<td style=\"text-align:center\">14~64度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">扇形天线</td>\n<td style=\"text-align:center\">60~180度</td>\n<td style=\"text-align:center\">7~17度</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">抛物面天线</td>\n<td style=\"text-align:center\">4~25度</td>\n<td style=\"text-align:center\">4~21度</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"天线类型\"><a href=\"#天线类型\" class=\"headerlink\" title=\"天线类型\"></a>天线类型</h3><p>全向天线： 类似于台灯灯光的辐射方式，所有方向提供水平覆盖。多用于市内安装。<br>半定向天线：类似于壁灯的辐射方式，提供区域覆盖。多用于中短距离通信。<br>强方向性天线：类似于聚光灯。用于远距离通信。</p>\n<p>天线阵列：由两幅或多幅天线构成的一组天线。天线阵列可以实现波束成形(beamforming)。<br>波束成形是集中射频能量的一种技术，信号能量的集中，意味着功率增加，接收机的信噪比随之提高，从而提供更好的传输质量。<br>几种波束成形技术：</p>\n<blockquote>\n<p>静态波束成形<br>动态波束成形<br>发射波束成形</p>\n</blockquote>\n<p><strong>静态波束成形</strong><br>利用定向天线提供固定的辐射方向图。</p>\n<p><strong>动态波束成形</strong><br>将射频能量集中于特定方向和特定形状。<br>能够实现辐射方向逐帧改变，从而为每台终端提供最佳功率和信号质量。</p>\n<p><strong>发射波束成形</strong><br>通过传输多个相移信号，使得这些信号能同时到达发射机认为接收机所处的位置。<br>802.11ac 定义了两种发射波束成形：</p>\n<blockquote>\n<p>隐式发射波束成形：采用隐式信道探测过程优化传输链之间的相位差。<br>显式发射波束成形：通过终端的反馈来确定每个信号所需的相移量。</p>\n</blockquote>\n<h3 id=\"可视视距\"><a href=\"#可视视距\" class=\"headerlink\" title=\"可视视距\"></a>可视视距</h3><p>光从一点传播到另一点时，其传播路径理论上是一条畅通无阻的致谢， 称为可视视距。</p>\n<h3 id=\"射频视距\"><a href=\"#射频视距\" class=\"headerlink\" title=\"射频视距\"></a>射频视距</h3><p>可视视距+菲涅尔区，菲涅尔区是一块虚构的细长椭球体区域，环绕在两幅点对点天线的可视视距路径周围。</p>\n<h3 id=\"地球曲率\"><a href=\"#地球曲率\" class=\"headerlink\" title=\"地球曲率\"></a>地球曲率</h3><p>一般来说，点对点距离超过11.3km,就应该考虑地球曲率的影响。</p>\n<h3 id=\"天线极化\"><a href=\"#天线极化\" class=\"headerlink\" title=\"天线极化\"></a>天线极化</h3><p>天线向外发射电磁波时，电波振幅即可以是水平的，也可以是垂直的，但两幅天线需要保持一致的极化方向，以获取最佳信号质量。</p>\n<h3 id=\"天线分集\"><a href=\"#天线分集\" class=\"headerlink\" title=\"天线分集\"></a>天线分集</h3><p>接入点使用两幅或多幅天线，并于接收机共同工作，以最大限度减小多径的不利影响。</p>\n"},{"title":"CWNA:IEEE 802.11标准与修正案","date":"2022-01-07T05:08:16.000Z","_content":"1.IEEE 802.11原始标准\n2.IEEE 802.11-2016标准\n>  802.11a-1999\n>  802.11b-1999\n>  802.11d-2001\n>  802.11e-2005\n>  802.11g-2003\n>  802.11h-2003\n>  802.11i-2003\n>  802.11j-2004\n>  802.11k-2008\n>  802.11n-2009\n>  802.11p-2010\n>  802.11r-2008\n>  802.11s-2011\n>  802.11u-2011\n>  802.11v-2011\n>  802.11w-2009\n>  802.11y-2008\n>  802.11z-2010\n>  802.11aa-2012\n>  802.11ac-2013\n>  802.11ad-2012\n>  802.11ae-2012\n>  802.11af-2014\n\n3.IEEE 802.11-2016标准发布后获批的修正案\n>  802.11ah-2016\n>  802.11ai-2016\n>  802.11aj-2018\n>  802.11aq-2018\n>  802.11ak-2018\n\n4.IEEE 802.11 修正案草案\n>  802.11ax\n>  802.11ay\n>  802.11az\n>  802.11ba\n\n5.已失效的IEEE 802.11 修正案\n>  802.11F\n>  802.11T\n\n4.IEEE 802.11m 任务组\n_______\n\n上面所列的一系列标准是由IEEE协会制定，命名一般是按照字母顺序排列。但是，由于获批时间不一样，存在先后。\n\n### 标准演进历程\n1997年6月，IEEE发布了802.11原始标准（IEEE std 802.11-1997）。通常称为802.11 prime。\n1999年对原始标准进行了修订；\n2003年再次确认以后以IEEE Std 802.11-1999(R-2003)为名重新发布。\n2007年3月,IEEE 802.11-2007标准（IEEE Std 802.11-2007）获批。\n2012年2月,IEEE 802.11-2012标准(IEEE Std 802.11-2012)获批。\n2016年12月,IEEE 802.11-2016标准(IEEE Std 802.11-2016)获批。\n\n新标准IEEE Std 802.11-2016是IEEE Std 802.11-2012标准与获批的修正案合并为一份文档形成。严格来说，任何\n纳入新标准的修正案都不再单独存在，然而，Wi-Fi联盟与大多数无线局域网专业人士仍然习惯采用获批的名称。\n\n### 802.11a-1999\n采用了正交频分复用(OFDM)的射频技术，定义了5GHz频率空间的无线局域网通信。可以使用三个不同的100MHz非授\n权频段传输信息，三者称为非授权国家信息基础设施(U-NII)频段。\n\n802.11a无线接口最初可以使用U-NII-1、U-NII-2、与U-NII-3频段的12条信道传输信息，具体可以使用的信道决定\n于各国的射频监管机构的规定。\n\n通过使用OFDM技术，802.11a无线接口可以支持6,9,12,18,24,36,48,54Mbps等数据速率。在修正案获批两年后，\n802.11a设备开始面世，一开始采用OFDM技术的无线芯片组极为昂贵，导致5GHz无线局域网部署缓慢。芯片组价格\n降至可负担的程度后，5GHz无线局域网显著增加。开始出现2.4GHz和5GHz两个无线接口的双频无线接入点。\n\n### 802.11b-1999\n定义了工作在2.4GHz ISM频段(2.4GHz~2.4835GHz)的无线局域网通信。支持1，2，5.5，11Mbps四种数据速率。它是\n最早广泛部署应用的标准。\n\n### 802.11d-2001\n由于原始标准是为符合美国、加拿大、日本于欧洲的监管规定而制定的标准。因此，802.11d增加了必要的定义和要求，\n以便802.11设备能在于是标准没有涉及的地区使用。\n\nBeacon Fream 和 probe response frame的字段中包含国家代码信息，802.11d兼容设备利用该信息确保符合特定国家\n的频率和功率规定。\n\n\n### 802.11e-2005\n由于原始标准没有为使用Wi-Fi语音等时敏应用定义合乎要求的服务质量(QoS)规程。语音、视频、音频等应用要求较低\n的延迟和抖动，其传输的优先级高于标准的数据应用流量。802.11e修正案定义了二层MAC机制，以满足无线局域网对时\n敏应用的QoS要求。\n\n802.11原始标准定义了两种方法，以便802.11无线接口卡获取半双工介质的控制权。分布式协调功能(DCF)是默认方法，这种\n基于争用的方法用于确定接下来使用无线介质进行传输的设备。为了满足Qos要求，混合协调功能(HCF)引入，增强型分布式\n信道访问(EDCA)是对DCF的扩展，这种介质访问方法根据上层协议提供“帧优先”，以满足必要的延迟要求。\n\nWi-Fi联盟有一项名为Wi-Fi多媒体(WMM)的认证项目。这项认证定义了802.11e修正案的许多要素，并根据重要性将流量\n优先级划分为4个访问类别。\n\n### 802.11g-2003\n是一项引起轰动的修正案，无线接口采用称为扩展速率物理层的新技术，并仍然可以使用2.4GHz ISM频段。\n\n定义了两种强制和两种可选的物理层\n为了获取更高的数据速率，设备必须支持称为扩展速率物理层-正交频分复用(ERP-OFDM)的物理层技术，支持6，9，12，18，\n24，36，48，54Mbps等多种速率。\n\n为了向后兼容802.11 DSSS与802.11b网络，设备必须支持称为扩展速率物理层-直接序列扩频/补码键控(ERP-DSSS/CCK)的物\n理层技术。\n\n802.11修正案的比较\n\n|        |802.11遗留|802.11b|802.11g|802.11a|\n|:------:|:--------:|:--------:|:-----:|:-----:|\n|工作频段|2.4GHz ISM|2.4GHz ISM|2.4GHz ISM|5GHz U-NII-1,U-NII-2,U-NII-3|\n|扩频技术|FHSS或DSSS|HR-DSSS   |ERP:强制支持ERP-OFDM与ERP-DSSS/CCK|OFDM|\n|数据速率|1或2Mbps  |DSSS:1 or 2Mbps/HR-DSSS: 5.5or 11Mbps|ERP-DSS/CCK:1,2,5.5,11Mbps/ERP-OFDM:强制支持6,12,24Mbs,可选支持9,18,36,48,54Mbps|强制支持6,12,24Mbps,可选支持9,18,36,48,54Mbps|\n|向后兼容|不适用    |仅802.11 DSSS|802.11b HR-DSSS和802.11DSSS|无|\n|获批时间|1997年    |1999年    |2003年|1999年|\n\n### 802.11h-2003\n定义了动态频率选择(DFS)和发射功率控制(TPC)机制。初衷是为了满足欧洲对于5GHz频段通信的监管要求，以及检测和\n避免对5GHz卫星和雷达系统的干扰。\n\n802.11h还定义了一个新的频段,UNII-2扩展(UNII-2 Extended)频段。属于802.11a频段的延申。\n\nDFS本质上属于雷达检测和雷达干扰回避技术，提供以下功能。\n> 接入点根据支持的信道，允许客户端进行关联。如果客户端成为接入点所在的无线网络的成员，称二者建立关联。\n> 接入点可以将信道禁声以测试是否存在雷达传输。\n> 在使用信道之前，接入点可以测试信道是否存在雷达传输。\n> 接入点可以检测当前信道和其他信道是否存在雷达传输。\n> 如果检测到雷达传输，接入点将停止操作以避免干扰。\n> 检测到干扰时，接入点可以选择不同的信道进行传输，并通知所有关联到自己的客户端。\n\nTPC致力于满足有关传输功率的监管要求，提供以下功能。\n> 客户端可以根据发射功率与接入点建立关连。\n> 如果法规允许，接入点和客户端遵守信道的最大发射功率电平。\n> 接入点可以指定某个或所有关联到自己的客户端使用的发射功率。\n> 接入点可以根据实际的射频环境参数（如路径损耗）调整客户端的传输功率。\n\n\n(未完待续...)\n","source":"_posts/CWNA-IEEE-802-11标准与修正案.md","raw":"---\ntitle: 'CWNA:IEEE 802.11标准与修正案'\ndate: 2022-01-07 13:08:16\ntags: 'Wi-Fi'\n---\n1.IEEE 802.11原始标准\n2.IEEE 802.11-2016标准\n>  802.11a-1999\n>  802.11b-1999\n>  802.11d-2001\n>  802.11e-2005\n>  802.11g-2003\n>  802.11h-2003\n>  802.11i-2003\n>  802.11j-2004\n>  802.11k-2008\n>  802.11n-2009\n>  802.11p-2010\n>  802.11r-2008\n>  802.11s-2011\n>  802.11u-2011\n>  802.11v-2011\n>  802.11w-2009\n>  802.11y-2008\n>  802.11z-2010\n>  802.11aa-2012\n>  802.11ac-2013\n>  802.11ad-2012\n>  802.11ae-2012\n>  802.11af-2014\n\n3.IEEE 802.11-2016标准发布后获批的修正案\n>  802.11ah-2016\n>  802.11ai-2016\n>  802.11aj-2018\n>  802.11aq-2018\n>  802.11ak-2018\n\n4.IEEE 802.11 修正案草案\n>  802.11ax\n>  802.11ay\n>  802.11az\n>  802.11ba\n\n5.已失效的IEEE 802.11 修正案\n>  802.11F\n>  802.11T\n\n4.IEEE 802.11m 任务组\n_______\n\n上面所列的一系列标准是由IEEE协会制定，命名一般是按照字母顺序排列。但是，由于获批时间不一样，存在先后。\n\n### 标准演进历程\n1997年6月，IEEE发布了802.11原始标准（IEEE std 802.11-1997）。通常称为802.11 prime。\n1999年对原始标准进行了修订；\n2003年再次确认以后以IEEE Std 802.11-1999(R-2003)为名重新发布。\n2007年3月,IEEE 802.11-2007标准（IEEE Std 802.11-2007）获批。\n2012年2月,IEEE 802.11-2012标准(IEEE Std 802.11-2012)获批。\n2016年12月,IEEE 802.11-2016标准(IEEE Std 802.11-2016)获批。\n\n新标准IEEE Std 802.11-2016是IEEE Std 802.11-2012标准与获批的修正案合并为一份文档形成。严格来说，任何\n纳入新标准的修正案都不再单独存在，然而，Wi-Fi联盟与大多数无线局域网专业人士仍然习惯采用获批的名称。\n\n### 802.11a-1999\n采用了正交频分复用(OFDM)的射频技术，定义了5GHz频率空间的无线局域网通信。可以使用三个不同的100MHz非授\n权频段传输信息，三者称为非授权国家信息基础设施(U-NII)频段。\n\n802.11a无线接口最初可以使用U-NII-1、U-NII-2、与U-NII-3频段的12条信道传输信息，具体可以使用的信道决定\n于各国的射频监管机构的规定。\n\n通过使用OFDM技术，802.11a无线接口可以支持6,9,12,18,24,36,48,54Mbps等数据速率。在修正案获批两年后，\n802.11a设备开始面世，一开始采用OFDM技术的无线芯片组极为昂贵，导致5GHz无线局域网部署缓慢。芯片组价格\n降至可负担的程度后，5GHz无线局域网显著增加。开始出现2.4GHz和5GHz两个无线接口的双频无线接入点。\n\n### 802.11b-1999\n定义了工作在2.4GHz ISM频段(2.4GHz~2.4835GHz)的无线局域网通信。支持1，2，5.5，11Mbps四种数据速率。它是\n最早广泛部署应用的标准。\n\n### 802.11d-2001\n由于原始标准是为符合美国、加拿大、日本于欧洲的监管规定而制定的标准。因此，802.11d增加了必要的定义和要求，\n以便802.11设备能在于是标准没有涉及的地区使用。\n\nBeacon Fream 和 probe response frame的字段中包含国家代码信息，802.11d兼容设备利用该信息确保符合特定国家\n的频率和功率规定。\n\n\n### 802.11e-2005\n由于原始标准没有为使用Wi-Fi语音等时敏应用定义合乎要求的服务质量(QoS)规程。语音、视频、音频等应用要求较低\n的延迟和抖动，其传输的优先级高于标准的数据应用流量。802.11e修正案定义了二层MAC机制，以满足无线局域网对时\n敏应用的QoS要求。\n\n802.11原始标准定义了两种方法，以便802.11无线接口卡获取半双工介质的控制权。分布式协调功能(DCF)是默认方法，这种\n基于争用的方法用于确定接下来使用无线介质进行传输的设备。为了满足Qos要求，混合协调功能(HCF)引入，增强型分布式\n信道访问(EDCA)是对DCF的扩展，这种介质访问方法根据上层协议提供“帧优先”，以满足必要的延迟要求。\n\nWi-Fi联盟有一项名为Wi-Fi多媒体(WMM)的认证项目。这项认证定义了802.11e修正案的许多要素，并根据重要性将流量\n优先级划分为4个访问类别。\n\n### 802.11g-2003\n是一项引起轰动的修正案，无线接口采用称为扩展速率物理层的新技术，并仍然可以使用2.4GHz ISM频段。\n\n定义了两种强制和两种可选的物理层\n为了获取更高的数据速率，设备必须支持称为扩展速率物理层-正交频分复用(ERP-OFDM)的物理层技术，支持6，9，12，18，\n24，36，48，54Mbps等多种速率。\n\n为了向后兼容802.11 DSSS与802.11b网络，设备必须支持称为扩展速率物理层-直接序列扩频/补码键控(ERP-DSSS/CCK)的物\n理层技术。\n\n802.11修正案的比较\n\n|        |802.11遗留|802.11b|802.11g|802.11a|\n|:------:|:--------:|:--------:|:-----:|:-----:|\n|工作频段|2.4GHz ISM|2.4GHz ISM|2.4GHz ISM|5GHz U-NII-1,U-NII-2,U-NII-3|\n|扩频技术|FHSS或DSSS|HR-DSSS   |ERP:强制支持ERP-OFDM与ERP-DSSS/CCK|OFDM|\n|数据速率|1或2Mbps  |DSSS:1 or 2Mbps/HR-DSSS: 5.5or 11Mbps|ERP-DSS/CCK:1,2,5.5,11Mbps/ERP-OFDM:强制支持6,12,24Mbs,可选支持9,18,36,48,54Mbps|强制支持6,12,24Mbps,可选支持9,18,36,48,54Mbps|\n|向后兼容|不适用    |仅802.11 DSSS|802.11b HR-DSSS和802.11DSSS|无|\n|获批时间|1997年    |1999年    |2003年|1999年|\n\n### 802.11h-2003\n定义了动态频率选择(DFS)和发射功率控制(TPC)机制。初衷是为了满足欧洲对于5GHz频段通信的监管要求，以及检测和\n避免对5GHz卫星和雷达系统的干扰。\n\n802.11h还定义了一个新的频段,UNII-2扩展(UNII-2 Extended)频段。属于802.11a频段的延申。\n\nDFS本质上属于雷达检测和雷达干扰回避技术，提供以下功能。\n> 接入点根据支持的信道，允许客户端进行关联。如果客户端成为接入点所在的无线网络的成员，称二者建立关联。\n> 接入点可以将信道禁声以测试是否存在雷达传输。\n> 在使用信道之前，接入点可以测试信道是否存在雷达传输。\n> 接入点可以检测当前信道和其他信道是否存在雷达传输。\n> 如果检测到雷达传输，接入点将停止操作以避免干扰。\n> 检测到干扰时，接入点可以选择不同的信道进行传输，并通知所有关联到自己的客户端。\n\nTPC致力于满足有关传输功率的监管要求，提供以下功能。\n> 客户端可以根据发射功率与接入点建立关连。\n> 如果法规允许，接入点和客户端遵守信道的最大发射功率电平。\n> 接入点可以指定某个或所有关联到自己的客户端使用的发射功率。\n> 接入点可以根据实际的射频环境参数（如路径损耗）调整客户端的传输功率。\n\n\n(未完待续...)\n","slug":"CWNA-IEEE-802-11标准与修正案","published":1,"updated":"2022-01-10T12:15:24.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632b000fh6fda2xkcybj","content":"<p>1.IEEE 802.11原始标准<br>2.IEEE 802.11-2016标准</p>\n<blockquote>\n<p> 802.11a-1999<br> 802.11b-1999<br> 802.11d-2001<br> 802.11e-2005<br> 802.11g-2003<br> 802.11h-2003<br> 802.11i-2003<br> 802.11j-2004<br> 802.11k-2008<br> 802.11n-2009<br> 802.11p-2010<br> 802.11r-2008<br> 802.11s-2011<br> 802.11u-2011<br> 802.11v-2011<br> 802.11w-2009<br> 802.11y-2008<br> 802.11z-2010<br> 802.11aa-2012<br> 802.11ac-2013<br> 802.11ad-2012<br> 802.11ae-2012<br> 802.11af-2014</p>\n</blockquote>\n<p>3.IEEE 802.11-2016标准发布后获批的修正案</p>\n<blockquote>\n<p> 802.11ah-2016<br> 802.11ai-2016<br> 802.11aj-2018<br> 802.11aq-2018<br> 802.11ak-2018</p>\n</blockquote>\n<p>4.IEEE 802.11 修正案草案</p>\n<blockquote>\n<p> 802.11ax<br> 802.11ay<br> 802.11az<br> 802.11ba</p>\n</blockquote>\n<p>5.已失效的IEEE 802.11 修正案</p>\n<blockquote>\n<p> 802.11F<br> 802.11T</p>\n</blockquote>\n<p>4.IEEE 802.11m 任务组</p>\n<hr>\n<p>上面所列的一系列标准是由IEEE协会制定，命名一般是按照字母顺序排列。但是，由于获批时间不一样，存在先后。</p>\n<h3 id=\"标准演进历程\"><a href=\"#标准演进历程\" class=\"headerlink\" title=\"标准演进历程\"></a>标准演进历程</h3><p>1997年6月，IEEE发布了802.11原始标准（IEEE std 802.11-1997）。通常称为802.11 prime。<br>1999年对原始标准进行了修订；<br>2003年再次确认以后以IEEE Std 802.11-1999(R-2003)为名重新发布。<br>2007年3月,IEEE 802.11-2007标准（IEEE Std 802.11-2007）获批。<br>2012年2月,IEEE 802.11-2012标准(IEEE Std 802.11-2012)获批。<br>2016年12月,IEEE 802.11-2016标准(IEEE Std 802.11-2016)获批。</p>\n<p>新标准IEEE Std 802.11-2016是IEEE Std 802.11-2012标准与获批的修正案合并为一份文档形成。严格来说，任何<br>纳入新标准的修正案都不再单独存在，然而，Wi-Fi联盟与大多数无线局域网专业人士仍然习惯采用获批的名称。</p>\n<h3 id=\"802-11a-1999\"><a href=\"#802-11a-1999\" class=\"headerlink\" title=\"802.11a-1999\"></a>802.11a-1999</h3><p>采用了正交频分复用(OFDM)的射频技术，定义了5GHz频率空间的无线局域网通信。可以使用三个不同的100MHz非授<br>权频段传输信息，三者称为非授权国家信息基础设施(U-NII)频段。</p>\n<p>802.11a无线接口最初可以使用U-NII-1、U-NII-2、与U-NII-3频段的12条信道传输信息，具体可以使用的信道决定<br>于各国的射频监管机构的规定。</p>\n<p>通过使用OFDM技术，802.11a无线接口可以支持6,9,12,18,24,36,48,54Mbps等数据速率。在修正案获批两年后，<br>802.11a设备开始面世，一开始采用OFDM技术的无线芯片组极为昂贵，导致5GHz无线局域网部署缓慢。芯片组价格<br>降至可负担的程度后，5GHz无线局域网显著增加。开始出现2.4GHz和5GHz两个无线接口的双频无线接入点。</p>\n<h3 id=\"802-11b-1999\"><a href=\"#802-11b-1999\" class=\"headerlink\" title=\"802.11b-1999\"></a>802.11b-1999</h3><p>定义了工作在2.4GHz ISM频段(2.4GHz~2.4835GHz)的无线局域网通信。支持1，2，5.5，11Mbps四种数据速率。它是<br>最早广泛部署应用的标准。</p>\n<h3 id=\"802-11d-2001\"><a href=\"#802-11d-2001\" class=\"headerlink\" title=\"802.11d-2001\"></a>802.11d-2001</h3><p>由于原始标准是为符合美国、加拿大、日本于欧洲的监管规定而制定的标准。因此，802.11d增加了必要的定义和要求，<br>以便802.11设备能在于是标准没有涉及的地区使用。</p>\n<p>Beacon Fream 和 probe response frame的字段中包含国家代码信息，802.11d兼容设备利用该信息确保符合特定国家<br>的频率和功率规定。</p>\n<h3 id=\"802-11e-2005\"><a href=\"#802-11e-2005\" class=\"headerlink\" title=\"802.11e-2005\"></a>802.11e-2005</h3><p>由于原始标准没有为使用Wi-Fi语音等时敏应用定义合乎要求的服务质量(QoS)规程。语音、视频、音频等应用要求较低<br>的延迟和抖动，其传输的优先级高于标准的数据应用流量。802.11e修正案定义了二层MAC机制，以满足无线局域网对时<br>敏应用的QoS要求。</p>\n<p>802.11原始标准定义了两种方法，以便802.11无线接口卡获取半双工介质的控制权。分布式协调功能(DCF)是默认方法，这种<br>基于争用的方法用于确定接下来使用无线介质进行传输的设备。为了满足Qos要求，混合协调功能(HCF)引入，增强型分布式<br>信道访问(EDCA)是对DCF的扩展，这种介质访问方法根据上层协议提供“帧优先”，以满足必要的延迟要求。</p>\n<p>Wi-Fi联盟有一项名为Wi-Fi多媒体(WMM)的认证项目。这项认证定义了802.11e修正案的许多要素，并根据重要性将流量<br>优先级划分为4个访问类别。</p>\n<h3 id=\"802-11g-2003\"><a href=\"#802-11g-2003\" class=\"headerlink\" title=\"802.11g-2003\"></a>802.11g-2003</h3><p>是一项引起轰动的修正案，无线接口采用称为扩展速率物理层的新技术，并仍然可以使用2.4GHz ISM频段。</p>\n<p>定义了两种强制和两种可选的物理层<br>为了获取更高的数据速率，设备必须支持称为扩展速率物理层-正交频分复用(ERP-OFDM)的物理层技术，支持6，9，12，18，<br>24，36，48，54Mbps等多种速率。</p>\n<p>为了向后兼容802.11 DSSS与802.11b网络，设备必须支持称为扩展速率物理层-直接序列扩频/补码键控(ERP-DSSS/CCK)的物<br>理层技术。</p>\n<p>802.11修正案的比较</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">802.11遗留</th>\n<th style=\"text-align:center\">802.11b</th>\n<th style=\"text-align:center\">802.11g</th>\n<th style=\"text-align:center\">802.11a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">工作频段</td>\n<td style=\"text-align:center\">2.4GHz ISM</td>\n<td style=\"text-align:center\">2.4GHz ISM</td>\n<td style=\"text-align:center\">2.4GHz ISM</td>\n<td style=\"text-align:center\">5GHz U-NII-1,U-NII-2,U-NII-3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">扩频技术</td>\n<td style=\"text-align:center\">FHSS或DSSS</td>\n<td style=\"text-align:center\">HR-DSSS</td>\n<td style=\"text-align:center\">ERP:强制支持ERP-OFDM与ERP-DSSS/CCK</td>\n<td style=\"text-align:center\">OFDM</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数据速率</td>\n<td style=\"text-align:center\">1或2Mbps</td>\n<td style=\"text-align:center\">DSSS:1 or 2Mbps/HR-DSSS: 5.5or 11Mbps</td>\n<td style=\"text-align:center\">ERP-DSS/CCK:1,2,5.5,11Mbps/ERP-OFDM:强制支持6,12,24Mbs,可选支持9,18,36,48,54Mbps</td>\n<td style=\"text-align:center\">强制支持6,12,24Mbps,可选支持9,18,36,48,54Mbps</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">向后兼容</td>\n<td style=\"text-align:center\">不适用</td>\n<td style=\"text-align:center\">仅802.11 DSSS</td>\n<td style=\"text-align:center\">802.11b HR-DSSS和802.11DSSS</td>\n<td style=\"text-align:center\">无</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">获批时间</td>\n<td style=\"text-align:center\">1997年</td>\n<td style=\"text-align:center\">1999年</td>\n<td style=\"text-align:center\">2003年</td>\n<td style=\"text-align:center\">1999年</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"802-11h-2003\"><a href=\"#802-11h-2003\" class=\"headerlink\" title=\"802.11h-2003\"></a>802.11h-2003</h3><p>定义了动态频率选择(DFS)和发射功率控制(TPC)机制。初衷是为了满足欧洲对于5GHz频段通信的监管要求，以及检测和<br>避免对5GHz卫星和雷达系统的干扰。</p>\n<p>802.11h还定义了一个新的频段,UNII-2扩展(UNII-2 Extended)频段。属于802.11a频段的延申。</p>\n<p>DFS本质上属于雷达检测和雷达干扰回避技术，提供以下功能。</p>\n<blockquote>\n<p>接入点根据支持的信道，允许客户端进行关联。如果客户端成为接入点所在的无线网络的成员，称二者建立关联。<br>接入点可以将信道禁声以测试是否存在雷达传输。<br>在使用信道之前，接入点可以测试信道是否存在雷达传输。<br>接入点可以检测当前信道和其他信道是否存在雷达传输。<br>如果检测到雷达传输，接入点将停止操作以避免干扰。<br>检测到干扰时，接入点可以选择不同的信道进行传输，并通知所有关联到自己的客户端。</p>\n</blockquote>\n<p>TPC致力于满足有关传输功率的监管要求，提供以下功能。</p>\n<blockquote>\n<p>客户端可以根据发射功率与接入点建立关连。<br>如果法规允许，接入点和客户端遵守信道的最大发射功率电平。<br>接入点可以指定某个或所有关联到自己的客户端使用的发射功率。<br>接入点可以根据实际的射频环境参数（如路径损耗）调整客户端的传输功率。</p>\n</blockquote>\n<p>(未完待续…)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.IEEE 802.11原始标准<br>2.IEEE 802.11-2016标准</p>\n<blockquote>\n<p> 802.11a-1999<br> 802.11b-1999<br> 802.11d-2001<br> 802.11e-2005<br> 802.11g-2003<br> 802.11h-2003<br> 802.11i-2003<br> 802.11j-2004<br> 802.11k-2008<br> 802.11n-2009<br> 802.11p-2010<br> 802.11r-2008<br> 802.11s-2011<br> 802.11u-2011<br> 802.11v-2011<br> 802.11w-2009<br> 802.11y-2008<br> 802.11z-2010<br> 802.11aa-2012<br> 802.11ac-2013<br> 802.11ad-2012<br> 802.11ae-2012<br> 802.11af-2014</p>\n</blockquote>\n<p>3.IEEE 802.11-2016标准发布后获批的修正案</p>\n<blockquote>\n<p> 802.11ah-2016<br> 802.11ai-2016<br> 802.11aj-2018<br> 802.11aq-2018<br> 802.11ak-2018</p>\n</blockquote>\n<p>4.IEEE 802.11 修正案草案</p>\n<blockquote>\n<p> 802.11ax<br> 802.11ay<br> 802.11az<br> 802.11ba</p>\n</blockquote>\n<p>5.已失效的IEEE 802.11 修正案</p>\n<blockquote>\n<p> 802.11F<br> 802.11T</p>\n</blockquote>\n<p>4.IEEE 802.11m 任务组</p>\n<hr>\n<p>上面所列的一系列标准是由IEEE协会制定，命名一般是按照字母顺序排列。但是，由于获批时间不一样，存在先后。</p>\n<h3 id=\"标准演进历程\"><a href=\"#标准演进历程\" class=\"headerlink\" title=\"标准演进历程\"></a>标准演进历程</h3><p>1997年6月，IEEE发布了802.11原始标准（IEEE std 802.11-1997）。通常称为802.11 prime。<br>1999年对原始标准进行了修订；<br>2003年再次确认以后以IEEE Std 802.11-1999(R-2003)为名重新发布。<br>2007年3月,IEEE 802.11-2007标准（IEEE Std 802.11-2007）获批。<br>2012年2月,IEEE 802.11-2012标准(IEEE Std 802.11-2012)获批。<br>2016年12月,IEEE 802.11-2016标准(IEEE Std 802.11-2016)获批。</p>\n<p>新标准IEEE Std 802.11-2016是IEEE Std 802.11-2012标准与获批的修正案合并为一份文档形成。严格来说，任何<br>纳入新标准的修正案都不再单独存在，然而，Wi-Fi联盟与大多数无线局域网专业人士仍然习惯采用获批的名称。</p>\n<h3 id=\"802-11a-1999\"><a href=\"#802-11a-1999\" class=\"headerlink\" title=\"802.11a-1999\"></a>802.11a-1999</h3><p>采用了正交频分复用(OFDM)的射频技术，定义了5GHz频率空间的无线局域网通信。可以使用三个不同的100MHz非授<br>权频段传输信息，三者称为非授权国家信息基础设施(U-NII)频段。</p>\n<p>802.11a无线接口最初可以使用U-NII-1、U-NII-2、与U-NII-3频段的12条信道传输信息，具体可以使用的信道决定<br>于各国的射频监管机构的规定。</p>\n<p>通过使用OFDM技术，802.11a无线接口可以支持6,9,12,18,24,36,48,54Mbps等数据速率。在修正案获批两年后，<br>802.11a设备开始面世，一开始采用OFDM技术的无线芯片组极为昂贵，导致5GHz无线局域网部署缓慢。芯片组价格<br>降至可负担的程度后，5GHz无线局域网显著增加。开始出现2.4GHz和5GHz两个无线接口的双频无线接入点。</p>\n<h3 id=\"802-11b-1999\"><a href=\"#802-11b-1999\" class=\"headerlink\" title=\"802.11b-1999\"></a>802.11b-1999</h3><p>定义了工作在2.4GHz ISM频段(2.4GHz~2.4835GHz)的无线局域网通信。支持1，2，5.5，11Mbps四种数据速率。它是<br>最早广泛部署应用的标准。</p>\n<h3 id=\"802-11d-2001\"><a href=\"#802-11d-2001\" class=\"headerlink\" title=\"802.11d-2001\"></a>802.11d-2001</h3><p>由于原始标准是为符合美国、加拿大、日本于欧洲的监管规定而制定的标准。因此，802.11d增加了必要的定义和要求，<br>以便802.11设备能在于是标准没有涉及的地区使用。</p>\n<p>Beacon Fream 和 probe response frame的字段中包含国家代码信息，802.11d兼容设备利用该信息确保符合特定国家<br>的频率和功率规定。</p>\n<h3 id=\"802-11e-2005\"><a href=\"#802-11e-2005\" class=\"headerlink\" title=\"802.11e-2005\"></a>802.11e-2005</h3><p>由于原始标准没有为使用Wi-Fi语音等时敏应用定义合乎要求的服务质量(QoS)规程。语音、视频、音频等应用要求较低<br>的延迟和抖动，其传输的优先级高于标准的数据应用流量。802.11e修正案定义了二层MAC机制，以满足无线局域网对时<br>敏应用的QoS要求。</p>\n<p>802.11原始标准定义了两种方法，以便802.11无线接口卡获取半双工介质的控制权。分布式协调功能(DCF)是默认方法，这种<br>基于争用的方法用于确定接下来使用无线介质进行传输的设备。为了满足Qos要求，混合协调功能(HCF)引入，增强型分布式<br>信道访问(EDCA)是对DCF的扩展，这种介质访问方法根据上层协议提供“帧优先”，以满足必要的延迟要求。</p>\n<p>Wi-Fi联盟有一项名为Wi-Fi多媒体(WMM)的认证项目。这项认证定义了802.11e修正案的许多要素，并根据重要性将流量<br>优先级划分为4个访问类别。</p>\n<h3 id=\"802-11g-2003\"><a href=\"#802-11g-2003\" class=\"headerlink\" title=\"802.11g-2003\"></a>802.11g-2003</h3><p>是一项引起轰动的修正案，无线接口采用称为扩展速率物理层的新技术，并仍然可以使用2.4GHz ISM频段。</p>\n<p>定义了两种强制和两种可选的物理层<br>为了获取更高的数据速率，设备必须支持称为扩展速率物理层-正交频分复用(ERP-OFDM)的物理层技术，支持6，9，12，18，<br>24，36，48，54Mbps等多种速率。</p>\n<p>为了向后兼容802.11 DSSS与802.11b网络，设备必须支持称为扩展速率物理层-直接序列扩频/补码键控(ERP-DSSS/CCK)的物<br>理层技术。</p>\n<p>802.11修正案的比较</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"></th>\n<th style=\"text-align:center\">802.11遗留</th>\n<th style=\"text-align:center\">802.11b</th>\n<th style=\"text-align:center\">802.11g</th>\n<th style=\"text-align:center\">802.11a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">工作频段</td>\n<td style=\"text-align:center\">2.4GHz ISM</td>\n<td style=\"text-align:center\">2.4GHz ISM</td>\n<td style=\"text-align:center\">2.4GHz ISM</td>\n<td style=\"text-align:center\">5GHz U-NII-1,U-NII-2,U-NII-3</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">扩频技术</td>\n<td style=\"text-align:center\">FHSS或DSSS</td>\n<td style=\"text-align:center\">HR-DSSS</td>\n<td style=\"text-align:center\">ERP:强制支持ERP-OFDM与ERP-DSSS/CCK</td>\n<td style=\"text-align:center\">OFDM</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">数据速率</td>\n<td style=\"text-align:center\">1或2Mbps</td>\n<td style=\"text-align:center\">DSSS:1 or 2Mbps/HR-DSSS: 5.5or 11Mbps</td>\n<td style=\"text-align:center\">ERP-DSS/CCK:1,2,5.5,11Mbps/ERP-OFDM:强制支持6,12,24Mbs,可选支持9,18,36,48,54Mbps</td>\n<td style=\"text-align:center\">强制支持6,12,24Mbps,可选支持9,18,36,48,54Mbps</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">向后兼容</td>\n<td style=\"text-align:center\">不适用</td>\n<td style=\"text-align:center\">仅802.11 DSSS</td>\n<td style=\"text-align:center\">802.11b HR-DSSS和802.11DSSS</td>\n<td style=\"text-align:center\">无</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">获批时间</td>\n<td style=\"text-align:center\">1997年</td>\n<td style=\"text-align:center\">1999年</td>\n<td style=\"text-align:center\">2003年</td>\n<td style=\"text-align:center\">1999年</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"802-11h-2003\"><a href=\"#802-11h-2003\" class=\"headerlink\" title=\"802.11h-2003\"></a>802.11h-2003</h3><p>定义了动态频率选择(DFS)和发射功率控制(TPC)机制。初衷是为了满足欧洲对于5GHz频段通信的监管要求，以及检测和<br>避免对5GHz卫星和雷达系统的干扰。</p>\n<p>802.11h还定义了一个新的频段,UNII-2扩展(UNII-2 Extended)频段。属于802.11a频段的延申。</p>\n<p>DFS本质上属于雷达检测和雷达干扰回避技术，提供以下功能。</p>\n<blockquote>\n<p>接入点根据支持的信道，允许客户端进行关联。如果客户端成为接入点所在的无线网络的成员，称二者建立关联。<br>接入点可以将信道禁声以测试是否存在雷达传输。<br>在使用信道之前，接入点可以测试信道是否存在雷达传输。<br>接入点可以检测当前信道和其他信道是否存在雷达传输。<br>如果检测到雷达传输，接入点将停止操作以避免干扰。<br>检测到干扰时，接入点可以选择不同的信道进行传输，并通知所有关联到自己的客户端。</p>\n</blockquote>\n<p>TPC致力于满足有关传输功率的监管要求，提供以下功能。</p>\n<blockquote>\n<p>客户端可以根据发射功率与接入点建立关连。<br>如果法规允许，接入点和客户端遵守信道的最大发射功率电平。<br>接入点可以指定某个或所有关联到自己的客户端使用的发射功率。<br>接入点可以根据实际的射频环境参数（如路径损耗）调整客户端的传输功率。</p>\n</blockquote>\n<p>(未完待续…)</p>\n"},{"title":"CWNA:IEEE 802.11标准与修正案(2)","date":"2022-01-10T02:26:31.000Z","_content":"承接上一篇\n\n### 802.11i-2004\n1997-2004年，802.11原始标准对安全未作太多定义。无线局域网唯一使用的加密机制是有线等效保密(WEP)。这种64位静态加密机制早已遭到破解。\n无法提供符合要求的数据安全。安全解决方案的三要素：\n数据保密（加密）\n数据完整性（防止修改）\n身份验证（确认身份是否合法）\n\n802.11原始标准定义了两种身份验证机制。\n开放系统身份验证(open system authentication)是默认认证机制。\n共享密钥身份验证(Shared key authentication)，同样存在很大安全隐患。\n\n802.11i修正案完善了无线网络安全保护机制，它定义了强健安全网络(RSN)，致力于更好的保护通过无线方式传输的数据。\n\n**数据保密**：\n使用计数器模式密码块链消息认证码协议(CCMP)，这种协议采用高级加密算法(AES)，称为CCMP/AES\n另外也定义了临时密钥完整性协议(TKIP)做为可选的加密机制。TKIP采用ARC4流密码算法，是对WEP的改进。\n\n**数据完整性**：\n为了确保数据不被篡改\nWEP使用完整性校验值(ICV)做为数据完整性方法。\nTKIP采用消息完整性校验(MIC)；\nCCMP采用跟高的MIC以及其他机制确保数据完整性。\n另外，所有的802.11帧的帧尾都包含称为帧校验序列(FCS)的32位循环冗余校验。\n\n**身份验证**：\n802.11i采用802.1X授权框架或预共享密钥(PSK)定义了两种身份验证机制。\n802.1X解决方案可配合扩展认证协议(EAP)使用，但没有指定具体的实现方式。\n\n**强健安全网络(RSN)**:\n定义了一套用于建立认证，协商安全关联，为客户端和接入点动态生成加密密钥的机制。\nWPA属于802.11i获批前的过渡方案，而WPA2完全符合802.11i修正案。Wi-Fi联盟有一项对应于WPA2的安全认证项目。\n\n### 802.11j-2004\n为了获得日本监管机构的认可，该方案致力于改进MAC子层和物理层在4.9GHz和5GHz频段的操作。\n802.11a需要支持20MHz的信道间隔，数据速率为6,9,12,18,24,36,48,54Mbps。日本市场可以使用10MHz的信道间隔，\n可用带宽数据速率为3,4.5,6,9,12,18,24,27Mbps，必须支持3,6,12Mbps。\n\n### 802.11k-2008\n定义了无线资源测量(RRM)的相关标准。要求物理层和数据链路层的MAC子层以请求和报告的形式提供可测量的客户统计信息。\n定义了以下重要的无线资源测量参数。\n发射功率控制：\n扩展了802.11h中的TCP方案，允许在其他频段和区域使用TPC。\n\n客户统计：\n除了信噪比，信号强度，数据速率等物理层信息外，客户端可以报告传输，重传，错误等MAC子层信息。\n\n邻居报告：\n从当前的接入点或无线局域网控制器学习目标接入点的信息，提高漫游效率。\n\n### 802.11n-2009\n这是继802.11g-2003之后另一个对Wi-Fi市场产生重大影响的方案。\n提高了2.4GHz和5GHz两个频段的吞吐量。\n通过改进物理层和MAC子层以支持到达600Mps的高吞吐量(HT)特性。\n引入了多输入多输出(MIMO)和OFDM技术。\nMIMO使用多幅接收天线和发送天线，利用了多径效应改善通信质量。不仅提高了吞吐量，还扩大了传输范围。\n\n### 802.11p-2010\n称为车载环境无线接入(WAVE)，用于支持智能交通系统应用。\n\n### 802.11r-2008\n称为快速基本服务集转换(FT)修正案。也称为快速安全漫游(FSR)\n\n### 802.11s-2011\n通常分布系统多采用有线802.3以太网介质，11s使得无线接入点充当无线分布系统(WDS)门户设备。### 802.11r-2008\n称为快速基本服务集转换(FT)修正案。也称为快速安全漫游(FSR)\n\n### 802.11u-2011\n致力于解决接入网与外部网络之间的互通问题，也成称为外部网络互通。奠定了Wi-Fi联盟的热点2.0(Hostpot 2.0)规范\n和控制点(Passpoint)认证项目的基础。\n\n### 802.11v-2011\n提供了一种信息交换的机制，有助于中央节点以无线方式简化客户端的配置。定义了无线网络管理(WNM)，802.11终端之间\n可以交换信息以提高无线网络的整体性能。\n\nWNM协议还定义了无线局域网交换位置信息的机制，并为多BSSID功能提供支持。\nWNM协议包括一种新的WMM休眠模式(WNM-Sleep)，客户端可以长时间进入休眠而无需从接入点接收帧。\n\n### 802.11w-2009\n使用802.11管理帧的数据链路层极易受到拒绝服务(Dos)攻击。802.11w致力于如何安全的交付管理帧，防止管理帧遭到伪造。\n旨在保护单播，多播，广播管理帧的安全。\n\n802.11w帧称为强健管理帧(robust management frame),包括取消关联帧，取消身份验证帧，强健行为帧。\nCCMP用于保护单播帧的安全，而广播/多播完整性协议(BIP)用于保护广播/多播帧的安全。\n\n不过，目前无法阻止所有的二层拒绝服务攻击。\n\n\n### 802.11y-2008\n多数802.11设备使用非授权频段，802.11y用于规范授权频段的相关操作。\n\n### 802.11z-2010\n定义并规范直接链路建立(DLS)机制。是的关联到同一接入点的客户端之间直接交换帧，而无需通过接入点交换。\n目前尚未实现应用。\n\n(未完待续...)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/CWNA-IEEE-802-11标准与修正案-2.md","raw":"---\ntitle: 'CWNA:IEEE 802.11标准与修正案(2)'\ndate: 2022-01-10 10:26:31\ntags: 'Wi-Fi'\n---\n承接上一篇\n\n### 802.11i-2004\n1997-2004年，802.11原始标准对安全未作太多定义。无线局域网唯一使用的加密机制是有线等效保密(WEP)。这种64位静态加密机制早已遭到破解。\n无法提供符合要求的数据安全。安全解决方案的三要素：\n数据保密（加密）\n数据完整性（防止修改）\n身份验证（确认身份是否合法）\n\n802.11原始标准定义了两种身份验证机制。\n开放系统身份验证(open system authentication)是默认认证机制。\n共享密钥身份验证(Shared key authentication)，同样存在很大安全隐患。\n\n802.11i修正案完善了无线网络安全保护机制，它定义了强健安全网络(RSN)，致力于更好的保护通过无线方式传输的数据。\n\n**数据保密**：\n使用计数器模式密码块链消息认证码协议(CCMP)，这种协议采用高级加密算法(AES)，称为CCMP/AES\n另外也定义了临时密钥完整性协议(TKIP)做为可选的加密机制。TKIP采用ARC4流密码算法，是对WEP的改进。\n\n**数据完整性**：\n为了确保数据不被篡改\nWEP使用完整性校验值(ICV)做为数据完整性方法。\nTKIP采用消息完整性校验(MIC)；\nCCMP采用跟高的MIC以及其他机制确保数据完整性。\n另外，所有的802.11帧的帧尾都包含称为帧校验序列(FCS)的32位循环冗余校验。\n\n**身份验证**：\n802.11i采用802.1X授权框架或预共享密钥(PSK)定义了两种身份验证机制。\n802.1X解决方案可配合扩展认证协议(EAP)使用，但没有指定具体的实现方式。\n\n**强健安全网络(RSN)**:\n定义了一套用于建立认证，协商安全关联，为客户端和接入点动态生成加密密钥的机制。\nWPA属于802.11i获批前的过渡方案，而WPA2完全符合802.11i修正案。Wi-Fi联盟有一项对应于WPA2的安全认证项目。\n\n### 802.11j-2004\n为了获得日本监管机构的认可，该方案致力于改进MAC子层和物理层在4.9GHz和5GHz频段的操作。\n802.11a需要支持20MHz的信道间隔，数据速率为6,9,12,18,24,36,48,54Mbps。日本市场可以使用10MHz的信道间隔，\n可用带宽数据速率为3,4.5,6,9,12,18,24,27Mbps，必须支持3,6,12Mbps。\n\n### 802.11k-2008\n定义了无线资源测量(RRM)的相关标准。要求物理层和数据链路层的MAC子层以请求和报告的形式提供可测量的客户统计信息。\n定义了以下重要的无线资源测量参数。\n发射功率控制：\n扩展了802.11h中的TCP方案，允许在其他频段和区域使用TPC。\n\n客户统计：\n除了信噪比，信号强度，数据速率等物理层信息外，客户端可以报告传输，重传，错误等MAC子层信息。\n\n邻居报告：\n从当前的接入点或无线局域网控制器学习目标接入点的信息，提高漫游效率。\n\n### 802.11n-2009\n这是继802.11g-2003之后另一个对Wi-Fi市场产生重大影响的方案。\n提高了2.4GHz和5GHz两个频段的吞吐量。\n通过改进物理层和MAC子层以支持到达600Mps的高吞吐量(HT)特性。\n引入了多输入多输出(MIMO)和OFDM技术。\nMIMO使用多幅接收天线和发送天线，利用了多径效应改善通信质量。不仅提高了吞吐量，还扩大了传输范围。\n\n### 802.11p-2010\n称为车载环境无线接入(WAVE)，用于支持智能交通系统应用。\n\n### 802.11r-2008\n称为快速基本服务集转换(FT)修正案。也称为快速安全漫游(FSR)\n\n### 802.11s-2011\n通常分布系统多采用有线802.3以太网介质，11s使得无线接入点充当无线分布系统(WDS)门户设备。### 802.11r-2008\n称为快速基本服务集转换(FT)修正案。也称为快速安全漫游(FSR)\n\n### 802.11u-2011\n致力于解决接入网与外部网络之间的互通问题，也成称为外部网络互通。奠定了Wi-Fi联盟的热点2.0(Hostpot 2.0)规范\n和控制点(Passpoint)认证项目的基础。\n\n### 802.11v-2011\n提供了一种信息交换的机制，有助于中央节点以无线方式简化客户端的配置。定义了无线网络管理(WNM)，802.11终端之间\n可以交换信息以提高无线网络的整体性能。\n\nWNM协议还定义了无线局域网交换位置信息的机制，并为多BSSID功能提供支持。\nWNM协议包括一种新的WMM休眠模式(WNM-Sleep)，客户端可以长时间进入休眠而无需从接入点接收帧。\n\n### 802.11w-2009\n使用802.11管理帧的数据链路层极易受到拒绝服务(Dos)攻击。802.11w致力于如何安全的交付管理帧，防止管理帧遭到伪造。\n旨在保护单播，多播，广播管理帧的安全。\n\n802.11w帧称为强健管理帧(robust management frame),包括取消关联帧，取消身份验证帧，强健行为帧。\nCCMP用于保护单播帧的安全，而广播/多播完整性协议(BIP)用于保护广播/多播帧的安全。\n\n不过，目前无法阻止所有的二层拒绝服务攻击。\n\n\n### 802.11y-2008\n多数802.11设备使用非授权频段，802.11y用于规范授权频段的相关操作。\n\n### 802.11z-2010\n定义并规范直接链路建立(DLS)机制。是的关联到同一接入点的客户端之间直接交换帧，而无需通过接入点交换。\n目前尚未实现应用。\n\n(未完待续...)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"CWNA-IEEE-802-11标准与修正案-2","published":1,"updated":"2022-01-10T12:15:18.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632c000gh6fd3jrnd4i6","content":"<p>承接上一篇</p>\n<h3 id=\"802-11i-2004\"><a href=\"#802-11i-2004\" class=\"headerlink\" title=\"802.11i-2004\"></a>802.11i-2004</h3><p>1997-2004年，802.11原始标准对安全未作太多定义。无线局域网唯一使用的加密机制是有线等效保密(WEP)。这种64位静态加密机制早已遭到破解。<br>无法提供符合要求的数据安全。安全解决方案的三要素：<br>数据保密（加密）<br>数据完整性（防止修改）<br>身份验证（确认身份是否合法）</p>\n<p>802.11原始标准定义了两种身份验证机制。<br>开放系统身份验证(open system authentication)是默认认证机制。<br>共享密钥身份验证(Shared key authentication)，同样存在很大安全隐患。</p>\n<p>802.11i修正案完善了无线网络安全保护机制，它定义了强健安全网络(RSN)，致力于更好的保护通过无线方式传输的数据。</p>\n<p><strong>数据保密</strong>：<br>使用计数器模式密码块链消息认证码协议(CCMP)，这种协议采用高级加密算法(AES)，称为CCMP/AES<br>另外也定义了临时密钥完整性协议(TKIP)做为可选的加密机制。TKIP采用ARC4流密码算法，是对WEP的改进。</p>\n<p><strong>数据完整性</strong>：<br>为了确保数据不被篡改<br>WEP使用完整性校验值(ICV)做为数据完整性方法。<br>TKIP采用消息完整性校验(MIC)；<br>CCMP采用跟高的MIC以及其他机制确保数据完整性。<br>另外，所有的802.11帧的帧尾都包含称为帧校验序列(FCS)的32位循环冗余校验。</p>\n<p><strong>身份验证</strong>：<br>802.11i采用802.1X授权框架或预共享密钥(PSK)定义了两种身份验证机制。<br>802.1X解决方案可配合扩展认证协议(EAP)使用，但没有指定具体的实现方式。</p>\n<p><strong>强健安全网络(RSN)</strong>:<br>定义了一套用于建立认证，协商安全关联，为客户端和接入点动态生成加密密钥的机制。<br>WPA属于802.11i获批前的过渡方案，而WPA2完全符合802.11i修正案。Wi-Fi联盟有一项对应于WPA2的安全认证项目。</p>\n<h3 id=\"802-11j-2004\"><a href=\"#802-11j-2004\" class=\"headerlink\" title=\"802.11j-2004\"></a>802.11j-2004</h3><p>为了获得日本监管机构的认可，该方案致力于改进MAC子层和物理层在4.9GHz和5GHz频段的操作。<br>802.11a需要支持20MHz的信道间隔，数据速率为6,9,12,18,24,36,48,54Mbps。日本市场可以使用10MHz的信道间隔，<br>可用带宽数据速率为3,4.5,6,9,12,18,24,27Mbps，必须支持3,6,12Mbps。</p>\n<h3 id=\"802-11k-2008\"><a href=\"#802-11k-2008\" class=\"headerlink\" title=\"802.11k-2008\"></a>802.11k-2008</h3><p>定义了无线资源测量(RRM)的相关标准。要求物理层和数据链路层的MAC子层以请求和报告的形式提供可测量的客户统计信息。<br>定义了以下重要的无线资源测量参数。<br>发射功率控制：<br>扩展了802.11h中的TCP方案，允许在其他频段和区域使用TPC。</p>\n<p>客户统计：<br>除了信噪比，信号强度，数据速率等物理层信息外，客户端可以报告传输，重传，错误等MAC子层信息。</p>\n<p>邻居报告：<br>从当前的接入点或无线局域网控制器学习目标接入点的信息，提高漫游效率。</p>\n<h3 id=\"802-11n-2009\"><a href=\"#802-11n-2009\" class=\"headerlink\" title=\"802.11n-2009\"></a>802.11n-2009</h3><p>这是继802.11g-2003之后另一个对Wi-Fi市场产生重大影响的方案。<br>提高了2.4GHz和5GHz两个频段的吞吐量。<br>通过改进物理层和MAC子层以支持到达600Mps的高吞吐量(HT)特性。<br>引入了多输入多输出(MIMO)和OFDM技术。<br>MIMO使用多幅接收天线和发送天线，利用了多径效应改善通信质量。不仅提高了吞吐量，还扩大了传输范围。</p>\n<h3 id=\"802-11p-2010\"><a href=\"#802-11p-2010\" class=\"headerlink\" title=\"802.11p-2010\"></a>802.11p-2010</h3><p>称为车载环境无线接入(WAVE)，用于支持智能交通系统应用。</p>\n<h3 id=\"802-11r-2008\"><a href=\"#802-11r-2008\" class=\"headerlink\" title=\"802.11r-2008\"></a>802.11r-2008</h3><p>称为快速基本服务集转换(FT)修正案。也称为快速安全漫游(FSR)</p>\n<h3 id=\"802-11s-2011\"><a href=\"#802-11s-2011\" class=\"headerlink\" title=\"802.11s-2011\"></a>802.11s-2011</h3><p>通常分布系统多采用有线802.3以太网介质，11s使得无线接入点充当无线分布系统(WDS)门户设备。### 802.11r-2008<br>称为快速基本服务集转换(FT)修正案。也称为快速安全漫游(FSR)</p>\n<h3 id=\"802-11u-2011\"><a href=\"#802-11u-2011\" class=\"headerlink\" title=\"802.11u-2011\"></a>802.11u-2011</h3><p>致力于解决接入网与外部网络之间的互通问题，也成称为外部网络互通。奠定了Wi-Fi联盟的热点2.0(Hostpot 2.0)规范<br>和控制点(Passpoint)认证项目的基础。</p>\n<h3 id=\"802-11v-2011\"><a href=\"#802-11v-2011\" class=\"headerlink\" title=\"802.11v-2011\"></a>802.11v-2011</h3><p>提供了一种信息交换的机制，有助于中央节点以无线方式简化客户端的配置。定义了无线网络管理(WNM)，802.11终端之间<br>可以交换信息以提高无线网络的整体性能。</p>\n<p>WNM协议还定义了无线局域网交换位置信息的机制，并为多BSSID功能提供支持。<br>WNM协议包括一种新的WMM休眠模式(WNM-Sleep)，客户端可以长时间进入休眠而无需从接入点接收帧。</p>\n<h3 id=\"802-11w-2009\"><a href=\"#802-11w-2009\" class=\"headerlink\" title=\"802.11w-2009\"></a>802.11w-2009</h3><p>使用802.11管理帧的数据链路层极易受到拒绝服务(Dos)攻击。802.11w致力于如何安全的交付管理帧，防止管理帧遭到伪造。<br>旨在保护单播，多播，广播管理帧的安全。</p>\n<p>802.11w帧称为强健管理帧(robust management frame),包括取消关联帧，取消身份验证帧，强健行为帧。<br>CCMP用于保护单播帧的安全，而广播/多播完整性协议(BIP)用于保护广播/多播帧的安全。</p>\n<p>不过，目前无法阻止所有的二层拒绝服务攻击。</p>\n<h3 id=\"802-11y-2008\"><a href=\"#802-11y-2008\" class=\"headerlink\" title=\"802.11y-2008\"></a>802.11y-2008</h3><p>多数802.11设备使用非授权频段，802.11y用于规范授权频段的相关操作。</p>\n<h3 id=\"802-11z-2010\"><a href=\"#802-11z-2010\" class=\"headerlink\" title=\"802.11z-2010\"></a>802.11z-2010</h3><p>定义并规范直接链路建立(DLS)机制。是的关联到同一接入点的客户端之间直接交换帧，而无需通过接入点交换。<br>目前尚未实现应用。</p>\n<p>(未完待续…)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>承接上一篇</p>\n<h3 id=\"802-11i-2004\"><a href=\"#802-11i-2004\" class=\"headerlink\" title=\"802.11i-2004\"></a>802.11i-2004</h3><p>1997-2004年，802.11原始标准对安全未作太多定义。无线局域网唯一使用的加密机制是有线等效保密(WEP)。这种64位静态加密机制早已遭到破解。<br>无法提供符合要求的数据安全。安全解决方案的三要素：<br>数据保密（加密）<br>数据完整性（防止修改）<br>身份验证（确认身份是否合法）</p>\n<p>802.11原始标准定义了两种身份验证机制。<br>开放系统身份验证(open system authentication)是默认认证机制。<br>共享密钥身份验证(Shared key authentication)，同样存在很大安全隐患。</p>\n<p>802.11i修正案完善了无线网络安全保护机制，它定义了强健安全网络(RSN)，致力于更好的保护通过无线方式传输的数据。</p>\n<p><strong>数据保密</strong>：<br>使用计数器模式密码块链消息认证码协议(CCMP)，这种协议采用高级加密算法(AES)，称为CCMP/AES<br>另外也定义了临时密钥完整性协议(TKIP)做为可选的加密机制。TKIP采用ARC4流密码算法，是对WEP的改进。</p>\n<p><strong>数据完整性</strong>：<br>为了确保数据不被篡改<br>WEP使用完整性校验值(ICV)做为数据完整性方法。<br>TKIP采用消息完整性校验(MIC)；<br>CCMP采用跟高的MIC以及其他机制确保数据完整性。<br>另外，所有的802.11帧的帧尾都包含称为帧校验序列(FCS)的32位循环冗余校验。</p>\n<p><strong>身份验证</strong>：<br>802.11i采用802.1X授权框架或预共享密钥(PSK)定义了两种身份验证机制。<br>802.1X解决方案可配合扩展认证协议(EAP)使用，但没有指定具体的实现方式。</p>\n<p><strong>强健安全网络(RSN)</strong>:<br>定义了一套用于建立认证，协商安全关联，为客户端和接入点动态生成加密密钥的机制。<br>WPA属于802.11i获批前的过渡方案，而WPA2完全符合802.11i修正案。Wi-Fi联盟有一项对应于WPA2的安全认证项目。</p>\n<h3 id=\"802-11j-2004\"><a href=\"#802-11j-2004\" class=\"headerlink\" title=\"802.11j-2004\"></a>802.11j-2004</h3><p>为了获得日本监管机构的认可，该方案致力于改进MAC子层和物理层在4.9GHz和5GHz频段的操作。<br>802.11a需要支持20MHz的信道间隔，数据速率为6,9,12,18,24,36,48,54Mbps。日本市场可以使用10MHz的信道间隔，<br>可用带宽数据速率为3,4.5,6,9,12,18,24,27Mbps，必须支持3,6,12Mbps。</p>\n<h3 id=\"802-11k-2008\"><a href=\"#802-11k-2008\" class=\"headerlink\" title=\"802.11k-2008\"></a>802.11k-2008</h3><p>定义了无线资源测量(RRM)的相关标准。要求物理层和数据链路层的MAC子层以请求和报告的形式提供可测量的客户统计信息。<br>定义了以下重要的无线资源测量参数。<br>发射功率控制：<br>扩展了802.11h中的TCP方案，允许在其他频段和区域使用TPC。</p>\n<p>客户统计：<br>除了信噪比，信号强度，数据速率等物理层信息外，客户端可以报告传输，重传，错误等MAC子层信息。</p>\n<p>邻居报告：<br>从当前的接入点或无线局域网控制器学习目标接入点的信息，提高漫游效率。</p>\n<h3 id=\"802-11n-2009\"><a href=\"#802-11n-2009\" class=\"headerlink\" title=\"802.11n-2009\"></a>802.11n-2009</h3><p>这是继802.11g-2003之后另一个对Wi-Fi市场产生重大影响的方案。<br>提高了2.4GHz和5GHz两个频段的吞吐量。<br>通过改进物理层和MAC子层以支持到达600Mps的高吞吐量(HT)特性。<br>引入了多输入多输出(MIMO)和OFDM技术。<br>MIMO使用多幅接收天线和发送天线，利用了多径效应改善通信质量。不仅提高了吞吐量，还扩大了传输范围。</p>\n<h3 id=\"802-11p-2010\"><a href=\"#802-11p-2010\" class=\"headerlink\" title=\"802.11p-2010\"></a>802.11p-2010</h3><p>称为车载环境无线接入(WAVE)，用于支持智能交通系统应用。</p>\n<h3 id=\"802-11r-2008\"><a href=\"#802-11r-2008\" class=\"headerlink\" title=\"802.11r-2008\"></a>802.11r-2008</h3><p>称为快速基本服务集转换(FT)修正案。也称为快速安全漫游(FSR)</p>\n<h3 id=\"802-11s-2011\"><a href=\"#802-11s-2011\" class=\"headerlink\" title=\"802.11s-2011\"></a>802.11s-2011</h3><p>通常分布系统多采用有线802.3以太网介质，11s使得无线接入点充当无线分布系统(WDS)门户设备。### 802.11r-2008<br>称为快速基本服务集转换(FT)修正案。也称为快速安全漫游(FSR)</p>\n<h3 id=\"802-11u-2011\"><a href=\"#802-11u-2011\" class=\"headerlink\" title=\"802.11u-2011\"></a>802.11u-2011</h3><p>致力于解决接入网与外部网络之间的互通问题，也成称为外部网络互通。奠定了Wi-Fi联盟的热点2.0(Hostpot 2.0)规范<br>和控制点(Passpoint)认证项目的基础。</p>\n<h3 id=\"802-11v-2011\"><a href=\"#802-11v-2011\" class=\"headerlink\" title=\"802.11v-2011\"></a>802.11v-2011</h3><p>提供了一种信息交换的机制，有助于中央节点以无线方式简化客户端的配置。定义了无线网络管理(WNM)，802.11终端之间<br>可以交换信息以提高无线网络的整体性能。</p>\n<p>WNM协议还定义了无线局域网交换位置信息的机制，并为多BSSID功能提供支持。<br>WNM协议包括一种新的WMM休眠模式(WNM-Sleep)，客户端可以长时间进入休眠而无需从接入点接收帧。</p>\n<h3 id=\"802-11w-2009\"><a href=\"#802-11w-2009\" class=\"headerlink\" title=\"802.11w-2009\"></a>802.11w-2009</h3><p>使用802.11管理帧的数据链路层极易受到拒绝服务(Dos)攻击。802.11w致力于如何安全的交付管理帧，防止管理帧遭到伪造。<br>旨在保护单播，多播，广播管理帧的安全。</p>\n<p>802.11w帧称为强健管理帧(robust management frame),包括取消关联帧，取消身份验证帧，强健行为帧。<br>CCMP用于保护单播帧的安全，而广播/多播完整性协议(BIP)用于保护广播/多播帧的安全。</p>\n<p>不过，目前无法阻止所有的二层拒绝服务攻击。</p>\n<h3 id=\"802-11y-2008\"><a href=\"#802-11y-2008\" class=\"headerlink\" title=\"802.11y-2008\"></a>802.11y-2008</h3><p>多数802.11设备使用非授权频段，802.11y用于规范授权频段的相关操作。</p>\n<h3 id=\"802-11z-2010\"><a href=\"#802-11z-2010\" class=\"headerlink\" title=\"802.11z-2010\"></a>802.11z-2010</h3><p>定义并规范直接链路建立(DLS)机制。是的关联到同一接入点的客户端之间直接交换帧，而无需通过接入点交换。<br>目前尚未实现应用。</p>\n<p>(未完待续…)</p>\n"},{"title":"CWNA:射频数学计算","date":"2022-01-12T01:32:41.000Z","_content":"\n射频计算中包含很多对数运算，不过工程应用无需进行复杂的计算。\n\n**10与3规则**\n用于工程近似计算。\n4条规则：\n> 每3dB增益（相对值），意味着绝对功率(mW)加倍；\n> 每3dB损耗（相对值），意味着绝对功率(mW)减半；\n> 每10dB增益，意味着绝对功率乘以10；\n> 每10dB损耗，意味着绝对功率除以10；\n\n多数802.11无线接口可以解析从-30dBm(1mW 的千分之一)到低至-100dBm(1mW的百亿分之一)的接收信号\n毫瓦分贝对照表\n\n|毫瓦分贝(dBm)|毫瓦(mW)|功率电平|\n|:----------:|:------:|:------:|\n|+20dBm|200mW|十分之一瓦|\n|+10dBm|100mW|百分之一瓦|\n|0dBm|1mW|千分之一瓦|\n|-10dBm|0.1mW|十分之一毫瓦|\n|-20dBm|0.01mW|百分之一毫瓦|\n|-30dBm|0.001mW|千分之一毫瓦|\n","source":"_posts/CWNA-射频数学计算.md","raw":"---\ntitle: 'CWNA:射频数学计算'\ndate: 2022-01-12 09:32:41\ntags: 'Wi-Fi'\n---\n\n射频计算中包含很多对数运算，不过工程应用无需进行复杂的计算。\n\n**10与3规则**\n用于工程近似计算。\n4条规则：\n> 每3dB增益（相对值），意味着绝对功率(mW)加倍；\n> 每3dB损耗（相对值），意味着绝对功率(mW)减半；\n> 每10dB增益，意味着绝对功率乘以10；\n> 每10dB损耗，意味着绝对功率除以10；\n\n多数802.11无线接口可以解析从-30dBm(1mW 的千分之一)到低至-100dBm(1mW的百亿分之一)的接收信号\n毫瓦分贝对照表\n\n|毫瓦分贝(dBm)|毫瓦(mW)|功率电平|\n|:----------:|:------:|:------:|\n|+20dBm|200mW|十分之一瓦|\n|+10dBm|100mW|百分之一瓦|\n|0dBm|1mW|千分之一瓦|\n|-10dBm|0.1mW|十分之一毫瓦|\n|-20dBm|0.01mW|百分之一毫瓦|\n|-30dBm|0.001mW|千分之一毫瓦|\n","slug":"CWNA-射频数学计算","published":1,"updated":"2022-01-12T01:56:00.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632d000ih6fd46js9phc","content":"<p>射频计算中包含很多对数运算，不过工程应用无需进行复杂的计算。</p>\n<p><strong>10与3规则</strong><br>用于工程近似计算。<br>4条规则：</p>\n<blockquote>\n<p>每3dB增益（相对值），意味着绝对功率(mW)加倍；<br>每3dB损耗（相对值），意味着绝对功率(mW)减半；<br>每10dB增益，意味着绝对功率乘以10；<br>每10dB损耗，意味着绝对功率除以10；</p>\n</blockquote>\n<p>多数802.11无线接口可以解析从-30dBm(1mW 的千分之一)到低至-100dBm(1mW的百亿分之一)的接收信号<br>毫瓦分贝对照表</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">毫瓦分贝(dBm)</th>\n<th style=\"text-align:center\">毫瓦(mW)</th>\n<th style=\"text-align:center\">功率电平</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">+20dBm</td>\n<td style=\"text-align:center\">200mW</td>\n<td style=\"text-align:center\">十分之一瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+10dBm</td>\n<td style=\"text-align:center\">100mW</td>\n<td style=\"text-align:center\">百分之一瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0dBm</td>\n<td style=\"text-align:center\">1mW</td>\n<td style=\"text-align:center\">千分之一瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-10dBm</td>\n<td style=\"text-align:center\">0.1mW</td>\n<td style=\"text-align:center\">十分之一毫瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-20dBm</td>\n<td style=\"text-align:center\">0.01mW</td>\n<td style=\"text-align:center\">百分之一毫瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-30dBm</td>\n<td style=\"text-align:center\">0.001mW</td>\n<td style=\"text-align:center\">千分之一毫瓦</td>\n</tr>\n</tbody>\n</table>\n</div>\n","site":{"data":{}},"excerpt":"","more":"<p>射频计算中包含很多对数运算，不过工程应用无需进行复杂的计算。</p>\n<p><strong>10与3规则</strong><br>用于工程近似计算。<br>4条规则：</p>\n<blockquote>\n<p>每3dB增益（相对值），意味着绝对功率(mW)加倍；<br>每3dB损耗（相对值），意味着绝对功率(mW)减半；<br>每10dB增益，意味着绝对功率乘以10；<br>每10dB损耗，意味着绝对功率除以10；</p>\n</blockquote>\n<p>多数802.11无线接口可以解析从-30dBm(1mW 的千分之一)到低至-100dBm(1mW的百亿分之一)的接收信号<br>毫瓦分贝对照表</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">毫瓦分贝(dBm)</th>\n<th style=\"text-align:center\">毫瓦(mW)</th>\n<th style=\"text-align:center\">功率电平</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">+20dBm</td>\n<td style=\"text-align:center\">200mW</td>\n<td style=\"text-align:center\">十分之一瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">+10dBm</td>\n<td style=\"text-align:center\">100mW</td>\n<td style=\"text-align:center\">百分之一瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">0dBm</td>\n<td style=\"text-align:center\">1mW</td>\n<td style=\"text-align:center\">千分之一瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-10dBm</td>\n<td style=\"text-align:center\">0.1mW</td>\n<td style=\"text-align:center\">十分之一毫瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-20dBm</td>\n<td style=\"text-align:center\">0.01mW</td>\n<td style=\"text-align:center\">百分之一毫瓦</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-30dBm</td>\n<td style=\"text-align:center\">0.001mW</td>\n<td style=\"text-align:center\">千分之一毫瓦</td>\n</tr>\n</tbody>\n</table>\n</div>\n"},{"title":"CWNA:无线局域网拓扑(二)","date":"2022-02-09T05:10:14.000Z","_content":"\n### 802.11服务集\nIEEE802.11-2016标准定义了多种称为服务集的802.11拓扑，他们描述了无线接口相互通信的方式。包括：\n> 基本服务集（BSS）\n> 扩展服务集（ESS）\n> 独立基本服务集（IBSS）\n> 个人基本服务集（PBSS）\n> 网状基本服务集（MBSS）\n> QoS基本服务集（QBSS）\n\n#### 服务集标识符\n服务集标识符(SSID),用于标识802.11无线网络的逻辑名。SSID由最多32个字符组成，并且区分大小写。\n大多数接入点提供了**隐藏SSID**的选项，隐藏后的网络名称只对合法的最终用户可见。\n为了客户端的无缝漫游，接入点必须通告使用具有相同安全性配置的同一个SSID。\n\n#### 基本服务集（BSS)\n无线局域网的基础拓扑结构。通常包括一个接入点和若干客户端。\n称为基本服务集的终端之间建立二层连接，称为相互关联。\n多数无线局域网供应商提供了客户端隔离功能，以阻止关联到接入点的客户端之间进行对等通信。\n\n#### 基本服务区\n接入点的实际覆盖区域。它是能够进行有效通信的区域。\n由于不同客户端对RSSI的解读有所不同，可以认为基本服务区的有效范围与加入基本服务集的客户端有关。\n\n\n#### 基本服务集标识符\n接入点无线接口的48位（6字节）MAC地址称为基本服务集标识符(BSSID)。\n每个基本服务集通过唯一的标识符标识，BSSID\nBSS切换，客户端从一个基本服务集移到另一个基本服务集的漫游过程。\nSSID是用户配置的无线局域网的逻辑名，BSSID是硬件制造商生产的无线接口的二层MAC地址。\n\n#### 多个基本服务集标识符\n可以通过子接口为无线接口创建多个BSSID，多BSSID在接入点无线接口原始MAC地址的基础上递增。\n不少无线局域网供应商支持单个接入点无线接口传输多达16个SSID。SSID过多，会增大MAC子层的开销，进而影响整体性能。\n\n#### 扩展服务集\n如果将基本服务集比作802.11拓扑的基石，那么扩展服务集（ESS）就是由基石垒起的整栋大厦。\n扩展服务集，由两个或多个基本服务集构成，这些基本服务集采用相同的配置，通过分布系统介质连接在一起。\n扩展服务区，是扩展基本服务集覆盖的区域，所有客户端都能在扩展服务区内通信和漫游。\n扩展服务集的逻辑名为 扩展服务集标识符（ESSID), 它与SSID是同义词。\n\n#### 独立基本服务集\nIBSS仅由客户端构成，不存在接入点。\n客户端之间直接传输帧，不会通过转发。所有客户端的帧交换都是对等的。\nIBSS钟的所有客户端必须竞争半双工介质的使用权，且在任何给定的时间内，只有一个客户端可以传输数据。\n为了确保通信的成功进行，IBSS中的所有客户端必须使用相同的频率信道传输数据，且构成IBSS的所有独立无线终端必须共享同一个SSID。\n首先发起IBSS的客户端会随机生成一个MAC地址格式的BSSID，它是一个虚拟MAC地址，充当IBSS的二层标识符。\n\n#### 个人基本服务集\nPBSS是一种支持802.11ad终端直接交换数据的802.11拓扑。只能由使用60GHz频段传输数据的802.11ad兼容无线接口创建。\n\n#### 网状基本服务集\n802.11-2016标准定义了网状基本服务集（MBSS）\n以无线方式分发网络流量。相当于二层路由。\n\n#### Qos基本服务集\nWiFi联盟规定，802.11产品必须支持QoS机制才能取得WMM认证。因此，大多数基本服务集可视为QBSS\n\n### 802.11配置模式\n**接入点模式** 通常称为AP\n接入点模式，用作分布系统的入口\n网状模式，也称中继器模式，作为无线回程无线接口使用。\n传感器模式，又称监控模式或扫描模式，用于无线入侵防御系统体系结构中。\n桥接模式，又称无线网桥。\n工作组网桥模式，为连接的802.3有线客户端提供无线回程。\n接入点被配置为客户端模式，充当客户设备，然后关联到其他接入点。\n\n\n**客户端模式**\n基础设施模式（infrastructure mode），经由接入点进行通信。它是客户设备的默认模式。通常称为STA\n自组织模式（ad hoc mode)，对等模式。 通常称为P2P\n\n","source":"_posts/CWNA-无线局域网拓扑-二.md","raw":"---\ntitle: 'CWNA:无线局域网拓扑(二)'\ndate: 2022-02-09 13:10:14\ntags: 'Wi-Fi'\n---\n\n### 802.11服务集\nIEEE802.11-2016标准定义了多种称为服务集的802.11拓扑，他们描述了无线接口相互通信的方式。包括：\n> 基本服务集（BSS）\n> 扩展服务集（ESS）\n> 独立基本服务集（IBSS）\n> 个人基本服务集（PBSS）\n> 网状基本服务集（MBSS）\n> QoS基本服务集（QBSS）\n\n#### 服务集标识符\n服务集标识符(SSID),用于标识802.11无线网络的逻辑名。SSID由最多32个字符组成，并且区分大小写。\n大多数接入点提供了**隐藏SSID**的选项，隐藏后的网络名称只对合法的最终用户可见。\n为了客户端的无缝漫游，接入点必须通告使用具有相同安全性配置的同一个SSID。\n\n#### 基本服务集（BSS)\n无线局域网的基础拓扑结构。通常包括一个接入点和若干客户端。\n称为基本服务集的终端之间建立二层连接，称为相互关联。\n多数无线局域网供应商提供了客户端隔离功能，以阻止关联到接入点的客户端之间进行对等通信。\n\n#### 基本服务区\n接入点的实际覆盖区域。它是能够进行有效通信的区域。\n由于不同客户端对RSSI的解读有所不同，可以认为基本服务区的有效范围与加入基本服务集的客户端有关。\n\n\n#### 基本服务集标识符\n接入点无线接口的48位（6字节）MAC地址称为基本服务集标识符(BSSID)。\n每个基本服务集通过唯一的标识符标识，BSSID\nBSS切换，客户端从一个基本服务集移到另一个基本服务集的漫游过程。\nSSID是用户配置的无线局域网的逻辑名，BSSID是硬件制造商生产的无线接口的二层MAC地址。\n\n#### 多个基本服务集标识符\n可以通过子接口为无线接口创建多个BSSID，多BSSID在接入点无线接口原始MAC地址的基础上递增。\n不少无线局域网供应商支持单个接入点无线接口传输多达16个SSID。SSID过多，会增大MAC子层的开销，进而影响整体性能。\n\n#### 扩展服务集\n如果将基本服务集比作802.11拓扑的基石，那么扩展服务集（ESS）就是由基石垒起的整栋大厦。\n扩展服务集，由两个或多个基本服务集构成，这些基本服务集采用相同的配置，通过分布系统介质连接在一起。\n扩展服务区，是扩展基本服务集覆盖的区域，所有客户端都能在扩展服务区内通信和漫游。\n扩展服务集的逻辑名为 扩展服务集标识符（ESSID), 它与SSID是同义词。\n\n#### 独立基本服务集\nIBSS仅由客户端构成，不存在接入点。\n客户端之间直接传输帧，不会通过转发。所有客户端的帧交换都是对等的。\nIBSS钟的所有客户端必须竞争半双工介质的使用权，且在任何给定的时间内，只有一个客户端可以传输数据。\n为了确保通信的成功进行，IBSS中的所有客户端必须使用相同的频率信道传输数据，且构成IBSS的所有独立无线终端必须共享同一个SSID。\n首先发起IBSS的客户端会随机生成一个MAC地址格式的BSSID，它是一个虚拟MAC地址，充当IBSS的二层标识符。\n\n#### 个人基本服务集\nPBSS是一种支持802.11ad终端直接交换数据的802.11拓扑。只能由使用60GHz频段传输数据的802.11ad兼容无线接口创建。\n\n#### 网状基本服务集\n802.11-2016标准定义了网状基本服务集（MBSS）\n以无线方式分发网络流量。相当于二层路由。\n\n#### Qos基本服务集\nWiFi联盟规定，802.11产品必须支持QoS机制才能取得WMM认证。因此，大多数基本服务集可视为QBSS\n\n### 802.11配置模式\n**接入点模式** 通常称为AP\n接入点模式，用作分布系统的入口\n网状模式，也称中继器模式，作为无线回程无线接口使用。\n传感器模式，又称监控模式或扫描模式，用于无线入侵防御系统体系结构中。\n桥接模式，又称无线网桥。\n工作组网桥模式，为连接的802.3有线客户端提供无线回程。\n接入点被配置为客户端模式，充当客户设备，然后关联到其他接入点。\n\n\n**客户端模式**\n基础设施模式（infrastructure mode），经由接入点进行通信。它是客户设备的默认模式。通常称为STA\n自组织模式（ad hoc mode)，对等模式。 通常称为P2P\n\n","slug":"CWNA-无线局域网拓扑-二","published":1,"updated":"2022-02-09T10:56:23.754Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632f000kh6fd5mkyb46s","content":"<h3 id=\"802-11服务集\"><a href=\"#802-11服务集\" class=\"headerlink\" title=\"802.11服务集\"></a>802.11服务集</h3><p>IEEE802.11-2016标准定义了多种称为服务集的802.11拓扑，他们描述了无线接口相互通信的方式。包括：</p>\n<blockquote>\n<p>基本服务集（BSS）<br>扩展服务集（ESS）<br>独立基本服务集（IBSS）<br>个人基本服务集（PBSS）<br>网状基本服务集（MBSS）<br>QoS基本服务集（QBSS）</p>\n</blockquote>\n<h4 id=\"服务集标识符\"><a href=\"#服务集标识符\" class=\"headerlink\" title=\"服务集标识符\"></a>服务集标识符</h4><p>服务集标识符(SSID),用于标识802.11无线网络的逻辑名。SSID由最多32个字符组成，并且区分大小写。<br>大多数接入点提供了<strong>隐藏SSID</strong>的选项，隐藏后的网络名称只对合法的最终用户可见。<br>为了客户端的无缝漫游，接入点必须通告使用具有相同安全性配置的同一个SSID。</p>\n<h4 id=\"基本服务集（BSS\"><a href=\"#基本服务集（BSS\" class=\"headerlink\" title=\"基本服务集（BSS)\"></a>基本服务集（BSS)</h4><p>无线局域网的基础拓扑结构。通常包括一个接入点和若干客户端。<br>称为基本服务集的终端之间建立二层连接，称为相互关联。<br>多数无线局域网供应商提供了客户端隔离功能，以阻止关联到接入点的客户端之间进行对等通信。</p>\n<h4 id=\"基本服务区\"><a href=\"#基本服务区\" class=\"headerlink\" title=\"基本服务区\"></a>基本服务区</h4><p>接入点的实际覆盖区域。它是能够进行有效通信的区域。<br>由于不同客户端对RSSI的解读有所不同，可以认为基本服务区的有效范围与加入基本服务集的客户端有关。</p>\n<h4 id=\"基本服务集标识符\"><a href=\"#基本服务集标识符\" class=\"headerlink\" title=\"基本服务集标识符\"></a>基本服务集标识符</h4><p>接入点无线接口的48位（6字节）MAC地址称为基本服务集标识符(BSSID)。<br>每个基本服务集通过唯一的标识符标识，BSSID<br>BSS切换，客户端从一个基本服务集移到另一个基本服务集的漫游过程。<br>SSID是用户配置的无线局域网的逻辑名，BSSID是硬件制造商生产的无线接口的二层MAC地址。</p>\n<h4 id=\"多个基本服务集标识符\"><a href=\"#多个基本服务集标识符\" class=\"headerlink\" title=\"多个基本服务集标识符\"></a>多个基本服务集标识符</h4><p>可以通过子接口为无线接口创建多个BSSID，多BSSID在接入点无线接口原始MAC地址的基础上递增。<br>不少无线局域网供应商支持单个接入点无线接口传输多达16个SSID。SSID过多，会增大MAC子层的开销，进而影响整体性能。</p>\n<h4 id=\"扩展服务集\"><a href=\"#扩展服务集\" class=\"headerlink\" title=\"扩展服务集\"></a>扩展服务集</h4><p>如果将基本服务集比作802.11拓扑的基石，那么扩展服务集（ESS）就是由基石垒起的整栋大厦。<br>扩展服务集，由两个或多个基本服务集构成，这些基本服务集采用相同的配置，通过分布系统介质连接在一起。<br>扩展服务区，是扩展基本服务集覆盖的区域，所有客户端都能在扩展服务区内通信和漫游。<br>扩展服务集的逻辑名为 扩展服务集标识符（ESSID), 它与SSID是同义词。</p>\n<h4 id=\"独立基本服务集\"><a href=\"#独立基本服务集\" class=\"headerlink\" title=\"独立基本服务集\"></a>独立基本服务集</h4><p>IBSS仅由客户端构成，不存在接入点。<br>客户端之间直接传输帧，不会通过转发。所有客户端的帧交换都是对等的。<br>IBSS钟的所有客户端必须竞争半双工介质的使用权，且在任何给定的时间内，只有一个客户端可以传输数据。<br>为了确保通信的成功进行，IBSS中的所有客户端必须使用相同的频率信道传输数据，且构成IBSS的所有独立无线终端必须共享同一个SSID。<br>首先发起IBSS的客户端会随机生成一个MAC地址格式的BSSID，它是一个虚拟MAC地址，充当IBSS的二层标识符。</p>\n<h4 id=\"个人基本服务集\"><a href=\"#个人基本服务集\" class=\"headerlink\" title=\"个人基本服务集\"></a>个人基本服务集</h4><p>PBSS是一种支持802.11ad终端直接交换数据的802.11拓扑。只能由使用60GHz频段传输数据的802.11ad兼容无线接口创建。</p>\n<h4 id=\"网状基本服务集\"><a href=\"#网状基本服务集\" class=\"headerlink\" title=\"网状基本服务集\"></a>网状基本服务集</h4><p>802.11-2016标准定义了网状基本服务集（MBSS）<br>以无线方式分发网络流量。相当于二层路由。</p>\n<h4 id=\"Qos基本服务集\"><a href=\"#Qos基本服务集\" class=\"headerlink\" title=\"Qos基本服务集\"></a>Qos基本服务集</h4><p>WiFi联盟规定，802.11产品必须支持QoS机制才能取得WMM认证。因此，大多数基本服务集可视为QBSS</p>\n<h3 id=\"802-11配置模式\"><a href=\"#802-11配置模式\" class=\"headerlink\" title=\"802.11配置模式\"></a>802.11配置模式</h3><p><strong>接入点模式</strong> 通常称为AP<br>接入点模式，用作分布系统的入口<br>网状模式，也称中继器模式，作为无线回程无线接口使用。<br>传感器模式，又称监控模式或扫描模式，用于无线入侵防御系统体系结构中。<br>桥接模式，又称无线网桥。<br>工作组网桥模式，为连接的802.3有线客户端提供无线回程。<br>接入点被配置为客户端模式，充当客户设备，然后关联到其他接入点。</p>\n<p><strong>客户端模式</strong><br>基础设施模式（infrastructure mode），经由接入点进行通信。它是客户设备的默认模式。通常称为STA<br>自组织模式（ad hoc mode)，对等模式。 通常称为P2P</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"802-11服务集\"><a href=\"#802-11服务集\" class=\"headerlink\" title=\"802.11服务集\"></a>802.11服务集</h3><p>IEEE802.11-2016标准定义了多种称为服务集的802.11拓扑，他们描述了无线接口相互通信的方式。包括：</p>\n<blockquote>\n<p>基本服务集（BSS）<br>扩展服务集（ESS）<br>独立基本服务集（IBSS）<br>个人基本服务集（PBSS）<br>网状基本服务集（MBSS）<br>QoS基本服务集（QBSS）</p>\n</blockquote>\n<h4 id=\"服务集标识符\"><a href=\"#服务集标识符\" class=\"headerlink\" title=\"服务集标识符\"></a>服务集标识符</h4><p>服务集标识符(SSID),用于标识802.11无线网络的逻辑名。SSID由最多32个字符组成，并且区分大小写。<br>大多数接入点提供了<strong>隐藏SSID</strong>的选项，隐藏后的网络名称只对合法的最终用户可见。<br>为了客户端的无缝漫游，接入点必须通告使用具有相同安全性配置的同一个SSID。</p>\n<h4 id=\"基本服务集（BSS\"><a href=\"#基本服务集（BSS\" class=\"headerlink\" title=\"基本服务集（BSS)\"></a>基本服务集（BSS)</h4><p>无线局域网的基础拓扑结构。通常包括一个接入点和若干客户端。<br>称为基本服务集的终端之间建立二层连接，称为相互关联。<br>多数无线局域网供应商提供了客户端隔离功能，以阻止关联到接入点的客户端之间进行对等通信。</p>\n<h4 id=\"基本服务区\"><a href=\"#基本服务区\" class=\"headerlink\" title=\"基本服务区\"></a>基本服务区</h4><p>接入点的实际覆盖区域。它是能够进行有效通信的区域。<br>由于不同客户端对RSSI的解读有所不同，可以认为基本服务区的有效范围与加入基本服务集的客户端有关。</p>\n<h4 id=\"基本服务集标识符\"><a href=\"#基本服务集标识符\" class=\"headerlink\" title=\"基本服务集标识符\"></a>基本服务集标识符</h4><p>接入点无线接口的48位（6字节）MAC地址称为基本服务集标识符(BSSID)。<br>每个基本服务集通过唯一的标识符标识，BSSID<br>BSS切换，客户端从一个基本服务集移到另一个基本服务集的漫游过程。<br>SSID是用户配置的无线局域网的逻辑名，BSSID是硬件制造商生产的无线接口的二层MAC地址。</p>\n<h4 id=\"多个基本服务集标识符\"><a href=\"#多个基本服务集标识符\" class=\"headerlink\" title=\"多个基本服务集标识符\"></a>多个基本服务集标识符</h4><p>可以通过子接口为无线接口创建多个BSSID，多BSSID在接入点无线接口原始MAC地址的基础上递增。<br>不少无线局域网供应商支持单个接入点无线接口传输多达16个SSID。SSID过多，会增大MAC子层的开销，进而影响整体性能。</p>\n<h4 id=\"扩展服务集\"><a href=\"#扩展服务集\" class=\"headerlink\" title=\"扩展服务集\"></a>扩展服务集</h4><p>如果将基本服务集比作802.11拓扑的基石，那么扩展服务集（ESS）就是由基石垒起的整栋大厦。<br>扩展服务集，由两个或多个基本服务集构成，这些基本服务集采用相同的配置，通过分布系统介质连接在一起。<br>扩展服务区，是扩展基本服务集覆盖的区域，所有客户端都能在扩展服务区内通信和漫游。<br>扩展服务集的逻辑名为 扩展服务集标识符（ESSID), 它与SSID是同义词。</p>\n<h4 id=\"独立基本服务集\"><a href=\"#独立基本服务集\" class=\"headerlink\" title=\"独立基本服务集\"></a>独立基本服务集</h4><p>IBSS仅由客户端构成，不存在接入点。<br>客户端之间直接传输帧，不会通过转发。所有客户端的帧交换都是对等的。<br>IBSS钟的所有客户端必须竞争半双工介质的使用权，且在任何给定的时间内，只有一个客户端可以传输数据。<br>为了确保通信的成功进行，IBSS中的所有客户端必须使用相同的频率信道传输数据，且构成IBSS的所有独立无线终端必须共享同一个SSID。<br>首先发起IBSS的客户端会随机生成一个MAC地址格式的BSSID，它是一个虚拟MAC地址，充当IBSS的二层标识符。</p>\n<h4 id=\"个人基本服务集\"><a href=\"#个人基本服务集\" class=\"headerlink\" title=\"个人基本服务集\"></a>个人基本服务集</h4><p>PBSS是一种支持802.11ad终端直接交换数据的802.11拓扑。只能由使用60GHz频段传输数据的802.11ad兼容无线接口创建。</p>\n<h4 id=\"网状基本服务集\"><a href=\"#网状基本服务集\" class=\"headerlink\" title=\"网状基本服务集\"></a>网状基本服务集</h4><p>802.11-2016标准定义了网状基本服务集（MBSS）<br>以无线方式分发网络流量。相当于二层路由。</p>\n<h4 id=\"Qos基本服务集\"><a href=\"#Qos基本服务集\" class=\"headerlink\" title=\"Qos基本服务集\"></a>Qos基本服务集</h4><p>WiFi联盟规定，802.11产品必须支持QoS机制才能取得WMM认证。因此，大多数基本服务集可视为QBSS</p>\n<h3 id=\"802-11配置模式\"><a href=\"#802-11配置模式\" class=\"headerlink\" title=\"802.11配置模式\"></a>802.11配置模式</h3><p><strong>接入点模式</strong> 通常称为AP<br>接入点模式，用作分布系统的入口<br>网状模式，也称中继器模式，作为无线回程无线接口使用。<br>传感器模式，又称监控模式或扫描模式，用于无线入侵防御系统体系结构中。<br>桥接模式，又称无线网桥。<br>工作组网桥模式，为连接的802.3有线客户端提供无线回程。<br>接入点被配置为客户端模式，充当客户设备，然后关联到其他接入点。</p>\n<p><strong>客户端模式</strong><br>基础设施模式（infrastructure mode），经由接入点进行通信。它是客户设备的默认模式。通常称为STA<br>自组织模式（ad hoc mode)，对等模式。 通常称为P2P</p>\n"},{"title":"CWNA:无线网络与扩频技术","date":"2022-01-26T07:40:18.000Z","_content":"\n### 正交频分复用\n正交频分复用(OFDM),被广泛用于有线和无线通信。\nIEEE 802.11-2016规定 OFDM使用5GHz频段传输数据； ERP-OFDM 使用2.4GHz频段传输数据。\n\n20MHz OFDM信道包括64个副载波，其中\n12个副载波充当保护频带，不做数据传输之用。\n48个副载波用于传输调制数据。\n4个副载波称为导频载波，用于发射机和接收机之间的动态校准。\n每个副载波的宽度为312.5KHz，副载波之间间隔正交。\n\n**卷积编码**\n为了增强抗窄带干扰的能力，OFDM采用卷积码作为纠错码。\n\n**调制**\n星座图（constellation diagram)是一种二维图，通常表示QAM调制。\n横轴通常是相移\n纵轴通常是幅移\n16-QAM   4x4\n\n### 正交频分多址\nOFDMA技术将信道划分为较小的子信道， 以便同时进行多用户传输。\n\n### 工业科学和医疗频段（ISM）\n902~928MHz (26MHz宽)\n2.4GHz~2.5GHz(100MHz宽)\n5.725~5.875GHz(150MHz宽)\n\n802.11-2016标准规定，无线局域网可以使用该频段的14条信道传输数据，但各国信道分配可能不同。\n5.8GHz ISM频段比U-NII-3频段宽25MHz\n\n### 非授权国家信息基础设施频段\n使用5GHz U-NII频段传输数据的802.11无线接口如下：\n801.11a OFDM\n802.11n HT\n802.11ac VHT\n802.11-2016标准规定，无线局域网可以使用全部的4个U-NII频段，总共25条信道传输数据，但各国信道分配和功率管理不同。\n\n**U-NII-1频段**\nU-NII-1频段即U-NII低频段，为5.150GHz~5.250GHz的100MHz，4条20MHz信道。\n\n**U-NII-2A频段**\nU-NII-2A频段即原来的U-NII-2频段，为5.250~5.350GHz，宽度为100MHz，4条20MHz信道。\n\n**U-NII-2C频段**\nU-NII-2C频段即原来的U-NII-2扩展频段，5.470~5.725GHz，宽度为255MHz，11条20MHz信道。\n使用该频段的802.11无线接口必须支持DFS \n\n**U-NII-3频段**\nU-NII-3频段即NII高频段，为5.725~5.850GHz，宽度125MHz。\n\n\n","source":"_posts/CWNA-无线网络与扩频技术-2.md","raw":"---\ntitle: 'CWNA:无线网络与扩频技术'\ndate: 2022-01-26 15:40:18\ntags: 'Wi-Fi'\n---\n\n### 正交频分复用\n正交频分复用(OFDM),被广泛用于有线和无线通信。\nIEEE 802.11-2016规定 OFDM使用5GHz频段传输数据； ERP-OFDM 使用2.4GHz频段传输数据。\n\n20MHz OFDM信道包括64个副载波，其中\n12个副载波充当保护频带，不做数据传输之用。\n48个副载波用于传输调制数据。\n4个副载波称为导频载波，用于发射机和接收机之间的动态校准。\n每个副载波的宽度为312.5KHz，副载波之间间隔正交。\n\n**卷积编码**\n为了增强抗窄带干扰的能力，OFDM采用卷积码作为纠错码。\n\n**调制**\n星座图（constellation diagram)是一种二维图，通常表示QAM调制。\n横轴通常是相移\n纵轴通常是幅移\n16-QAM   4x4\n\n### 正交频分多址\nOFDMA技术将信道划分为较小的子信道， 以便同时进行多用户传输。\n\n### 工业科学和医疗频段（ISM）\n902~928MHz (26MHz宽)\n2.4GHz~2.5GHz(100MHz宽)\n5.725~5.875GHz(150MHz宽)\n\n802.11-2016标准规定，无线局域网可以使用该频段的14条信道传输数据，但各国信道分配可能不同。\n5.8GHz ISM频段比U-NII-3频段宽25MHz\n\n### 非授权国家信息基础设施频段\n使用5GHz U-NII频段传输数据的802.11无线接口如下：\n801.11a OFDM\n802.11n HT\n802.11ac VHT\n802.11-2016标准规定，无线局域网可以使用全部的4个U-NII频段，总共25条信道传输数据，但各国信道分配和功率管理不同。\n\n**U-NII-1频段**\nU-NII-1频段即U-NII低频段，为5.150GHz~5.250GHz的100MHz，4条20MHz信道。\n\n**U-NII-2A频段**\nU-NII-2A频段即原来的U-NII-2频段，为5.250~5.350GHz，宽度为100MHz，4条20MHz信道。\n\n**U-NII-2C频段**\nU-NII-2C频段即原来的U-NII-2扩展频段，5.470~5.725GHz，宽度为255MHz，11条20MHz信道。\n使用该频段的802.11无线接口必须支持DFS \n\n**U-NII-3频段**\nU-NII-3频段即NII高频段，为5.725~5.850GHz，宽度125MHz。\n\n\n","slug":"CWNA-无线网络与扩频技术-2","published":1,"updated":"2022-01-26T09:18:56.353Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632g000mh6fde6n6e6vu","content":"<h3 id=\"正交频分复用\"><a href=\"#正交频分复用\" class=\"headerlink\" title=\"正交频分复用\"></a>正交频分复用</h3><p>正交频分复用(OFDM),被广泛用于有线和无线通信。<br>IEEE 802.11-2016规定 OFDM使用5GHz频段传输数据； ERP-OFDM 使用2.4GHz频段传输数据。</p>\n<p>20MHz OFDM信道包括64个副载波，其中<br>12个副载波充当保护频带，不做数据传输之用。<br>48个副载波用于传输调制数据。<br>4个副载波称为导频载波，用于发射机和接收机之间的动态校准。<br>每个副载波的宽度为312.5KHz，副载波之间间隔正交。</p>\n<p><strong>卷积编码</strong><br>为了增强抗窄带干扰的能力，OFDM采用卷积码作为纠错码。</p>\n<p><strong>调制</strong><br>星座图（constellation diagram)是一种二维图，通常表示QAM调制。<br>横轴通常是相移<br>纵轴通常是幅移<br>16-QAM   4x4</p>\n<h3 id=\"正交频分多址\"><a href=\"#正交频分多址\" class=\"headerlink\" title=\"正交频分多址\"></a>正交频分多址</h3><p>OFDMA技术将信道划分为较小的子信道， 以便同时进行多用户传输。</p>\n<h3 id=\"工业科学和医疗频段（ISM）\"><a href=\"#工业科学和医疗频段（ISM）\" class=\"headerlink\" title=\"工业科学和医疗频段（ISM）\"></a>工业科学和医疗频段（ISM）</h3><p>902~928MHz (26MHz宽)<br>2.4GHz~2.5GHz(100MHz宽)<br>5.725~5.875GHz(150MHz宽)</p>\n<p>802.11-2016标准规定，无线局域网可以使用该频段的14条信道传输数据，但各国信道分配可能不同。<br>5.8GHz ISM频段比U-NII-3频段宽25MHz</p>\n<h3 id=\"非授权国家信息基础设施频段\"><a href=\"#非授权国家信息基础设施频段\" class=\"headerlink\" title=\"非授权国家信息基础设施频段\"></a>非授权国家信息基础设施频段</h3><p>使用5GHz U-NII频段传输数据的802.11无线接口如下：<br>801.11a OFDM<br>802.11n HT<br>802.11ac VHT<br>802.11-2016标准规定，无线局域网可以使用全部的4个U-NII频段，总共25条信道传输数据，但各国信道分配和功率管理不同。</p>\n<p><strong>U-NII-1频段</strong><br>U-NII-1频段即U-NII低频段，为5.150GHz~5.250GHz的100MHz，4条20MHz信道。</p>\n<p><strong>U-NII-2A频段</strong><br>U-NII-2A频段即原来的U-NII-2频段，为5.250~5.350GHz，宽度为100MHz，4条20MHz信道。</p>\n<p><strong>U-NII-2C频段</strong><br>U-NII-2C频段即原来的U-NII-2扩展频段，5.470~5.725GHz，宽度为255MHz，11条20MHz信道。<br>使用该频段的802.11无线接口必须支持DFS </p>\n<p><strong>U-NII-3频段</strong><br>U-NII-3频段即NII高频段，为5.725~5.850GHz，宽度125MHz。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"正交频分复用\"><a href=\"#正交频分复用\" class=\"headerlink\" title=\"正交频分复用\"></a>正交频分复用</h3><p>正交频分复用(OFDM),被广泛用于有线和无线通信。<br>IEEE 802.11-2016规定 OFDM使用5GHz频段传输数据； ERP-OFDM 使用2.4GHz频段传输数据。</p>\n<p>20MHz OFDM信道包括64个副载波，其中<br>12个副载波充当保护频带，不做数据传输之用。<br>48个副载波用于传输调制数据。<br>4个副载波称为导频载波，用于发射机和接收机之间的动态校准。<br>每个副载波的宽度为312.5KHz，副载波之间间隔正交。</p>\n<p><strong>卷积编码</strong><br>为了增强抗窄带干扰的能力，OFDM采用卷积码作为纠错码。</p>\n<p><strong>调制</strong><br>星座图（constellation diagram)是一种二维图，通常表示QAM调制。<br>横轴通常是相移<br>纵轴通常是幅移<br>16-QAM   4x4</p>\n<h3 id=\"正交频分多址\"><a href=\"#正交频分多址\" class=\"headerlink\" title=\"正交频分多址\"></a>正交频分多址</h3><p>OFDMA技术将信道划分为较小的子信道， 以便同时进行多用户传输。</p>\n<h3 id=\"工业科学和医疗频段（ISM）\"><a href=\"#工业科学和医疗频段（ISM）\" class=\"headerlink\" title=\"工业科学和医疗频段（ISM）\"></a>工业科学和医疗频段（ISM）</h3><p>902~928MHz (26MHz宽)<br>2.4GHz~2.5GHz(100MHz宽)<br>5.725~5.875GHz(150MHz宽)</p>\n<p>802.11-2016标准规定，无线局域网可以使用该频段的14条信道传输数据，但各国信道分配可能不同。<br>5.8GHz ISM频段比U-NII-3频段宽25MHz</p>\n<h3 id=\"非授权国家信息基础设施频段\"><a href=\"#非授权国家信息基础设施频段\" class=\"headerlink\" title=\"非授权国家信息基础设施频段\"></a>非授权国家信息基础设施频段</h3><p>使用5GHz U-NII频段传输数据的802.11无线接口如下：<br>801.11a OFDM<br>802.11n HT<br>802.11ac VHT<br>802.11-2016标准规定，无线局域网可以使用全部的4个U-NII频段，总共25条信道传输数据，但各国信道分配和功率管理不同。</p>\n<p><strong>U-NII-1频段</strong><br>U-NII-1频段即U-NII低频段，为5.150GHz~5.250GHz的100MHz，4条20MHz信道。</p>\n<p><strong>U-NII-2A频段</strong><br>U-NII-2A频段即原来的U-NII-2频段，为5.250~5.350GHz，宽度为100MHz，4条20MHz信道。</p>\n<p><strong>U-NII-2C频段</strong><br>U-NII-2C频段即原来的U-NII-2扩展频段，5.470~5.725GHz，宽度为255MHz，11条20MHz信道。<br>使用该频段的802.11无线接口必须支持DFS </p>\n<p><strong>U-NII-3频段</strong><br>U-NII-3频段即NII高频段，为5.725~5.850GHz，宽度125MHz。</p>\n"},{"title":"CWNA:无线局域网拓扑","date":"2022-02-09T01:38:34.000Z","_content":"\n### 无线网络拓扑\n> 无线广域网\n> 无线城域网\n> 无线个域网\n> 无线局域网\n\n### 802.11终端\n> 客户端\n> 接入点\n> 集成服务\n> 分布系统\n> 无线分布系统\n\n### 802.11服务集\n> 服务集标识符\n> 基本服务集\n> 基本服务区\n> 基本服务集标识符\n> 多个基本服务集标识符\n> 扩展服务集\n> 独立基本服务集\n> 个人基本服务集\n> 网状基本服务集\n> Qos基本服务集\n\n### 802.11配置模式\n> 接入点模式\n> 客户端模式\n\n\n#### 无线广域网（WWAN)\n覆盖广阔的区域，蜂窝电话技术是其中的代表。\nWi-Fi技术和蜂窝技术的融合共存正逐步称为现实。\n\n\n#### 无线城域网（WMAN)\n为都市圈提供射频覆盖，基本上已经搁浅。\n\n#### 无线个域网（WPAN)\n用户附近各个设备之间的互联。计算机，游戏设备，平板电脑，智能手机等。\n蓝牙和红外是最常见的无线个域网技术。\n802.11无线接口用于无线个域网的最佳范例是对等连接技术。\n\n#### 无线局域网（WLAN)\n为建筑物和校园环境提供网络连接。\n802.11技术定义里无线局域网技术。\n\n#### 802.11终端\n所有终端通过唯一MAC地址标识。\nIEEE802.11-2016标准指定了终端在各种802.11拓扑中使用的体系结构服务。下面是MAC子层的3种802.11服务。\n**终端服务**  所有802.11终端（客户端和接入点）均提供以下服务。\n> 身份验证\n> 接触身份验证\n> 数据机密性\n> MSDU传输\n> 动态频率选择(DFS)\n> 发射功率控制(TPC)\n> 上层计时器同步\n> Qos流量调度\n> 无线电测量\n> 动态终端启用(DSE)\n\n**分布系统服务** 仅有接入点和网状门户使用分布系统服务(DSS),用于管理客户端关联，重关联，取消关联等。\n\n**PBSS控制点服务** 专门为构成个人基本服务集的802.11ad无线接口而定义。\n\n**客户端**\n与接入点相对的一种工作模式。计算机，平板电脑，智能手机等许多设备都能使用客户端无线接口，接入接入点后访问网络。\n\n**接入点**\n接入点与客户端在功能上完全相同，关键的区别在门户功能。\n门户功能 又称 分布系统接入功能（DSAF），允许关联到接入点的客户端经由无线介质与其他物理介质交换数据。\n802.11接入点维护关联客户端的关联表，以定向流量转发。\n\n**集成服务**\nIEEE 802.11-2016定义了集成服务(IS), 通过门户在分布系统与无线局域网之间传输MAC服务数据单位（MSDU)。\n也就是传输数据帧净荷，即数据内容不变，帧格式转变。\n\n**分布系统**\n接入点通常作为门户，多个接入点之间通常通过以太网连接构成分布系统。\n多数情况下，有线网是分布系统的最佳选择。\n\n**无线分布系统**\n通过无线回程将接入点连接在一起。\n不易布线的情况，网状回程网络有时候就是更好的选择。\n","source":"_posts/CWNA-无线局域网拓扑.md","raw":"---\ntitle: 'CWNA:无线局域网拓扑'\ndate: 2022-02-09 09:38:34\ntags: 'Wi-Fi'\n---\n\n### 无线网络拓扑\n> 无线广域网\n> 无线城域网\n> 无线个域网\n> 无线局域网\n\n### 802.11终端\n> 客户端\n> 接入点\n> 集成服务\n> 分布系统\n> 无线分布系统\n\n### 802.11服务集\n> 服务集标识符\n> 基本服务集\n> 基本服务区\n> 基本服务集标识符\n> 多个基本服务集标识符\n> 扩展服务集\n> 独立基本服务集\n> 个人基本服务集\n> 网状基本服务集\n> Qos基本服务集\n\n### 802.11配置模式\n> 接入点模式\n> 客户端模式\n\n\n#### 无线广域网（WWAN)\n覆盖广阔的区域，蜂窝电话技术是其中的代表。\nWi-Fi技术和蜂窝技术的融合共存正逐步称为现实。\n\n\n#### 无线城域网（WMAN)\n为都市圈提供射频覆盖，基本上已经搁浅。\n\n#### 无线个域网（WPAN)\n用户附近各个设备之间的互联。计算机，游戏设备，平板电脑，智能手机等。\n蓝牙和红外是最常见的无线个域网技术。\n802.11无线接口用于无线个域网的最佳范例是对等连接技术。\n\n#### 无线局域网（WLAN)\n为建筑物和校园环境提供网络连接。\n802.11技术定义里无线局域网技术。\n\n#### 802.11终端\n所有终端通过唯一MAC地址标识。\nIEEE802.11-2016标准指定了终端在各种802.11拓扑中使用的体系结构服务。下面是MAC子层的3种802.11服务。\n**终端服务**  所有802.11终端（客户端和接入点）均提供以下服务。\n> 身份验证\n> 接触身份验证\n> 数据机密性\n> MSDU传输\n> 动态频率选择(DFS)\n> 发射功率控制(TPC)\n> 上层计时器同步\n> Qos流量调度\n> 无线电测量\n> 动态终端启用(DSE)\n\n**分布系统服务** 仅有接入点和网状门户使用分布系统服务(DSS),用于管理客户端关联，重关联，取消关联等。\n\n**PBSS控制点服务** 专门为构成个人基本服务集的802.11ad无线接口而定义。\n\n**客户端**\n与接入点相对的一种工作模式。计算机，平板电脑，智能手机等许多设备都能使用客户端无线接口，接入接入点后访问网络。\n\n**接入点**\n接入点与客户端在功能上完全相同，关键的区别在门户功能。\n门户功能 又称 分布系统接入功能（DSAF），允许关联到接入点的客户端经由无线介质与其他物理介质交换数据。\n802.11接入点维护关联客户端的关联表，以定向流量转发。\n\n**集成服务**\nIEEE 802.11-2016定义了集成服务(IS), 通过门户在分布系统与无线局域网之间传输MAC服务数据单位（MSDU)。\n也就是传输数据帧净荷，即数据内容不变，帧格式转变。\n\n**分布系统**\n接入点通常作为门户，多个接入点之间通常通过以太网连接构成分布系统。\n多数情况下，有线网是分布系统的最佳选择。\n\n**无线分布系统**\n通过无线回程将接入点连接在一起。\n不易布线的情况，网状回程网络有时候就是更好的选择。\n","slug":"CWNA-无线局域网拓扑","published":1,"updated":"2022-02-09T04:58:33.788Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632g000oh6fd0csq1l6f","content":"<h3 id=\"无线网络拓扑\"><a href=\"#无线网络拓扑\" class=\"headerlink\" title=\"无线网络拓扑\"></a>无线网络拓扑</h3><blockquote>\n<p>无线广域网<br>无线城域网<br>无线个域网<br>无线局域网</p>\n</blockquote>\n<h3 id=\"802-11终端\"><a href=\"#802-11终端\" class=\"headerlink\" title=\"802.11终端\"></a>802.11终端</h3><blockquote>\n<p>客户端<br>接入点<br>集成服务<br>分布系统<br>无线分布系统</p>\n</blockquote>\n<h3 id=\"802-11服务集\"><a href=\"#802-11服务集\" class=\"headerlink\" title=\"802.11服务集\"></a>802.11服务集</h3><blockquote>\n<p>服务集标识符<br>基本服务集<br>基本服务区<br>基本服务集标识符<br>多个基本服务集标识符<br>扩展服务集<br>独立基本服务集<br>个人基本服务集<br>网状基本服务集<br>Qos基本服务集</p>\n</blockquote>\n<h3 id=\"802-11配置模式\"><a href=\"#802-11配置模式\" class=\"headerlink\" title=\"802.11配置模式\"></a>802.11配置模式</h3><blockquote>\n<p>接入点模式<br>客户端模式</p>\n</blockquote>\n<h4 id=\"无线广域网（WWAN\"><a href=\"#无线广域网（WWAN\" class=\"headerlink\" title=\"无线广域网（WWAN)\"></a>无线广域网（WWAN)</h4><p>覆盖广阔的区域，蜂窝电话技术是其中的代表。<br>Wi-Fi技术和蜂窝技术的融合共存正逐步称为现实。</p>\n<h4 id=\"无线城域网（WMAN\"><a href=\"#无线城域网（WMAN\" class=\"headerlink\" title=\"无线城域网（WMAN)\"></a>无线城域网（WMAN)</h4><p>为都市圈提供射频覆盖，基本上已经搁浅。</p>\n<h4 id=\"无线个域网（WPAN\"><a href=\"#无线个域网（WPAN\" class=\"headerlink\" title=\"无线个域网（WPAN)\"></a>无线个域网（WPAN)</h4><p>用户附近各个设备之间的互联。计算机，游戏设备，平板电脑，智能手机等。<br>蓝牙和红外是最常见的无线个域网技术。<br>802.11无线接口用于无线个域网的最佳范例是对等连接技术。</p>\n<h4 id=\"无线局域网（WLAN\"><a href=\"#无线局域网（WLAN\" class=\"headerlink\" title=\"无线局域网（WLAN)\"></a>无线局域网（WLAN)</h4><p>为建筑物和校园环境提供网络连接。<br>802.11技术定义里无线局域网技术。</p>\n<h4 id=\"802-11终端-1\"><a href=\"#802-11终端-1\" class=\"headerlink\" title=\"802.11终端\"></a>802.11终端</h4><p>所有终端通过唯一MAC地址标识。<br>IEEE802.11-2016标准指定了终端在各种802.11拓扑中使用的体系结构服务。下面是MAC子层的3种802.11服务。<br><strong>终端服务</strong>  所有802.11终端（客户端和接入点）均提供以下服务。</p>\n<blockquote>\n<p>身份验证<br>接触身份验证<br>数据机密性<br>MSDU传输<br>动态频率选择(DFS)<br>发射功率控制(TPC)<br>上层计时器同步<br>Qos流量调度<br>无线电测量<br>动态终端启用(DSE)</p>\n</blockquote>\n<p><strong>分布系统服务</strong> 仅有接入点和网状门户使用分布系统服务(DSS),用于管理客户端关联，重关联，取消关联等。</p>\n<p><strong>PBSS控制点服务</strong> 专门为构成个人基本服务集的802.11ad无线接口而定义。</p>\n<p><strong>客户端</strong><br>与接入点相对的一种工作模式。计算机，平板电脑，智能手机等许多设备都能使用客户端无线接口，接入接入点后访问网络。</p>\n<p><strong>接入点</strong><br>接入点与客户端在功能上完全相同，关键的区别在门户功能。<br>门户功能 又称 分布系统接入功能（DSAF），允许关联到接入点的客户端经由无线介质与其他物理介质交换数据。<br>802.11接入点维护关联客户端的关联表，以定向流量转发。</p>\n<p><strong>集成服务</strong><br>IEEE 802.11-2016定义了集成服务(IS), 通过门户在分布系统与无线局域网之间传输MAC服务数据单位（MSDU)。<br>也就是传输数据帧净荷，即数据内容不变，帧格式转变。</p>\n<p><strong>分布系统</strong><br>接入点通常作为门户，多个接入点之间通常通过以太网连接构成分布系统。<br>多数情况下，有线网是分布系统的最佳选择。</p>\n<p><strong>无线分布系统</strong><br>通过无线回程将接入点连接在一起。<br>不易布线的情况，网状回程网络有时候就是更好的选择。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"无线网络拓扑\"><a href=\"#无线网络拓扑\" class=\"headerlink\" title=\"无线网络拓扑\"></a>无线网络拓扑</h3><blockquote>\n<p>无线广域网<br>无线城域网<br>无线个域网<br>无线局域网</p>\n</blockquote>\n<h3 id=\"802-11终端\"><a href=\"#802-11终端\" class=\"headerlink\" title=\"802.11终端\"></a>802.11终端</h3><blockquote>\n<p>客户端<br>接入点<br>集成服务<br>分布系统<br>无线分布系统</p>\n</blockquote>\n<h3 id=\"802-11服务集\"><a href=\"#802-11服务集\" class=\"headerlink\" title=\"802.11服务集\"></a>802.11服务集</h3><blockquote>\n<p>服务集标识符<br>基本服务集<br>基本服务区<br>基本服务集标识符<br>多个基本服务集标识符<br>扩展服务集<br>独立基本服务集<br>个人基本服务集<br>网状基本服务集<br>Qos基本服务集</p>\n</blockquote>\n<h3 id=\"802-11配置模式\"><a href=\"#802-11配置模式\" class=\"headerlink\" title=\"802.11配置模式\"></a>802.11配置模式</h3><blockquote>\n<p>接入点模式<br>客户端模式</p>\n</blockquote>\n<h4 id=\"无线广域网（WWAN\"><a href=\"#无线广域网（WWAN\" class=\"headerlink\" title=\"无线广域网（WWAN)\"></a>无线广域网（WWAN)</h4><p>覆盖广阔的区域，蜂窝电话技术是其中的代表。<br>Wi-Fi技术和蜂窝技术的融合共存正逐步称为现实。</p>\n<h4 id=\"无线城域网（WMAN\"><a href=\"#无线城域网（WMAN\" class=\"headerlink\" title=\"无线城域网（WMAN)\"></a>无线城域网（WMAN)</h4><p>为都市圈提供射频覆盖，基本上已经搁浅。</p>\n<h4 id=\"无线个域网（WPAN\"><a href=\"#无线个域网（WPAN\" class=\"headerlink\" title=\"无线个域网（WPAN)\"></a>无线个域网（WPAN)</h4><p>用户附近各个设备之间的互联。计算机，游戏设备，平板电脑，智能手机等。<br>蓝牙和红外是最常见的无线个域网技术。<br>802.11无线接口用于无线个域网的最佳范例是对等连接技术。</p>\n<h4 id=\"无线局域网（WLAN\"><a href=\"#无线局域网（WLAN\" class=\"headerlink\" title=\"无线局域网（WLAN)\"></a>无线局域网（WLAN)</h4><p>为建筑物和校园环境提供网络连接。<br>802.11技术定义里无线局域网技术。</p>\n<h4 id=\"802-11终端-1\"><a href=\"#802-11终端-1\" class=\"headerlink\" title=\"802.11终端\"></a>802.11终端</h4><p>所有终端通过唯一MAC地址标识。<br>IEEE802.11-2016标准指定了终端在各种802.11拓扑中使用的体系结构服务。下面是MAC子层的3种802.11服务。<br><strong>终端服务</strong>  所有802.11终端（客户端和接入点）均提供以下服务。</p>\n<blockquote>\n<p>身份验证<br>接触身份验证<br>数据机密性<br>MSDU传输<br>动态频率选择(DFS)<br>发射功率控制(TPC)<br>上层计时器同步<br>Qos流量调度<br>无线电测量<br>动态终端启用(DSE)</p>\n</blockquote>\n<p><strong>分布系统服务</strong> 仅有接入点和网状门户使用分布系统服务(DSS),用于管理客户端关联，重关联，取消关联等。</p>\n<p><strong>PBSS控制点服务</strong> 专门为构成个人基本服务集的802.11ad无线接口而定义。</p>\n<p><strong>客户端</strong><br>与接入点相对的一种工作模式。计算机，平板电脑，智能手机等许多设备都能使用客户端无线接口，接入接入点后访问网络。</p>\n<p><strong>接入点</strong><br>接入点与客户端在功能上完全相同，关键的区别在门户功能。<br>门户功能 又称 分布系统接入功能（DSAF），允许关联到接入点的客户端经由无线介质与其他物理介质交换数据。<br>802.11接入点维护关联客户端的关联表，以定向流量转发。</p>\n<p><strong>集成服务</strong><br>IEEE 802.11-2016定义了集成服务(IS), 通过门户在分布系统与无线局域网之间传输MAC服务数据单位（MSDU)。<br>也就是传输数据帧净荷，即数据内容不变，帧格式转变。</p>\n<p><strong>分布系统</strong><br>接入点通常作为门户，多个接入点之间通常通过以太网连接构成分布系统。<br>多数情况下，有线网是分布系统的最佳选择。</p>\n<p><strong>无线分布系统</strong><br>通过无线回程将接入点连接在一起。<br>不易布线的情况，网状回程网络有时候就是更好的选择。</p>\n"},{"title":"CWNA:无线网络与扩频技术","date":"2022-01-18T06:56:14.000Z","_content":"\n窄带与扩频\n> 多径干扰\n\n跳频扩频\n> 跳变序列\n> 驻留时间\n> 跳变时间\n> 调制\n\n直接序列扩频\n> DSSS数据编码\n> 调制\n\n正交频分复用\n> 卷积编码\n> 调制\n\n正交频分多址\n工业、科学和医疗频段\n非授权国家信息基础设施频段\n> U-NII-1频段\n> U-NII-2A频段\n> U-NII-2C频段\n> U-NII-3频段\n> 今后的U-NII频段\n\n3.6GHz频段\n4.9GHz频段\n未来的Wi-Fi频段\n> 1GHz一下频段\n> 60GHz频段\n> 空白电视频段\n\n2.4GHz信道\n5GHz信道\n> 5G长期演进技术\n\n邻信道、非邻信道与重叠信道\n吞吐量与带宽\n通信系统恢复能力\n> 802.11aj-2018\n\n### 窄带与扩频\n射频传输方式主要分为窄带和扩频两类。\n窄带：使用极窄的带宽发送携带的数据。   // 针对该频率范围的蓄意干扰或非蓄意干扰很容易破坏信号。\n扩频：使用超出实际所需的带宽发送数据。 // 抗干扰较强。\n\n### 跳频扩频\nFHSS:在一段时间内使用一个特定的频率传输数据，这段时间称为驻留时间。\n大致工作方式：首先使用一个很小的频率载波空间传输数据，然后跳变到另一个很小的频率载波空间传输数据，再跳到第三个频率载波空间。\n\n**跳变序列**\n跳频使用信道的跳变方式。跳变序列结束后将重复。\n所有FHSS发射机和接收机必须同时在同一载波跳上同步。FHSS接入点可以配置802.11原始标准定义的跳变序列，跳变序列信息通过信标管理帧发送给客户端。\n\n**驻留时间**\n在切换到跳变序列中下一个频率之前，FHSS系统使用特定频率传输数据的时间，称为驻留时间。\n\n**跳变时间**\n发射机从一个频率切换到另一个频率所需的时间。\n跳变时间通常200~300us，与100~200ms的典型驻留时间相比很短。\n跳变时间属于开销时间。一般而言，跳变越少吞吐量越高。\n跳变可以增强抗干扰，跳变越少越易受到干扰。\n\n### 直接序列扩频\n直接序列扩频(DSSS)，是802.11定义的原始标准。它仅使用一条信道进行通信。\n\n**DSSS数据编码**\n无线通信极易收到干扰，为此无线系统将每个数据比特编码为多个比特进行传输，称为处理增益。\n系统将一个数据比特转换为一系列称为码片的比特。\n单个数据比特转换为码片序列的过程称为展宽或码片成形。\n接收端将码片序列转换为单个比特的过程称为解扩。\n巴克码的11个比特中9个损坏，接收端无线接口仍然能够解析码片序列，并恢复出原始数据。\n\n**调制**\n使用展宽技术编码后，发射机需要调制数据以产生包含码片的载波信号。\n\n802.11和802.11b使用的编码与调制技术\n\n|编码方式|数据速率|编码方式|码片长度|编码比特|调制方式|\n|:----------:|:------:|:------:|:------:|:------:|\n|DSSS|1Mbps|巴克码|11|1|DBPSK|\n|DSSS|2Mbps|巴克码|11|1|DQPSK|\n|HR-DSSS|5.5Mbps|CCK|8|4|DQPSK|\n|HR-DSSS|11Mbps|CCK|8|8|DQPSK|\n\n（后续，OFDM）\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/CWNA-无线网络与扩频技术.md","raw":"---\ntitle: 'CWNA:无线网络与扩频技术'\ndate: 2022-01-18 14:56:14\ntags: 'Wi-Fi'\n---\n\n窄带与扩频\n> 多径干扰\n\n跳频扩频\n> 跳变序列\n> 驻留时间\n> 跳变时间\n> 调制\n\n直接序列扩频\n> DSSS数据编码\n> 调制\n\n正交频分复用\n> 卷积编码\n> 调制\n\n正交频分多址\n工业、科学和医疗频段\n非授权国家信息基础设施频段\n> U-NII-1频段\n> U-NII-2A频段\n> U-NII-2C频段\n> U-NII-3频段\n> 今后的U-NII频段\n\n3.6GHz频段\n4.9GHz频段\n未来的Wi-Fi频段\n> 1GHz一下频段\n> 60GHz频段\n> 空白电视频段\n\n2.4GHz信道\n5GHz信道\n> 5G长期演进技术\n\n邻信道、非邻信道与重叠信道\n吞吐量与带宽\n通信系统恢复能力\n> 802.11aj-2018\n\n### 窄带与扩频\n射频传输方式主要分为窄带和扩频两类。\n窄带：使用极窄的带宽发送携带的数据。   // 针对该频率范围的蓄意干扰或非蓄意干扰很容易破坏信号。\n扩频：使用超出实际所需的带宽发送数据。 // 抗干扰较强。\n\n### 跳频扩频\nFHSS:在一段时间内使用一个特定的频率传输数据，这段时间称为驻留时间。\n大致工作方式：首先使用一个很小的频率载波空间传输数据，然后跳变到另一个很小的频率载波空间传输数据，再跳到第三个频率载波空间。\n\n**跳变序列**\n跳频使用信道的跳变方式。跳变序列结束后将重复。\n所有FHSS发射机和接收机必须同时在同一载波跳上同步。FHSS接入点可以配置802.11原始标准定义的跳变序列，跳变序列信息通过信标管理帧发送给客户端。\n\n**驻留时间**\n在切换到跳变序列中下一个频率之前，FHSS系统使用特定频率传输数据的时间，称为驻留时间。\n\n**跳变时间**\n发射机从一个频率切换到另一个频率所需的时间。\n跳变时间通常200~300us，与100~200ms的典型驻留时间相比很短。\n跳变时间属于开销时间。一般而言，跳变越少吞吐量越高。\n跳变可以增强抗干扰，跳变越少越易受到干扰。\n\n### 直接序列扩频\n直接序列扩频(DSSS)，是802.11定义的原始标准。它仅使用一条信道进行通信。\n\n**DSSS数据编码**\n无线通信极易收到干扰，为此无线系统将每个数据比特编码为多个比特进行传输，称为处理增益。\n系统将一个数据比特转换为一系列称为码片的比特。\n单个数据比特转换为码片序列的过程称为展宽或码片成形。\n接收端将码片序列转换为单个比特的过程称为解扩。\n巴克码的11个比特中9个损坏，接收端无线接口仍然能够解析码片序列，并恢复出原始数据。\n\n**调制**\n使用展宽技术编码后，发射机需要调制数据以产生包含码片的载波信号。\n\n802.11和802.11b使用的编码与调制技术\n\n|编码方式|数据速率|编码方式|码片长度|编码比特|调制方式|\n|:----------:|:------:|:------:|:------:|:------:|\n|DSSS|1Mbps|巴克码|11|1|DBPSK|\n|DSSS|2Mbps|巴克码|11|1|DQPSK|\n|HR-DSSS|5.5Mbps|CCK|8|4|DQPSK|\n|HR-DSSS|11Mbps|CCK|8|8|DQPSK|\n\n（后续，OFDM）\n\n\n\n\n\n\n\n\n\n\n","slug":"CWNA-无线网络与扩频技术","published":1,"updated":"2022-01-20T06:52:43.496Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632h000qh6fdatmu9ynq","content":"<p>窄带与扩频</p>\n<blockquote>\n<p>多径干扰</p>\n</blockquote>\n<p>跳频扩频</p>\n<blockquote>\n<p>跳变序列<br>驻留时间<br>跳变时间<br>调制</p>\n</blockquote>\n<p>直接序列扩频</p>\n<blockquote>\n<p>DSSS数据编码<br>调制</p>\n</blockquote>\n<p>正交频分复用</p>\n<blockquote>\n<p>卷积编码<br>调制</p>\n</blockquote>\n<p>正交频分多址<br>工业、科学和医疗频段<br>非授权国家信息基础设施频段</p>\n<blockquote>\n<p>U-NII-1频段<br>U-NII-2A频段<br>U-NII-2C频段<br>U-NII-3频段<br>今后的U-NII频段</p>\n</blockquote>\n<p>3.6GHz频段<br>4.9GHz频段<br>未来的Wi-Fi频段</p>\n<blockquote>\n<p>1GHz一下频段<br>60GHz频段<br>空白电视频段</p>\n</blockquote>\n<p>2.4GHz信道<br>5GHz信道</p>\n<blockquote>\n<p>5G长期演进技术</p>\n</blockquote>\n<p>邻信道、非邻信道与重叠信道<br>吞吐量与带宽<br>通信系统恢复能力</p>\n<blockquote>\n<p>802.11aj-2018</p>\n</blockquote>\n<h3 id=\"窄带与扩频\"><a href=\"#窄带与扩频\" class=\"headerlink\" title=\"窄带与扩频\"></a>窄带与扩频</h3><p>射频传输方式主要分为窄带和扩频两类。<br>窄带：使用极窄的带宽发送携带的数据。   // 针对该频率范围的蓄意干扰或非蓄意干扰很容易破坏信号。<br>扩频：使用超出实际所需的带宽发送数据。 // 抗干扰较强。</p>\n<h3 id=\"跳频扩频\"><a href=\"#跳频扩频\" class=\"headerlink\" title=\"跳频扩频\"></a>跳频扩频</h3><p>FHSS:在一段时间内使用一个特定的频率传输数据，这段时间称为驻留时间。<br>大致工作方式：首先使用一个很小的频率载波空间传输数据，然后跳变到另一个很小的频率载波空间传输数据，再跳到第三个频率载波空间。</p>\n<p><strong>跳变序列</strong><br>跳频使用信道的跳变方式。跳变序列结束后将重复。<br>所有FHSS发射机和接收机必须同时在同一载波跳上同步。FHSS接入点可以配置802.11原始标准定义的跳变序列，跳变序列信息通过信标管理帧发送给客户端。</p>\n<p><strong>驻留时间</strong><br>在切换到跳变序列中下一个频率之前，FHSS系统使用特定频率传输数据的时间，称为驻留时间。</p>\n<p><strong>跳变时间</strong><br>发射机从一个频率切换到另一个频率所需的时间。<br>跳变时间通常200~300us，与100~200ms的典型驻留时间相比很短。<br>跳变时间属于开销时间。一般而言，跳变越少吞吐量越高。<br>跳变可以增强抗干扰，跳变越少越易受到干扰。</p>\n<h3 id=\"直接序列扩频\"><a href=\"#直接序列扩频\" class=\"headerlink\" title=\"直接序列扩频\"></a>直接序列扩频</h3><p>直接序列扩频(DSSS)，是802.11定义的原始标准。它仅使用一条信道进行通信。</p>\n<p><strong>DSSS数据编码</strong><br>无线通信极易收到干扰，为此无线系统将每个数据比特编码为多个比特进行传输，称为处理增益。<br>系统将一个数据比特转换为一系列称为码片的比特。<br>单个数据比特转换为码片序列的过程称为展宽或码片成形。<br>接收端将码片序列转换为单个比特的过程称为解扩。<br>巴克码的11个比特中9个损坏，接收端无线接口仍然能够解析码片序列，并恢复出原始数据。</p>\n<p><strong>调制</strong><br>使用展宽技术编码后，发射机需要调制数据以产生包含码片的载波信号。</p>\n<p>802.11和802.11b使用的编码与调制技术</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">编码方式</th>\n<th style=\"text-align:center\">数据速率</th>\n<th style=\"text-align:center\">编码方式</th>\n<th style=\"text-align:center\">码片长度</th>\n<th style=\"text-align:center\">编码比特</th>\n<th>调制方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">DSSS</td>\n<td style=\"text-align:center\">1Mbps</td>\n<td style=\"text-align:center\">巴克码</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">1</td>\n<td>DBPSK</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DSSS</td>\n<td style=\"text-align:center\">2Mbps</td>\n<td style=\"text-align:center\">巴克码</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">1</td>\n<td>DQPSK</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HR-DSSS</td>\n<td style=\"text-align:center\">5.5Mbps</td>\n<td style=\"text-align:center\">CCK</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">4</td>\n<td>DQPSK</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HR-DSSS</td>\n<td style=\"text-align:center\">11Mbps</td>\n<td style=\"text-align:center\">CCK</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">8</td>\n<td>DQPSK</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>（后续，OFDM）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>窄带与扩频</p>\n<blockquote>\n<p>多径干扰</p>\n</blockquote>\n<p>跳频扩频</p>\n<blockquote>\n<p>跳变序列<br>驻留时间<br>跳变时间<br>调制</p>\n</blockquote>\n<p>直接序列扩频</p>\n<blockquote>\n<p>DSSS数据编码<br>调制</p>\n</blockquote>\n<p>正交频分复用</p>\n<blockquote>\n<p>卷积编码<br>调制</p>\n</blockquote>\n<p>正交频分多址<br>工业、科学和医疗频段<br>非授权国家信息基础设施频段</p>\n<blockquote>\n<p>U-NII-1频段<br>U-NII-2A频段<br>U-NII-2C频段<br>U-NII-3频段<br>今后的U-NII频段</p>\n</blockquote>\n<p>3.6GHz频段<br>4.9GHz频段<br>未来的Wi-Fi频段</p>\n<blockquote>\n<p>1GHz一下频段<br>60GHz频段<br>空白电视频段</p>\n</blockquote>\n<p>2.4GHz信道<br>5GHz信道</p>\n<blockquote>\n<p>5G长期演进技术</p>\n</blockquote>\n<p>邻信道、非邻信道与重叠信道<br>吞吐量与带宽<br>通信系统恢复能力</p>\n<blockquote>\n<p>802.11aj-2018</p>\n</blockquote>\n<h3 id=\"窄带与扩频\"><a href=\"#窄带与扩频\" class=\"headerlink\" title=\"窄带与扩频\"></a>窄带与扩频</h3><p>射频传输方式主要分为窄带和扩频两类。<br>窄带：使用极窄的带宽发送携带的数据。   // 针对该频率范围的蓄意干扰或非蓄意干扰很容易破坏信号。<br>扩频：使用超出实际所需的带宽发送数据。 // 抗干扰较强。</p>\n<h3 id=\"跳频扩频\"><a href=\"#跳频扩频\" class=\"headerlink\" title=\"跳频扩频\"></a>跳频扩频</h3><p>FHSS:在一段时间内使用一个特定的频率传输数据，这段时间称为驻留时间。<br>大致工作方式：首先使用一个很小的频率载波空间传输数据，然后跳变到另一个很小的频率载波空间传输数据，再跳到第三个频率载波空间。</p>\n<p><strong>跳变序列</strong><br>跳频使用信道的跳变方式。跳变序列结束后将重复。<br>所有FHSS发射机和接收机必须同时在同一载波跳上同步。FHSS接入点可以配置802.11原始标准定义的跳变序列，跳变序列信息通过信标管理帧发送给客户端。</p>\n<p><strong>驻留时间</strong><br>在切换到跳变序列中下一个频率之前，FHSS系统使用特定频率传输数据的时间，称为驻留时间。</p>\n<p><strong>跳变时间</strong><br>发射机从一个频率切换到另一个频率所需的时间。<br>跳变时间通常200~300us，与100~200ms的典型驻留时间相比很短。<br>跳变时间属于开销时间。一般而言，跳变越少吞吐量越高。<br>跳变可以增强抗干扰，跳变越少越易受到干扰。</p>\n<h3 id=\"直接序列扩频\"><a href=\"#直接序列扩频\" class=\"headerlink\" title=\"直接序列扩频\"></a>直接序列扩频</h3><p>直接序列扩频(DSSS)，是802.11定义的原始标准。它仅使用一条信道进行通信。</p>\n<p><strong>DSSS数据编码</strong><br>无线通信极易收到干扰，为此无线系统将每个数据比特编码为多个比特进行传输，称为处理增益。<br>系统将一个数据比特转换为一系列称为码片的比特。<br>单个数据比特转换为码片序列的过程称为展宽或码片成形。<br>接收端将码片序列转换为单个比特的过程称为解扩。<br>巴克码的11个比特中9个损坏，接收端无线接口仍然能够解析码片序列，并恢复出原始数据。</p>\n<p><strong>调制</strong><br>使用展宽技术编码后，发射机需要调制数据以产生包含码片的载波信号。</p>\n<p>802.11和802.11b使用的编码与调制技术</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">编码方式</th>\n<th style=\"text-align:center\">数据速率</th>\n<th style=\"text-align:center\">编码方式</th>\n<th style=\"text-align:center\">码片长度</th>\n<th style=\"text-align:center\">编码比特</th>\n<th>调制方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">DSSS</td>\n<td style=\"text-align:center\">1Mbps</td>\n<td style=\"text-align:center\">巴克码</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">1</td>\n<td>DBPSK</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DSSS</td>\n<td style=\"text-align:center\">2Mbps</td>\n<td style=\"text-align:center\">巴克码</td>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">1</td>\n<td>DQPSK</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HR-DSSS</td>\n<td style=\"text-align:center\">5.5Mbps</td>\n<td style=\"text-align:center\">CCK</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">4</td>\n<td>DQPSK</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">HR-DSSS</td>\n<td style=\"text-align:center\">11Mbps</td>\n<td style=\"text-align:center\">CCK</td>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">8</td>\n<td>DQPSK</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>（后续，OFDM）</p>\n"},{"title":"CWNA:标准、行业组织与通信基础知识概述","date":"2022-01-06T06:34:03.000Z","_content":"1.无线局域网的发展历程\n2.标准组织\n> 美国通信联邦委员会\n> 国际电信联盟无线电通信部门\n> 电气和电子工程师协会\n> 互联网工程任务组\n> Wi-Fi联盟\n> 国际标准化组织\n\n3.核心层、分布层与接入层\n4.通信基础知识\n> 通信术语\n> 载波信号\n> 键控法\n\n## 无线局域网的发展历程\n19世纪，迈克尔·法拉第、詹姆斯·克拉克·麦克斯韦、海因里希·鲁道夫·赫兹、尼古拉·特斯拉、大卫、爱德华·休斯、\n托马斯·爱迪生、古列尔莫·马可尼等许多发明家与科学家开始进行无线通信方面的实验。 \n\n1970年，第一种无线网络ALOHAnet在美国夏威夷大学诞生，这种网络以无线方式在夏威夷群岛之间传输数据。一般认\n为，ALOHAnet使用的技术奠定了802.3以太网CSMA/CD和802.11无线局域网CSMA/CA技术基础。 \n\n20世纪90年代，低速无线网络产品开始商用，多数工作在900MHz频段。1991年，IEEE开始讨论无线局域网技术的标准\n化问题。1997年，IEEE批准通过802.11原始标准。  \n\n1999年，IEEE批准通过数据速率较高的802.11b修正案。支持高达11Mbps的速率，无线局域网开始大规模商用。  \n\n802.11技术营销术语称为Wi-Fi，被全球数十亿人公认为无线局域网络的代名词。\n\n## 标准组织\n   各种标准组织共同对无线网络行业进行监管和规范。\n监管机构：\n   国际电信联盟无线电通信部门(ITU-R)以及美国联邦通信委员会(FCC)等监管机构负责制定规则，以约束用户使用无线电的行为。这\n些机构管理通信频率，功率电平，传输方法，共同致力于规范日益壮大的无线用户。\n\n标准组织：\n> 电气和电子工程师协会(IEEE)负责确保网络设备兼容与共存的标准。\n> 互联网工程任务组(IETF)负责制定互联网标准。\n> Wi-Fi联盟(Wi-Fi Alliance)对无线网络设备进行认证测试，以确保他们符合无线局域网通信协议,实现设备兼容。\n> 国际标准化组织(ISO)创建了开放系统互连模型。\n\n\n监管机构负责授权频谱和非授权频谱的管理。非授权频谱需要申请牌照。授权频谱和非授权频谱受6个方面的监管。\n> 频率\n> 带宽\n> 有意辐射器的最大功率\n> 最大等效全向辐射功率\n> 使用（室内与室外）\n> 频谱共享规则\n\n国际电信联盟无线电通信部门(ITU-R)承担全球频谱管理任务。致力于确保陆地、海洋与空中的通信活动不受干扰，通过\n5大行政区维护一个全球性的频率分配数据库。5大行政区：\n> 行政区A:美洲\n> 行政区B:西欧\n> 行政区C:东欧与北亚\n> 行政区D:非洲\n> 行政区E:亚洲与澳大拉西亚\n\n除行政区外，还设3个由地理界定的无线电监管区:\n> 监管区1:欧洲、中东与非洲\n> 监管区2:美洲\n> 监管区3:亚洲与大洋洲\n\n除了上述组织，各国设置自己的监管机构。\n\n\nOSI模型\n> 第七层        应用层\n> 第六层        表示层\n> 第五层        会话层\n> 第四层        传输层\n> 第三层        网络层\n> 第二层        数量链路层 : LLC子层和MAC子层\n> 第一层        物理层\n\n\n## 核心层、分布层与接入层\n网络的核心层：由高速主干网络构成，高速主干网相当于网络中的“高速公路”，其核心目标是在重要的数据中心和\n分布区域之间传输大量信息，如同高速公路连接城市与都会区一样。核心层既不负责流量路由，也不负责操作数据\n包，它的任务就是高速交换。\n\n网络的分布层：将流量路由或引导至较小的节点集群或领域。类似于中等速度在城市或都会区中分流交通流量省道。\n\n网络的接入层：以较低速度将流量直接床输给最终用户或末端节点，类似于直接到达最终地址的地方道路。\n\n记住，速度是个相对概念，核心层、分布层、接入层是相对的。\n\n\n## 通信基础知识\n通信术语\n> 单工：一个仅能发送，另一个仅能接收数据。例如调频广播\n> 半双工：两台设备都能发送接收数据，但同一时间只有一个设备可以传输。例如无线对讲机\n> 双工：两台设备可以同时发送接收数据。例如电话\n> 载波信号：一种高频信号，用于承载有效信号进行发射。\n> 振幅：波的高度，力度或能量。\n> 波长：两个连续波的相似点之间的距离。一般是波峰与波峰之间。\n> 频率：波传播的速度。一秒内产生的波的数量。周期的倒数。\n> 周期：传播一个波长距离的时间。\n> 相位：同频波之间的位置\n\n操作信号以表示多个数据的方法称为键控法(keying method)。\n> 幅移键控(ASK)\n> 频移键控(FSK)\n> 相移键控(PSK)\n\n\n\n## 网站资源\nWi-Fi联盟：https://www.wi-fi.org\nCWNP网站： https://www.cwnp.com\nRevolution Wi-Fi: http://www.revolutionwifi.net\nWirednot: https://wirednot.wordpress.com\n商业与个人博客链接：https://gcatewifi.wordpress.com\nWLPC网站：https://www.wlanpros.com\n\n\n\n","source":"_posts/CWNA-标准、行业组织与通信基础知识概述.md","raw":"---\ntitle: 'CWNA:标准、行业组织与通信基础知识概述'\ndate: 2022-01-06 14:34:03\ntags: 'Wi-Fi'\n---\n1.无线局域网的发展历程\n2.标准组织\n> 美国通信联邦委员会\n> 国际电信联盟无线电通信部门\n> 电气和电子工程师协会\n> 互联网工程任务组\n> Wi-Fi联盟\n> 国际标准化组织\n\n3.核心层、分布层与接入层\n4.通信基础知识\n> 通信术语\n> 载波信号\n> 键控法\n\n## 无线局域网的发展历程\n19世纪，迈克尔·法拉第、詹姆斯·克拉克·麦克斯韦、海因里希·鲁道夫·赫兹、尼古拉·特斯拉、大卫、爱德华·休斯、\n托马斯·爱迪生、古列尔莫·马可尼等许多发明家与科学家开始进行无线通信方面的实验。 \n\n1970年，第一种无线网络ALOHAnet在美国夏威夷大学诞生，这种网络以无线方式在夏威夷群岛之间传输数据。一般认\n为，ALOHAnet使用的技术奠定了802.3以太网CSMA/CD和802.11无线局域网CSMA/CA技术基础。 \n\n20世纪90年代，低速无线网络产品开始商用，多数工作在900MHz频段。1991年，IEEE开始讨论无线局域网技术的标准\n化问题。1997年，IEEE批准通过802.11原始标准。  \n\n1999年，IEEE批准通过数据速率较高的802.11b修正案。支持高达11Mbps的速率，无线局域网开始大规模商用。  \n\n802.11技术营销术语称为Wi-Fi，被全球数十亿人公认为无线局域网络的代名词。\n\n## 标准组织\n   各种标准组织共同对无线网络行业进行监管和规范。\n监管机构：\n   国际电信联盟无线电通信部门(ITU-R)以及美国联邦通信委员会(FCC)等监管机构负责制定规则，以约束用户使用无线电的行为。这\n些机构管理通信频率，功率电平，传输方法，共同致力于规范日益壮大的无线用户。\n\n标准组织：\n> 电气和电子工程师协会(IEEE)负责确保网络设备兼容与共存的标准。\n> 互联网工程任务组(IETF)负责制定互联网标准。\n> Wi-Fi联盟(Wi-Fi Alliance)对无线网络设备进行认证测试，以确保他们符合无线局域网通信协议,实现设备兼容。\n> 国际标准化组织(ISO)创建了开放系统互连模型。\n\n\n监管机构负责授权频谱和非授权频谱的管理。非授权频谱需要申请牌照。授权频谱和非授权频谱受6个方面的监管。\n> 频率\n> 带宽\n> 有意辐射器的最大功率\n> 最大等效全向辐射功率\n> 使用（室内与室外）\n> 频谱共享规则\n\n国际电信联盟无线电通信部门(ITU-R)承担全球频谱管理任务。致力于确保陆地、海洋与空中的通信活动不受干扰，通过\n5大行政区维护一个全球性的频率分配数据库。5大行政区：\n> 行政区A:美洲\n> 行政区B:西欧\n> 行政区C:东欧与北亚\n> 行政区D:非洲\n> 行政区E:亚洲与澳大拉西亚\n\n除行政区外，还设3个由地理界定的无线电监管区:\n> 监管区1:欧洲、中东与非洲\n> 监管区2:美洲\n> 监管区3:亚洲与大洋洲\n\n除了上述组织，各国设置自己的监管机构。\n\n\nOSI模型\n> 第七层        应用层\n> 第六层        表示层\n> 第五层        会话层\n> 第四层        传输层\n> 第三层        网络层\n> 第二层        数量链路层 : LLC子层和MAC子层\n> 第一层        物理层\n\n\n## 核心层、分布层与接入层\n网络的核心层：由高速主干网络构成，高速主干网相当于网络中的“高速公路”，其核心目标是在重要的数据中心和\n分布区域之间传输大量信息，如同高速公路连接城市与都会区一样。核心层既不负责流量路由，也不负责操作数据\n包，它的任务就是高速交换。\n\n网络的分布层：将流量路由或引导至较小的节点集群或领域。类似于中等速度在城市或都会区中分流交通流量省道。\n\n网络的接入层：以较低速度将流量直接床输给最终用户或末端节点，类似于直接到达最终地址的地方道路。\n\n记住，速度是个相对概念，核心层、分布层、接入层是相对的。\n\n\n## 通信基础知识\n通信术语\n> 单工：一个仅能发送，另一个仅能接收数据。例如调频广播\n> 半双工：两台设备都能发送接收数据，但同一时间只有一个设备可以传输。例如无线对讲机\n> 双工：两台设备可以同时发送接收数据。例如电话\n> 载波信号：一种高频信号，用于承载有效信号进行发射。\n> 振幅：波的高度，力度或能量。\n> 波长：两个连续波的相似点之间的距离。一般是波峰与波峰之间。\n> 频率：波传播的速度。一秒内产生的波的数量。周期的倒数。\n> 周期：传播一个波长距离的时间。\n> 相位：同频波之间的位置\n\n操作信号以表示多个数据的方法称为键控法(keying method)。\n> 幅移键控(ASK)\n> 频移键控(FSK)\n> 相移键控(PSK)\n\n\n\n## 网站资源\nWi-Fi联盟：https://www.wi-fi.org\nCWNP网站： https://www.cwnp.com\nRevolution Wi-Fi: http://www.revolutionwifi.net\nWirednot: https://wirednot.wordpress.com\n商业与个人博客链接：https://gcatewifi.wordpress.com\nWLPC网站：https://www.wlanpros.com\n\n\n\n","slug":"CWNA-标准、行业组织与通信基础知识概述","published":1,"updated":"2022-01-10T12:15:42.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632i000sh6fda3vb4bjs","content":"<p>1.无线局域网的发展历程<br>2.标准组织</p>\n<blockquote>\n<p>美国通信联邦委员会<br>国际电信联盟无线电通信部门<br>电气和电子工程师协会<br>互联网工程任务组<br>Wi-Fi联盟<br>国际标准化组织</p>\n</blockquote>\n<p>3.核心层、分布层与接入层<br>4.通信基础知识</p>\n<blockquote>\n<p>通信术语<br>载波信号<br>键控法</p>\n</blockquote>\n<h2 id=\"无线局域网的发展历程\"><a href=\"#无线局域网的发展历程\" class=\"headerlink\" title=\"无线局域网的发展历程\"></a>无线局域网的发展历程</h2><p>19世纪，迈克尔·法拉第、詹姆斯·克拉克·麦克斯韦、海因里希·鲁道夫·赫兹、尼古拉·特斯拉、大卫、爱德华·休斯、<br>托马斯·爱迪生、古列尔莫·马可尼等许多发明家与科学家开始进行无线通信方面的实验。 </p>\n<p>1970年，第一种无线网络ALOHAnet在美国夏威夷大学诞生，这种网络以无线方式在夏威夷群岛之间传输数据。一般认<br>为，ALOHAnet使用的技术奠定了802.3以太网CSMA/CD和802.11无线局域网CSMA/CA技术基础。 </p>\n<p>20世纪90年代，低速无线网络产品开始商用，多数工作在900MHz频段。1991年，IEEE开始讨论无线局域网技术的标准<br>化问题。1997年，IEEE批准通过802.11原始标准。  </p>\n<p>1999年，IEEE批准通过数据速率较高的802.11b修正案。支持高达11Mbps的速率，无线局域网开始大规模商用。  </p>\n<p>802.11技术营销术语称为Wi-Fi，被全球数十亿人公认为无线局域网络的代名词。</p>\n<h2 id=\"标准组织\"><a href=\"#标准组织\" class=\"headerlink\" title=\"标准组织\"></a>标准组织</h2><p>   各种标准组织共同对无线网络行业进行监管和规范。<br>监管机构：<br>   国际电信联盟无线电通信部门(ITU-R)以及美国联邦通信委员会(FCC)等监管机构负责制定规则，以约束用户使用无线电的行为。这<br>些机构管理通信频率，功率电平，传输方法，共同致力于规范日益壮大的无线用户。</p>\n<p>标准组织：</p>\n<blockquote>\n<p>电气和电子工程师协会(IEEE)负责确保网络设备兼容与共存的标准。<br>互联网工程任务组(IETF)负责制定互联网标准。<br>Wi-Fi联盟(Wi-Fi Alliance)对无线网络设备进行认证测试，以确保他们符合无线局域网通信协议,实现设备兼容。<br>国际标准化组织(ISO)创建了开放系统互连模型。</p>\n</blockquote>\n<p>监管机构负责授权频谱和非授权频谱的管理。非授权频谱需要申请牌照。授权频谱和非授权频谱受6个方面的监管。</p>\n<blockquote>\n<p>频率<br>带宽<br>有意辐射器的最大功率<br>最大等效全向辐射功率<br>使用（室内与室外）<br>频谱共享规则</p>\n</blockquote>\n<p>国际电信联盟无线电通信部门(ITU-R)承担全球频谱管理任务。致力于确保陆地、海洋与空中的通信活动不受干扰，通过<br>5大行政区维护一个全球性的频率分配数据库。5大行政区：</p>\n<blockquote>\n<p>行政区A:美洲<br>行政区B:西欧<br>行政区C:东欧与北亚<br>行政区D:非洲<br>行政区E:亚洲与澳大拉西亚</p>\n</blockquote>\n<p>除行政区外，还设3个由地理界定的无线电监管区:</p>\n<blockquote>\n<p>监管区1:欧洲、中东与非洲<br>监管区2:美洲<br>监管区3:亚洲与大洋洲</p>\n</blockquote>\n<p>除了上述组织，各国设置自己的监管机构。</p>\n<p>OSI模型</p>\n<blockquote>\n<p>第七层        应用层<br>第六层        表示层<br>第五层        会话层<br>第四层        传输层<br>第三层        网络层<br>第二层        数量链路层 : LLC子层和MAC子层<br>第一层        物理层</p>\n</blockquote>\n<h2 id=\"核心层、分布层与接入层\"><a href=\"#核心层、分布层与接入层\" class=\"headerlink\" title=\"核心层、分布层与接入层\"></a>核心层、分布层与接入层</h2><p>网络的核心层：由高速主干网络构成，高速主干网相当于网络中的“高速公路”，其核心目标是在重要的数据中心和<br>分布区域之间传输大量信息，如同高速公路连接城市与都会区一样。核心层既不负责流量路由，也不负责操作数据<br>包，它的任务就是高速交换。</p>\n<p>网络的分布层：将流量路由或引导至较小的节点集群或领域。类似于中等速度在城市或都会区中分流交通流量省道。</p>\n<p>网络的接入层：以较低速度将流量直接床输给最终用户或末端节点，类似于直接到达最终地址的地方道路。</p>\n<p>记住，速度是个相对概念，核心层、分布层、接入层是相对的。</p>\n<h2 id=\"通信基础知识\"><a href=\"#通信基础知识\" class=\"headerlink\" title=\"通信基础知识\"></a>通信基础知识</h2><p>通信术语</p>\n<blockquote>\n<p>单工：一个仅能发送，另一个仅能接收数据。例如调频广播<br>半双工：两台设备都能发送接收数据，但同一时间只有一个设备可以传输。例如无线对讲机<br>双工：两台设备可以同时发送接收数据。例如电话<br>载波信号：一种高频信号，用于承载有效信号进行发射。<br>振幅：波的高度，力度或能量。<br>波长：两个连续波的相似点之间的距离。一般是波峰与波峰之间。<br>频率：波传播的速度。一秒内产生的波的数量。周期的倒数。<br>周期：传播一个波长距离的时间。<br>相位：同频波之间的位置</p>\n</blockquote>\n<p>操作信号以表示多个数据的方法称为键控法(keying method)。</p>\n<blockquote>\n<p>幅移键控(ASK)<br>频移键控(FSK)<br>相移键控(PSK)</p>\n</blockquote>\n<h2 id=\"网站资源\"><a href=\"#网站资源\" class=\"headerlink\" title=\"网站资源\"></a>网站资源</h2><p>Wi-Fi联盟：<a href=\"https://www.wi-fi.org\">https://www.wi-fi.org</a><br>CWNP网站： <a href=\"https://www.cwnp.com\">https://www.cwnp.com</a><br>Revolution Wi-Fi: <a href=\"http://www.revolutionwifi.net\">http://www.revolutionwifi.net</a><br>Wirednot: <a href=\"https://wirednot.wordpress.com\">https://wirednot.wordpress.com</a><br>商业与个人博客链接：<a href=\"https://gcatewifi.wordpress.com\">https://gcatewifi.wordpress.com</a><br>WLPC网站：<a href=\"https://www.wlanpros.com\">https://www.wlanpros.com</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.无线局域网的发展历程<br>2.标准组织</p>\n<blockquote>\n<p>美国通信联邦委员会<br>国际电信联盟无线电通信部门<br>电气和电子工程师协会<br>互联网工程任务组<br>Wi-Fi联盟<br>国际标准化组织</p>\n</blockquote>\n<p>3.核心层、分布层与接入层<br>4.通信基础知识</p>\n<blockquote>\n<p>通信术语<br>载波信号<br>键控法</p>\n</blockquote>\n<h2 id=\"无线局域网的发展历程\"><a href=\"#无线局域网的发展历程\" class=\"headerlink\" title=\"无线局域网的发展历程\"></a>无线局域网的发展历程</h2><p>19世纪，迈克尔·法拉第、詹姆斯·克拉克·麦克斯韦、海因里希·鲁道夫·赫兹、尼古拉·特斯拉、大卫、爱德华·休斯、<br>托马斯·爱迪生、古列尔莫·马可尼等许多发明家与科学家开始进行无线通信方面的实验。 </p>\n<p>1970年，第一种无线网络ALOHAnet在美国夏威夷大学诞生，这种网络以无线方式在夏威夷群岛之间传输数据。一般认<br>为，ALOHAnet使用的技术奠定了802.3以太网CSMA/CD和802.11无线局域网CSMA/CA技术基础。 </p>\n<p>20世纪90年代，低速无线网络产品开始商用，多数工作在900MHz频段。1991年，IEEE开始讨论无线局域网技术的标准<br>化问题。1997年，IEEE批准通过802.11原始标准。  </p>\n<p>1999年，IEEE批准通过数据速率较高的802.11b修正案。支持高达11Mbps的速率，无线局域网开始大规模商用。  </p>\n<p>802.11技术营销术语称为Wi-Fi，被全球数十亿人公认为无线局域网络的代名词。</p>\n<h2 id=\"标准组织\"><a href=\"#标准组织\" class=\"headerlink\" title=\"标准组织\"></a>标准组织</h2><p>   各种标准组织共同对无线网络行业进行监管和规范。<br>监管机构：<br>   国际电信联盟无线电通信部门(ITU-R)以及美国联邦通信委员会(FCC)等监管机构负责制定规则，以约束用户使用无线电的行为。这<br>些机构管理通信频率，功率电平，传输方法，共同致力于规范日益壮大的无线用户。</p>\n<p>标准组织：</p>\n<blockquote>\n<p>电气和电子工程师协会(IEEE)负责确保网络设备兼容与共存的标准。<br>互联网工程任务组(IETF)负责制定互联网标准。<br>Wi-Fi联盟(Wi-Fi Alliance)对无线网络设备进行认证测试，以确保他们符合无线局域网通信协议,实现设备兼容。<br>国际标准化组织(ISO)创建了开放系统互连模型。</p>\n</blockquote>\n<p>监管机构负责授权频谱和非授权频谱的管理。非授权频谱需要申请牌照。授权频谱和非授权频谱受6个方面的监管。</p>\n<blockquote>\n<p>频率<br>带宽<br>有意辐射器的最大功率<br>最大等效全向辐射功率<br>使用（室内与室外）<br>频谱共享规则</p>\n</blockquote>\n<p>国际电信联盟无线电通信部门(ITU-R)承担全球频谱管理任务。致力于确保陆地、海洋与空中的通信活动不受干扰，通过<br>5大行政区维护一个全球性的频率分配数据库。5大行政区：</p>\n<blockquote>\n<p>行政区A:美洲<br>行政区B:西欧<br>行政区C:东欧与北亚<br>行政区D:非洲<br>行政区E:亚洲与澳大拉西亚</p>\n</blockquote>\n<p>除行政区外，还设3个由地理界定的无线电监管区:</p>\n<blockquote>\n<p>监管区1:欧洲、中东与非洲<br>监管区2:美洲<br>监管区3:亚洲与大洋洲</p>\n</blockquote>\n<p>除了上述组织，各国设置自己的监管机构。</p>\n<p>OSI模型</p>\n<blockquote>\n<p>第七层        应用层<br>第六层        表示层<br>第五层        会话层<br>第四层        传输层<br>第三层        网络层<br>第二层        数量链路层 : LLC子层和MAC子层<br>第一层        物理层</p>\n</blockquote>\n<h2 id=\"核心层、分布层与接入层\"><a href=\"#核心层、分布层与接入层\" class=\"headerlink\" title=\"核心层、分布层与接入层\"></a>核心层、分布层与接入层</h2><p>网络的核心层：由高速主干网络构成，高速主干网相当于网络中的“高速公路”，其核心目标是在重要的数据中心和<br>分布区域之间传输大量信息，如同高速公路连接城市与都会区一样。核心层既不负责流量路由，也不负责操作数据<br>包，它的任务就是高速交换。</p>\n<p>网络的分布层：将流量路由或引导至较小的节点集群或领域。类似于中等速度在城市或都会区中分流交通流量省道。</p>\n<p>网络的接入层：以较低速度将流量直接床输给最终用户或末端节点，类似于直接到达最终地址的地方道路。</p>\n<p>记住，速度是个相对概念，核心层、分布层、接入层是相对的。</p>\n<h2 id=\"通信基础知识\"><a href=\"#通信基础知识\" class=\"headerlink\" title=\"通信基础知识\"></a>通信基础知识</h2><p>通信术语</p>\n<blockquote>\n<p>单工：一个仅能发送，另一个仅能接收数据。例如调频广播<br>半双工：两台设备都能发送接收数据，但同一时间只有一个设备可以传输。例如无线对讲机<br>双工：两台设备可以同时发送接收数据。例如电话<br>载波信号：一种高频信号，用于承载有效信号进行发射。<br>振幅：波的高度，力度或能量。<br>波长：两个连续波的相似点之间的距离。一般是波峰与波峰之间。<br>频率：波传播的速度。一秒内产生的波的数量。周期的倒数。<br>周期：传播一个波长距离的时间。<br>相位：同频波之间的位置</p>\n</blockquote>\n<p>操作信号以表示多个数据的方法称为键控法(keying method)。</p>\n<blockquote>\n<p>幅移键控(ASK)<br>频移键控(FSK)<br>相移键控(PSK)</p>\n</blockquote>\n<h2 id=\"网站资源\"><a href=\"#网站资源\" class=\"headerlink\" title=\"网站资源\"></a>网站资源</h2><p>Wi-Fi联盟：<a href=\"https://www.wi-fi.org\">https://www.wi-fi.org</a><br>CWNP网站： <a href=\"https://www.cwnp.com\">https://www.cwnp.com</a><br>Revolution Wi-Fi: <a href=\"http://www.revolutionwifi.net\">http://www.revolutionwifi.net</a><br>Wirednot: <a href=\"https://wirednot.wordpress.com\">https://wirednot.wordpress.com</a><br>商业与个人博客链接：<a href=\"https://gcatewifi.wordpress.com\">https://gcatewifi.wordpress.com</a><br>WLPC网站：<a href=\"https://www.wlanpros.com\">https://www.wlanpros.com</a></p>\n"},{"title":"Linux shell script 实践记录(一)","date":"2022-02-15T10:02:16.000Z","_content":"\n本文展示一个Linux shell scpript实例。其中涉及的的一些Linux和shell相关的知识的如下：\n1. shell script 首行语法\n2. shell 的注释方法及script的代码规范一般形式\n3. shell 条件语句\n4. shell scprit中调用另外一个shell script.\n5. while 循环\n6. 获取系统参数并保存变量，变量计数\n7. 输出重定向及文件名创建编号。\n8. 终端断开不杀脚本的方法\n9. Wi-Fi的连接操作等\n\n\n主shell script.\n\n```shell\n#!/bin/sh\n##ISSUE i simulation script.\n##Objects:Try to simulate the Wi-Fi interaction sequence to accelerate issue reproduce\n#Use method:\n#1. Make sure the Wi-Fi is enable when board power on.\n#2. adb push issue-i-test-tool /data/test/\n#3. adb shell \n#4. cd /data/test/\n#5. nohup sh issue_i_simulate_script.sh &\n\n#Stop Android framework\nstop\n\nrm -rf /data/dump_*\ncp ./hostapd_ap0.conf /data/vendor/wifi/hostapd/hostapd_ap0.conf\nchown wifi:wifi /data/vendor/wifi/wpa/wpa_supplicant.conf\nchown wifi:wifi /data/vendor/wifi/hostapd/hostapd_ap0.conf\n\ndmesg -C\nERR_NUM=0\nNUM=0\nif [ -e /data/test/kernel_log ]; then\n   rm -rf /data/test/kernel_log/*\n   echo \"kernel_log dir exitst\"\nelse\n    mkdir -p /data/test/kernel_log/\nfi\n\necho \"######## statrt new simulation #########\"\n\nwhile true\ndo\n    echo \"######## statrt new simulation #########\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    #Load 8997 driver\n    #insmod mlan.ko\n    #insmod moal.ko drv_mode=3 sta_name=wlan0 uap_name=ap cal_data=none cfg80211_wext=0xf fw_name=nxp/sdiouart_combo.bin\n    \n    #ifconfig wlan0 up\n    \n    ##Start wpa_supplicant\n    #/vendor/bin/hw/wpa_supplicant -Dnl80211 -iwlan0 -c/data/vendor/wifi/wpa/wpa_supplicant.conf &\n    #start wpa_supplicant\n    wpa_cli -i wlan0 disconnect\n\n    ##Set driver and FW debug level\n    mlanutl wlan0 drvdbg 0x800FF\n\tsleep 1\n\t##Set driver and FW debug level\n    mlanutl ap0 drvdbg 0x800FF\n    #cat /proc/kmsg > ./kernel_log/kernel_log.txt &\n    echo \"Set drvdbg 0x800FF and capture kernel log.\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    \n    ##Start scan every 10 seconds\n    sh /data/test/cycle_scan.sh $NUM &\n    \n    ##Start AP\n    ##hostapd hostap.conf\n    echo \"------START SOFT AP-----\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    start hostapd\n    \n    \n    media_state=$(cat /proc/mwlan/adapter0/wlan0/info  | grep -i media_state | cut -b 14-22)\n    echo \"$media_state\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    \n    NUM_CONNECT=0\n    ##Connect remote ap specified by ssid\n    while true\n    do\n        #wpa_cli -i wlan0 remove_net all\n        #wpa_cli -i wlan0 flush\n        #wpa_cli -i wlan0 add_network\n        #wpa_cli -i wlan0 set_network 0 ssid '\"SSID\"'\n        #wpa_cli -i wlan0 set_network 0 key_mgmt NONE\n        #wpa_cli -i wlan0 set_network 0 proto WPA2\n        #wpa_cli -i wlan0 set_network 0 pairwise GCMP-256 CCMP TKIP\n        #wpa_cli -i wlan0 set_network 0 group GCMP-256 CCMP TKIP\n        #wpa_cli -i wlan0 set_network 0 psk '\"password\"'\n        wpa_cli -i wlan0 select_network 0\n    \t\n        sleep 5\n        media_state=$(cat /proc/mwlan/adapter0/wlan0/info  | grep -i media_state | cut -b 14-22)\n        if [ \"$media_state\" == \"Disconnec\" ]; then\n            let NUM_CONNECT+=1\n            echo \"Try to connect again.NUM_CONNECT is $NUM_CONNECT\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        else\n            echo \"-----Connect success.-----\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    \t    break\n        fi\n    \n        if [ $NUM_CONNECT -gt 4 ]; then\n            echo \"Stop connect NUM_CONNECT is $NUM_CONNECT\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n            break\n        else\n            echo \"Continue connect\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        fi\n\n        sleep 8\n    done\n    \n    ##DHCP\n    \n    #dhclient -i wlan0\n    \n\t#Add some traffic\n\tiperf -c <IP> -i 1 -t 10\n\t\n    sleep 5\n\n    ##Stop AP\n    echo \"-----STOP AP-----\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    stop hostapd\n\n\t#Add some traffic\n\tiperf -c <IP> -i 1 -t 10\n\n    i=1\n    while(($i<6))\n    do\n\tmlanutl wlan0 verext 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        echo \"get verext info\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        #echo \"get verext info\" \n\tsleep 2\n        i=$(($i+1))\n    done\n    \n    \n    dmesg > kernel_log/kernel_log.txt\n \n    driver_state=$(cat /proc/mwlan/adapter0/wlan0/debug | grep -i driver_state | cut -b 14)\n    echo \"$driver_state\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n\n    ##Dump FW log\n    if [ -e /data/dump_*/file_sdio_DUMP ]; then\n        echo \"DUMP success\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        killall cycle_scan.sh\n        break\n    fi\n\n    if [ $driver_state != 0 ]; then\n        echo \"debug_dump\" > /proc/mwlan/adapter0/wlan0/config\n\t\tkillall cycle_scan.sh\n        break\n    else\n        killall cycle_scan.sh\n        #rm -rf /data/test/kernel_log/kernel_log_$NUM.txt\n        rm -rf /data/test/kernel_log/script_log_$NUM.txt\n        let NUM+=1\n    fi\n\n    echo \"Continue utimost circle.\"\n\ndone\n```\n\n被上面的script调用\n\n```shell\n#!/bin/sh\n#This script is used to trigger cycle scan\nERR_NUM=0\nNUM=0\nLOGNUM=$1\n\nwhile true\ndo\n    scan_result=$(wpa_cli -i wlan0 scan)\n    if [ \"$scan_result\" != \"OK\" ]; then\n\t\techo \"scan FAIL\" 2>&1 >> /data/test/kernel_log/script_log_$LOGNUM.txt\n        ERR_NUM=$[$ERR_NUM + 1]\n    else\n        echo \"scan OK\" 2>&1 >> /data/test/kernel_log/script_log_$LOGNUM.txt\n        ERR_NUM=0\n    fi\n\n    if [ $ERR_NUM -gt 10 ]; then\n        echo \"Continuos scan ERR_NUM is $ERR_NUM\" 2>&1 >> /data/test/kernel_log/script_log_$LOGNUM.txt\n        break\n    fi\n\n    echo \"scan NUM is $NUM\" 2>&1 >> /data/test/kernel_log/script_log_$LOGNUM.txt\n    let NUM+=1\n    sleep 8\ndone\n```","source":"_posts/Linux-shell-script-实践记录-一.md","raw":"---\ntitle: Linux shell script 实践记录(一)\ndate: 2022-02-15 18:02:16\ntags: 'Shell script'\n---\n\n本文展示一个Linux shell scpript实例。其中涉及的的一些Linux和shell相关的知识的如下：\n1. shell script 首行语法\n2. shell 的注释方法及script的代码规范一般形式\n3. shell 条件语句\n4. shell scprit中调用另外一个shell script.\n5. while 循环\n6. 获取系统参数并保存变量，变量计数\n7. 输出重定向及文件名创建编号。\n8. 终端断开不杀脚本的方法\n9. Wi-Fi的连接操作等\n\n\n主shell script.\n\n```shell\n#!/bin/sh\n##ISSUE i simulation script.\n##Objects:Try to simulate the Wi-Fi interaction sequence to accelerate issue reproduce\n#Use method:\n#1. Make sure the Wi-Fi is enable when board power on.\n#2. adb push issue-i-test-tool /data/test/\n#3. adb shell \n#4. cd /data/test/\n#5. nohup sh issue_i_simulate_script.sh &\n\n#Stop Android framework\nstop\n\nrm -rf /data/dump_*\ncp ./hostapd_ap0.conf /data/vendor/wifi/hostapd/hostapd_ap0.conf\nchown wifi:wifi /data/vendor/wifi/wpa/wpa_supplicant.conf\nchown wifi:wifi /data/vendor/wifi/hostapd/hostapd_ap0.conf\n\ndmesg -C\nERR_NUM=0\nNUM=0\nif [ -e /data/test/kernel_log ]; then\n   rm -rf /data/test/kernel_log/*\n   echo \"kernel_log dir exitst\"\nelse\n    mkdir -p /data/test/kernel_log/\nfi\n\necho \"######## statrt new simulation #########\"\n\nwhile true\ndo\n    echo \"######## statrt new simulation #########\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    #Load 8997 driver\n    #insmod mlan.ko\n    #insmod moal.ko drv_mode=3 sta_name=wlan0 uap_name=ap cal_data=none cfg80211_wext=0xf fw_name=nxp/sdiouart_combo.bin\n    \n    #ifconfig wlan0 up\n    \n    ##Start wpa_supplicant\n    #/vendor/bin/hw/wpa_supplicant -Dnl80211 -iwlan0 -c/data/vendor/wifi/wpa/wpa_supplicant.conf &\n    #start wpa_supplicant\n    wpa_cli -i wlan0 disconnect\n\n    ##Set driver and FW debug level\n    mlanutl wlan0 drvdbg 0x800FF\n\tsleep 1\n\t##Set driver and FW debug level\n    mlanutl ap0 drvdbg 0x800FF\n    #cat /proc/kmsg > ./kernel_log/kernel_log.txt &\n    echo \"Set drvdbg 0x800FF and capture kernel log.\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    \n    ##Start scan every 10 seconds\n    sh /data/test/cycle_scan.sh $NUM &\n    \n    ##Start AP\n    ##hostapd hostap.conf\n    echo \"------START SOFT AP-----\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    start hostapd\n    \n    \n    media_state=$(cat /proc/mwlan/adapter0/wlan0/info  | grep -i media_state | cut -b 14-22)\n    echo \"$media_state\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    \n    NUM_CONNECT=0\n    ##Connect remote ap specified by ssid\n    while true\n    do\n        #wpa_cli -i wlan0 remove_net all\n        #wpa_cli -i wlan0 flush\n        #wpa_cli -i wlan0 add_network\n        #wpa_cli -i wlan0 set_network 0 ssid '\"SSID\"'\n        #wpa_cli -i wlan0 set_network 0 key_mgmt NONE\n        #wpa_cli -i wlan0 set_network 0 proto WPA2\n        #wpa_cli -i wlan0 set_network 0 pairwise GCMP-256 CCMP TKIP\n        #wpa_cli -i wlan0 set_network 0 group GCMP-256 CCMP TKIP\n        #wpa_cli -i wlan0 set_network 0 psk '\"password\"'\n        wpa_cli -i wlan0 select_network 0\n    \t\n        sleep 5\n        media_state=$(cat /proc/mwlan/adapter0/wlan0/info  | grep -i media_state | cut -b 14-22)\n        if [ \"$media_state\" == \"Disconnec\" ]; then\n            let NUM_CONNECT+=1\n            echo \"Try to connect again.NUM_CONNECT is $NUM_CONNECT\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        else\n            echo \"-----Connect success.-----\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    \t    break\n        fi\n    \n        if [ $NUM_CONNECT -gt 4 ]; then\n            echo \"Stop connect NUM_CONNECT is $NUM_CONNECT\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n            break\n        else\n            echo \"Continue connect\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        fi\n\n        sleep 8\n    done\n    \n    ##DHCP\n    \n    #dhclient -i wlan0\n    \n\t#Add some traffic\n\tiperf -c <IP> -i 1 -t 10\n\t\n    sleep 5\n\n    ##Stop AP\n    echo \"-----STOP AP-----\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n    stop hostapd\n\n\t#Add some traffic\n\tiperf -c <IP> -i 1 -t 10\n\n    i=1\n    while(($i<6))\n    do\n\tmlanutl wlan0 verext 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        echo \"get verext info\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        #echo \"get verext info\" \n\tsleep 2\n        i=$(($i+1))\n    done\n    \n    \n    dmesg > kernel_log/kernel_log.txt\n \n    driver_state=$(cat /proc/mwlan/adapter0/wlan0/debug | grep -i driver_state | cut -b 14)\n    echo \"$driver_state\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n\n    ##Dump FW log\n    if [ -e /data/dump_*/file_sdio_DUMP ]; then\n        echo \"DUMP success\" 2>&1 >> /data/test/kernel_log/script_log_$NUM.txt\n        killall cycle_scan.sh\n        break\n    fi\n\n    if [ $driver_state != 0 ]; then\n        echo \"debug_dump\" > /proc/mwlan/adapter0/wlan0/config\n\t\tkillall cycle_scan.sh\n        break\n    else\n        killall cycle_scan.sh\n        #rm -rf /data/test/kernel_log/kernel_log_$NUM.txt\n        rm -rf /data/test/kernel_log/script_log_$NUM.txt\n        let NUM+=1\n    fi\n\n    echo \"Continue utimost circle.\"\n\ndone\n```\n\n被上面的script调用\n\n```shell\n#!/bin/sh\n#This script is used to trigger cycle scan\nERR_NUM=0\nNUM=0\nLOGNUM=$1\n\nwhile true\ndo\n    scan_result=$(wpa_cli -i wlan0 scan)\n    if [ \"$scan_result\" != \"OK\" ]; then\n\t\techo \"scan FAIL\" 2>&1 >> /data/test/kernel_log/script_log_$LOGNUM.txt\n        ERR_NUM=$[$ERR_NUM + 1]\n    else\n        echo \"scan OK\" 2>&1 >> /data/test/kernel_log/script_log_$LOGNUM.txt\n        ERR_NUM=0\n    fi\n\n    if [ $ERR_NUM -gt 10 ]; then\n        echo \"Continuos scan ERR_NUM is $ERR_NUM\" 2>&1 >> /data/test/kernel_log/script_log_$LOGNUM.txt\n        break\n    fi\n\n    echo \"scan NUM is $NUM\" 2>&1 >> /data/test/kernel_log/script_log_$LOGNUM.txt\n    let NUM+=1\n    sleep 8\ndone\n```","slug":"Linux-shell-script-实践记录-一","published":1,"updated":"2022-02-15T10:20:08.442Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632i000uh6fd93p2g191","content":"<p>本文展示一个Linux shell scpript实例。其中涉及的的一些Linux和shell相关的知识的如下：</p>\n<ol>\n<li>shell script 首行语法</li>\n<li>shell 的注释方法及script的代码规范一般形式</li>\n<li>shell 条件语句</li>\n<li>shell scprit中调用另外一个shell script.</li>\n<li>while 循环</li>\n<li>获取系统参数并保存变量，变量计数</li>\n<li>输出重定向及文件名创建编号。</li>\n<li>终端断开不杀脚本的方法</li>\n<li>Wi-Fi的连接操作等</li>\n</ol>\n<p>主shell script.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/sh</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#ISSUE i simulation script.</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#Objects:Try to simulate the Wi-Fi interaction sequence to accelerate issue reproduce</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Use method:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">1. Make sure the Wi-Fi is <span class=\"built_in\">enable</span> when board power on.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">2. adb push issue-i-test-tool /data/<span class=\"built_in\">test</span>/</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">3. adb shell</span> </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">4. <span class=\"built_in\">cd</span> /data/<span class=\"built_in\">test</span>/</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">5. nohup sh issue_i_simulate_script.sh &amp;</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Stop Android framework</span></span><br><span class=\"line\">stop</span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf /data/dump_*</span><br><span class=\"line\">cp ./hostapd_ap0.conf /data/vendor/wifi/hostapd/hostapd_ap0.conf</span><br><span class=\"line\">chown wifi:wifi /data/vendor/wifi/wpa/wpa_supplicant.conf</span><br><span class=\"line\">chown wifi:wifi /data/vendor/wifi/hostapd/hostapd_ap0.conf</span><br><span class=\"line\"></span><br><span class=\"line\">dmesg -C</span><br><span class=\"line\">ERR_NUM=0</span><br><span class=\"line\">NUM=0</span><br><span class=\"line\">if [ -e /data/test/kernel_log ]; then</span><br><span class=\"line\">   rm -rf /data/test/kernel_log/*</span><br><span class=\"line\">   echo &quot;kernel_log dir exitst&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">    mkdir -p /data/test/kernel_log/</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;######## statrt new simulation #########&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">while true</span><br><span class=\"line\">do</span><br><span class=\"line\">    echo &quot;######## statrt new simulation #########&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    #Load 8997 driver</span><br><span class=\"line\">    #insmod mlan.ko</span><br><span class=\"line\">    #insmod moal.ko drv_mode=3 sta_name=wlan0 uap_name=ap cal_data=none cfg80211_wext=0xf fw_name=nxp/sdiouart_combo.bin</span><br><span class=\"line\">    </span><br><span class=\"line\">    #ifconfig wlan0 up</span><br><span class=\"line\">    </span><br><span class=\"line\">    ##Start wpa_supplicant</span><br><span class=\"line\">    #/vendor/bin/hw/wpa_supplicant -Dnl80211 -iwlan0 -c/data/vendor/wifi/wpa/wpa_supplicant.conf &amp;</span><br><span class=\"line\">    #start wpa_supplicant</span><br><span class=\"line\">    wpa_cli -i wlan0 disconnect</span><br><span class=\"line\"></span><br><span class=\"line\">    ##Set driver and FW debug level</span><br><span class=\"line\">    mlanutl wlan0 drvdbg 0x800FF</span><br><span class=\"line\">\tsleep 1</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\"><span class=\"comment\">#Set driver and FW debug level</span></span></span><br><span class=\"line\">    mlanutl ap0 drvdbg 0x800FF</span><br><span class=\"line\">    #cat /proc/kmsg &gt; ./kernel_log/kernel_log.txt &amp;</span><br><span class=\"line\">    echo &quot;Set drvdbg 0x800FF and capture kernel log.&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    </span><br><span class=\"line\">    ##Start scan every 10 seconds</span><br><span class=\"line\">    sh /data/test/cycle_scan.sh $NUM &amp;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ##Start AP</span><br><span class=\"line\">    ##hostapd hostap.conf</span><br><span class=\"line\">    echo &quot;------START SOFT AP-----&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    start hostapd</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    media_state=$(cat /proc/mwlan/adapter0/wlan0/info  | grep -i media_state | cut -b 14-22)</span><br><span class=\"line\">    echo &quot;$media_state&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    </span><br><span class=\"line\">    NUM_CONNECT=0</span><br><span class=\"line\">    ##Connect remote ap specified by ssid</span><br><span class=\"line\">    while true</span><br><span class=\"line\">    do</span><br><span class=\"line\">        #wpa_cli -i wlan0 remove_net all</span><br><span class=\"line\">        #wpa_cli -i wlan0 flush</span><br><span class=\"line\">        #wpa_cli -i wlan0 add_network</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 ssid &#x27;&quot;SSID&quot;&#x27;</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 key_mgmt NONE</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 proto WPA2</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 pairwise GCMP-256 CCMP TKIP</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 group GCMP-256 CCMP TKIP</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 psk &#x27;&quot;password&quot;&#x27;</span><br><span class=\"line\">        wpa_cli -i wlan0 select_network 0</span><br><span class=\"line\">    \t</span><br><span class=\"line\">        sleep 5</span><br><span class=\"line\">        media_state=$(cat /proc/mwlan/adapter0/wlan0/info  | grep -i media_state | cut -b 14-22)</span><br><span class=\"line\">        if [ &quot;$media_state&quot; == &quot;Disconnec&quot; ]; then</span><br><span class=\"line\">            let NUM_CONNECT+=1</span><br><span class=\"line\">            echo &quot;Try to connect again.NUM_CONNECT is $NUM_CONNECT&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        else</span><br><span class=\"line\">            echo &quot;-----Connect success.-----&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    \t    break</span><br><span class=\"line\">        fi</span><br><span class=\"line\">    </span><br><span class=\"line\">        if [ $NUM_CONNECT -gt 4 ]; then</span><br><span class=\"line\">            echo &quot;Stop connect NUM_CONNECT is $NUM_CONNECT&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">            break</span><br><span class=\"line\">        else</span><br><span class=\"line\">            echo &quot;Continue connect&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        fi</span><br><span class=\"line\"></span><br><span class=\"line\">        sleep 8</span><br><span class=\"line\">    done</span><br><span class=\"line\">    </span><br><span class=\"line\">    ##DHCP</span><br><span class=\"line\">    </span><br><span class=\"line\">    #dhclient -i wlan0</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">Add some traffic</span></span><br><span class=\"line\">\tiperf -c &lt;IP&gt; -i 1 -t 10</span><br><span class=\"line\">\t</span><br><span class=\"line\">    sleep 5</span><br><span class=\"line\"></span><br><span class=\"line\">    ##Stop AP</span><br><span class=\"line\">    echo &quot;-----STOP AP-----&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    stop hostapd</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">Add some traffic</span></span><br><span class=\"line\">\tiperf -c &lt;IP&gt; -i 1 -t 10</span><br><span class=\"line\"></span><br><span class=\"line\">    i=1</span><br><span class=\"line\">    while(($i&lt;6))</span><br><span class=\"line\">    do</span><br><span class=\"line\">\tmlanutl wlan0 verext 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        echo &quot;get verext info&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        #echo &quot;get verext info&quot; </span><br><span class=\"line\">\tsleep 2</span><br><span class=\"line\">        i=$(($i+1))</span><br><span class=\"line\">    done</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    dmesg &gt; kernel_log/kernel_log.txt</span><br><span class=\"line\"> </span><br><span class=\"line\">    driver_state=$(cat /proc/mwlan/adapter0/wlan0/debug | grep -i driver_state | cut -b 14)</span><br><span class=\"line\">    echo &quot;$driver_state&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\"></span><br><span class=\"line\">    ##Dump FW log</span><br><span class=\"line\">    if [ -e /data/dump_*/file_sdio_DUMP ]; then</span><br><span class=\"line\">        echo &quot;DUMP success&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        killall cycle_scan.sh</span><br><span class=\"line\">        break</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    if [ $driver_state != 0 ]; then</span><br><span class=\"line\">        echo &quot;debug_dump&quot; &gt; /proc/mwlan/adapter0/wlan0/config</span><br><span class=\"line\">\t\tkillall cycle_scan.sh</span><br><span class=\"line\">        break</span><br><span class=\"line\">    else</span><br><span class=\"line\">        killall cycle_scan.sh</span><br><span class=\"line\">        #rm -rf /data/test/kernel_log/kernel_log_$NUM.txt</span><br><span class=\"line\">        rm -rf /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        let NUM+=1</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &quot;Continue utimost circle.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>被上面的script调用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/sh</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">This script is used to trigger cycle scan</span></span><br><span class=\"line\">ERR_NUM=0</span><br><span class=\"line\">NUM=0</span><br><span class=\"line\">LOGNUM=$1</span><br><span class=\"line\"></span><br><span class=\"line\">while true</span><br><span class=\"line\">do</span><br><span class=\"line\">    scan_result=$(wpa_cli -i wlan0 scan)</span><br><span class=\"line\">    if [ &quot;$scan_result&quot; != &quot;OK&quot; ]; then</span><br><span class=\"line\">\t\techo &quot;scan FAIL&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$LOGNUM.txt</span><br><span class=\"line\">        ERR_NUM=$[$ERR_NUM + 1]</span><br><span class=\"line\">    else</span><br><span class=\"line\">        echo &quot;scan OK&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$LOGNUM.txt</span><br><span class=\"line\">        ERR_NUM=0</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    if [ $ERR_NUM -gt 10 ]; then</span><br><span class=\"line\">        echo &quot;Continuos scan ERR_NUM is $ERR_NUM&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$LOGNUM.txt</span><br><span class=\"line\">        break</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &quot;scan NUM is $NUM&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$LOGNUM.txt</span><br><span class=\"line\">    let NUM+=1</span><br><span class=\"line\">    sleep 8</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>本文展示一个Linux shell scpript实例。其中涉及的的一些Linux和shell相关的知识的如下：</p>\n<ol>\n<li>shell script 首行语法</li>\n<li>shell 的注释方法及script的代码规范一般形式</li>\n<li>shell 条件语句</li>\n<li>shell scprit中调用另外一个shell script.</li>\n<li>while 循环</li>\n<li>获取系统参数并保存变量，变量计数</li>\n<li>输出重定向及文件名创建编号。</li>\n<li>终端断开不杀脚本的方法</li>\n<li>Wi-Fi的连接操作等</li>\n</ol>\n<p>主shell script.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/sh</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#ISSUE i simulation script.</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"><span class=\"comment\">#Objects:Try to simulate the Wi-Fi interaction sequence to accelerate issue reproduce</span></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Use method:</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">1. Make sure the Wi-Fi is <span class=\"built_in\">enable</span> when board power on.</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">2. adb push issue-i-test-tool /data/<span class=\"built_in\">test</span>/</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">3. adb shell</span> </span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">4. <span class=\"built_in\">cd</span> /data/<span class=\"built_in\">test</span>/</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">5. nohup sh issue_i_simulate_script.sh &amp;</span></span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">Stop Android framework</span></span><br><span class=\"line\">stop</span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf /data/dump_*</span><br><span class=\"line\">cp ./hostapd_ap0.conf /data/vendor/wifi/hostapd/hostapd_ap0.conf</span><br><span class=\"line\">chown wifi:wifi /data/vendor/wifi/wpa/wpa_supplicant.conf</span><br><span class=\"line\">chown wifi:wifi /data/vendor/wifi/hostapd/hostapd_ap0.conf</span><br><span class=\"line\"></span><br><span class=\"line\">dmesg -C</span><br><span class=\"line\">ERR_NUM=0</span><br><span class=\"line\">NUM=0</span><br><span class=\"line\">if [ -e /data/test/kernel_log ]; then</span><br><span class=\"line\">   rm -rf /data/test/kernel_log/*</span><br><span class=\"line\">   echo &quot;kernel_log dir exitst&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">    mkdir -p /data/test/kernel_log/</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">echo &quot;######## statrt new simulation #########&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">while true</span><br><span class=\"line\">do</span><br><span class=\"line\">    echo &quot;######## statrt new simulation #########&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    #Load 8997 driver</span><br><span class=\"line\">    #insmod mlan.ko</span><br><span class=\"line\">    #insmod moal.ko drv_mode=3 sta_name=wlan0 uap_name=ap cal_data=none cfg80211_wext=0xf fw_name=nxp/sdiouart_combo.bin</span><br><span class=\"line\">    </span><br><span class=\"line\">    #ifconfig wlan0 up</span><br><span class=\"line\">    </span><br><span class=\"line\">    ##Start wpa_supplicant</span><br><span class=\"line\">    #/vendor/bin/hw/wpa_supplicant -Dnl80211 -iwlan0 -c/data/vendor/wifi/wpa/wpa_supplicant.conf &amp;</span><br><span class=\"line\">    #start wpa_supplicant</span><br><span class=\"line\">    wpa_cli -i wlan0 disconnect</span><br><span class=\"line\"></span><br><span class=\"line\">    ##Set driver and FW debug level</span><br><span class=\"line\">    mlanutl wlan0 drvdbg 0x800FF</span><br><span class=\"line\">\tsleep 1</span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\"><span class=\"comment\">#Set driver and FW debug level</span></span></span><br><span class=\"line\">    mlanutl ap0 drvdbg 0x800FF</span><br><span class=\"line\">    #cat /proc/kmsg &gt; ./kernel_log/kernel_log.txt &amp;</span><br><span class=\"line\">    echo &quot;Set drvdbg 0x800FF and capture kernel log.&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    </span><br><span class=\"line\">    ##Start scan every 10 seconds</span><br><span class=\"line\">    sh /data/test/cycle_scan.sh $NUM &amp;</span><br><span class=\"line\">    </span><br><span class=\"line\">    ##Start AP</span><br><span class=\"line\">    ##hostapd hostap.conf</span><br><span class=\"line\">    echo &quot;------START SOFT AP-----&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    start hostapd</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    media_state=$(cat /proc/mwlan/adapter0/wlan0/info  | grep -i media_state | cut -b 14-22)</span><br><span class=\"line\">    echo &quot;$media_state&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    </span><br><span class=\"line\">    NUM_CONNECT=0</span><br><span class=\"line\">    ##Connect remote ap specified by ssid</span><br><span class=\"line\">    while true</span><br><span class=\"line\">    do</span><br><span class=\"line\">        #wpa_cli -i wlan0 remove_net all</span><br><span class=\"line\">        #wpa_cli -i wlan0 flush</span><br><span class=\"line\">        #wpa_cli -i wlan0 add_network</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 ssid &#x27;&quot;SSID&quot;&#x27;</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 key_mgmt NONE</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 proto WPA2</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 pairwise GCMP-256 CCMP TKIP</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 group GCMP-256 CCMP TKIP</span><br><span class=\"line\">        #wpa_cli -i wlan0 set_network 0 psk &#x27;&quot;password&quot;&#x27;</span><br><span class=\"line\">        wpa_cli -i wlan0 select_network 0</span><br><span class=\"line\">    \t</span><br><span class=\"line\">        sleep 5</span><br><span class=\"line\">        media_state=$(cat /proc/mwlan/adapter0/wlan0/info  | grep -i media_state | cut -b 14-22)</span><br><span class=\"line\">        if [ &quot;$media_state&quot; == &quot;Disconnec&quot; ]; then</span><br><span class=\"line\">            let NUM_CONNECT+=1</span><br><span class=\"line\">            echo &quot;Try to connect again.NUM_CONNECT is $NUM_CONNECT&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        else</span><br><span class=\"line\">            echo &quot;-----Connect success.-----&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    \t    break</span><br><span class=\"line\">        fi</span><br><span class=\"line\">    </span><br><span class=\"line\">        if [ $NUM_CONNECT -gt 4 ]; then</span><br><span class=\"line\">            echo &quot;Stop connect NUM_CONNECT is $NUM_CONNECT&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">            break</span><br><span class=\"line\">        else</span><br><span class=\"line\">            echo &quot;Continue connect&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        fi</span><br><span class=\"line\"></span><br><span class=\"line\">        sleep 8</span><br><span class=\"line\">    done</span><br><span class=\"line\">    </span><br><span class=\"line\">    ##DHCP</span><br><span class=\"line\">    </span><br><span class=\"line\">    #dhclient -i wlan0</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">Add some traffic</span></span><br><span class=\"line\">\tiperf -c &lt;IP&gt; -i 1 -t 10</span><br><span class=\"line\">\t</span><br><span class=\"line\">    sleep 5</span><br><span class=\"line\"></span><br><span class=\"line\">    ##Stop AP</span><br><span class=\"line\">    echo &quot;-----STOP AP-----&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">    stop hostapd</span><br><span class=\"line\"><span class=\"meta\"></span></span><br><span class=\"line\"><span class=\"meta\">\t#</span><span class=\"bash\">Add some traffic</span></span><br><span class=\"line\">\tiperf -c &lt;IP&gt; -i 1 -t 10</span><br><span class=\"line\"></span><br><span class=\"line\">    i=1</span><br><span class=\"line\">    while(($i&lt;6))</span><br><span class=\"line\">    do</span><br><span class=\"line\">\tmlanutl wlan0 verext 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        echo &quot;get verext info&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        #echo &quot;get verext info&quot; </span><br><span class=\"line\">\tsleep 2</span><br><span class=\"line\">        i=$(($i+1))</span><br><span class=\"line\">    done</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    dmesg &gt; kernel_log/kernel_log.txt</span><br><span class=\"line\"> </span><br><span class=\"line\">    driver_state=$(cat /proc/mwlan/adapter0/wlan0/debug | grep -i driver_state | cut -b 14)</span><br><span class=\"line\">    echo &quot;$driver_state&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\"></span><br><span class=\"line\">    ##Dump FW log</span><br><span class=\"line\">    if [ -e /data/dump_*/file_sdio_DUMP ]; then</span><br><span class=\"line\">        echo &quot;DUMP success&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        killall cycle_scan.sh</span><br><span class=\"line\">        break</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    if [ $driver_state != 0 ]; then</span><br><span class=\"line\">        echo &quot;debug_dump&quot; &gt; /proc/mwlan/adapter0/wlan0/config</span><br><span class=\"line\">\t\tkillall cycle_scan.sh</span><br><span class=\"line\">        break</span><br><span class=\"line\">    else</span><br><span class=\"line\">        killall cycle_scan.sh</span><br><span class=\"line\">        #rm -rf /data/test/kernel_log/kernel_log_$NUM.txt</span><br><span class=\"line\">        rm -rf /data/test/kernel_log/script_log_$NUM.txt</span><br><span class=\"line\">        let NUM+=1</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &quot;Continue utimost circle.&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>\n<p>被上面的script调用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">!/bin/sh</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">This script is used to trigger cycle scan</span></span><br><span class=\"line\">ERR_NUM=0</span><br><span class=\"line\">NUM=0</span><br><span class=\"line\">LOGNUM=$1</span><br><span class=\"line\"></span><br><span class=\"line\">while true</span><br><span class=\"line\">do</span><br><span class=\"line\">    scan_result=$(wpa_cli -i wlan0 scan)</span><br><span class=\"line\">    if [ &quot;$scan_result&quot; != &quot;OK&quot; ]; then</span><br><span class=\"line\">\t\techo &quot;scan FAIL&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$LOGNUM.txt</span><br><span class=\"line\">        ERR_NUM=$[$ERR_NUM + 1]</span><br><span class=\"line\">    else</span><br><span class=\"line\">        echo &quot;scan OK&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$LOGNUM.txt</span><br><span class=\"line\">        ERR_NUM=0</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    if [ $ERR_NUM -gt 10 ]; then</span><br><span class=\"line\">        echo &quot;Continuos scan ERR_NUM is $ERR_NUM&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$LOGNUM.txt</span><br><span class=\"line\">        break</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &quot;scan NUM is $NUM&quot; 2&gt;&amp;1 &gt;&gt; /data/test/kernel_log/script_log_$LOGNUM.txt</span><br><span class=\"line\">    let NUM+=1</span><br><span class=\"line\">    sleep 8</span><br><span class=\"line\">done</span><br></pre></td></tr></table></figure>"},{"title":"CWNA:无线网络与扩频技术（三）","date":"2022-01-26T11:45:45.000Z","_content":"\n### 2.4GHz信道\nIEEE将2.4GHz ISM频段划分为14条独立的信道。\n\nTable-2.4GHz信道规划\n\n|信道编号|中心频率(GHz)|\n|:----------:|:------:|\n|1|2.412|\n|2|2.417|\n|3|2.422|\n|4|2.427|\n|5|2.432|\n|6|2.437|\n|7|2.442|\n|8|2.447|\n|9|2.452|\n|10|2.457|\n|11|2.462|\n|12|2.467|\n|13|2.472|\n|14|**2.484**|\n\n802.11 DSSS 和 802.11 HR-DSSS使用的是22MHz的信道\n信道中心频率间隔5MHz\nOFDM技术使用的是20MHz的信道带宽。\n2.4G一般有三个不重叠信道：1，6，11   或 2,7,12 或 3，8，13\n\n\n### 5GHz信道\n信道中心频率 = 信道编号 X 5 + 5000\n例如：\n36 X 5 + 5000 = 5180MHz\n\n**5GHz 信道**\n36，40，44，48，52，56，60，64，100，104，108，112，116，120，124，128，132，136，140，144，149，153，157，161，165，，169，173，177，181\n\n### 非重叠信道\n802.11 DSSS信道中心频率必须相隔30MHz，认为互不重叠；\n802.11b HR-DSSS和 802.11g ERP信道中心频率必须相隔25MHz认为互不重叠；\n5G OFDM信道中心频率之间必须相关20MHz，认为互不重叠；\n\n\n### 邻信道干扰\n用于描述信道复用设计不当导致的频率空间重叠。\n\n### 吞吐量与带宽\n影响数据吞吐量的因素有：\n> 带宽\n> 数据编码\n> 调制\n> 介质争用\n> 加密\n\n\n数据编码和调制方式决定了数据速率，数据速率有时又称为数据带宽。\n例如：\n802.11a OFDM无线接口能以6，9，12，18，24，36，48，54Mbps的速率传输数据，但所有的U-NII信道的频率带宽相同，速率不同时由\n数据编码和调试方式不同。\n\n\n802.11网络采用带冲突避免的载波监听多路访问（CSMA/CA）作为介质访问方式，以确保在任何给定的时间，只有一台无线设备可以使用介质传输数据。\n\n802.11 a/b/g实际数总吞吐量一般不会超过数据速率的50%；  CSMA/CA 产生的介质争用开销通常为带宽的50%\n802.11 n/ac传输，实际吞吐量为数据速率的60%~70%；  CSMA/CA 产生的介质争用开销通常为带宽的35%\n\nRTS/CTS 机制也会增加通信开销，影响系统吞吐量。\n\n\n\n\n","source":"_posts/CWNA-无线网络与扩频技术（三）.md","raw":"---\ntitle: 'CWNA:无线网络与扩频技术（三）'\ndate: 2022-01-26 19:45:45\ntags: 'Wi-Fi'\n---\n\n### 2.4GHz信道\nIEEE将2.4GHz ISM频段划分为14条独立的信道。\n\nTable-2.4GHz信道规划\n\n|信道编号|中心频率(GHz)|\n|:----------:|:------:|\n|1|2.412|\n|2|2.417|\n|3|2.422|\n|4|2.427|\n|5|2.432|\n|6|2.437|\n|7|2.442|\n|8|2.447|\n|9|2.452|\n|10|2.457|\n|11|2.462|\n|12|2.467|\n|13|2.472|\n|14|**2.484**|\n\n802.11 DSSS 和 802.11 HR-DSSS使用的是22MHz的信道\n信道中心频率间隔5MHz\nOFDM技术使用的是20MHz的信道带宽。\n2.4G一般有三个不重叠信道：1，6，11   或 2,7,12 或 3，8，13\n\n\n### 5GHz信道\n信道中心频率 = 信道编号 X 5 + 5000\n例如：\n36 X 5 + 5000 = 5180MHz\n\n**5GHz 信道**\n36，40，44，48，52，56，60，64，100，104，108，112，116，120，124，128，132，136，140，144，149，153，157，161，165，，169，173，177，181\n\n### 非重叠信道\n802.11 DSSS信道中心频率必须相隔30MHz，认为互不重叠；\n802.11b HR-DSSS和 802.11g ERP信道中心频率必须相隔25MHz认为互不重叠；\n5G OFDM信道中心频率之间必须相关20MHz，认为互不重叠；\n\n\n### 邻信道干扰\n用于描述信道复用设计不当导致的频率空间重叠。\n\n### 吞吐量与带宽\n影响数据吞吐量的因素有：\n> 带宽\n> 数据编码\n> 调制\n> 介质争用\n> 加密\n\n\n数据编码和调制方式决定了数据速率，数据速率有时又称为数据带宽。\n例如：\n802.11a OFDM无线接口能以6，9，12，18，24，36，48，54Mbps的速率传输数据，但所有的U-NII信道的频率带宽相同，速率不同时由\n数据编码和调试方式不同。\n\n\n802.11网络采用带冲突避免的载波监听多路访问（CSMA/CA）作为介质访问方式，以确保在任何给定的时间，只有一台无线设备可以使用介质传输数据。\n\n802.11 a/b/g实际数总吞吐量一般不会超过数据速率的50%；  CSMA/CA 产生的介质争用开销通常为带宽的50%\n802.11 n/ac传输，实际吞吐量为数据速率的60%~70%；  CSMA/CA 产生的介质争用开销通常为带宽的35%\n\nRTS/CTS 机制也会增加通信开销，影响系统吞吐量。\n\n\n\n\n","slug":"CWNA-无线网络与扩频技术（三）","published":1,"updated":"2022-01-26T12:29:18.719Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632j000wh6fder8t8i1v","content":"<h3 id=\"2-4GHz信道\"><a href=\"#2-4GHz信道\" class=\"headerlink\" title=\"2.4GHz信道\"></a>2.4GHz信道</h3><p>IEEE将2.4GHz ISM频段划分为14条独立的信道。</p>\n<p>Table-2.4GHz信道规划</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">信道编号</th>\n<th style=\"text-align:center\">中心频率(GHz)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">2.412</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">2.417</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">2.422</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">2.427</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">2.432</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">2.437</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">2.442</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">2.447</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">2.452</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">2.457</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">2.462</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:center\">2.467</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:center\">2.472</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">14</td>\n<td style=\"text-align:center\"><strong>2.484</strong></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>802.11 DSSS 和 802.11 HR-DSSS使用的是22MHz的信道<br>信道中心频率间隔5MHz<br>OFDM技术使用的是20MHz的信道带宽。<br>2.4G一般有三个不重叠信道：1，6，11   或 2,7,12 或 3，8，13</p>\n<h3 id=\"5GHz信道\"><a href=\"#5GHz信道\" class=\"headerlink\" title=\"5GHz信道\"></a>5GHz信道</h3><p>信道中心频率 = 信道编号 X 5 + 5000<br>例如：<br>36 X 5 + 5000 = 5180MHz</p>\n<p><strong>5GHz 信道</strong><br>36，40，44，48，52，56，60，64，100，104，108，112，116，120，124，128，132，136，140，144，149，153，157，161，165，，169，173，177，181</p>\n<h3 id=\"非重叠信道\"><a href=\"#非重叠信道\" class=\"headerlink\" title=\"非重叠信道\"></a>非重叠信道</h3><p>802.11 DSSS信道中心频率必须相隔30MHz，认为互不重叠；<br>802.11b HR-DSSS和 802.11g ERP信道中心频率必须相隔25MHz认为互不重叠；<br>5G OFDM信道中心频率之间必须相关20MHz，认为互不重叠；</p>\n<h3 id=\"邻信道干扰\"><a href=\"#邻信道干扰\" class=\"headerlink\" title=\"邻信道干扰\"></a>邻信道干扰</h3><p>用于描述信道复用设计不当导致的频率空间重叠。</p>\n<h3 id=\"吞吐量与带宽\"><a href=\"#吞吐量与带宽\" class=\"headerlink\" title=\"吞吐量与带宽\"></a>吞吐量与带宽</h3><p>影响数据吞吐量的因素有：</p>\n<blockquote>\n<p>带宽<br>数据编码<br>调制<br>介质争用<br>加密</p>\n</blockquote>\n<p>数据编码和调制方式决定了数据速率，数据速率有时又称为数据带宽。<br>例如：<br>802.11a OFDM无线接口能以6，9，12，18，24，36，48，54Mbps的速率传输数据，但所有的U-NII信道的频率带宽相同，速率不同时由<br>数据编码和调试方式不同。</p>\n<p>802.11网络采用带冲突避免的载波监听多路访问（CSMA/CA）作为介质访问方式，以确保在任何给定的时间，只有一台无线设备可以使用介质传输数据。</p>\n<p>802.11 a/b/g实际数总吞吐量一般不会超过数据速率的50%；  CSMA/CA 产生的介质争用开销通常为带宽的50%<br>802.11 n/ac传输，实际吞吐量为数据速率的60%~70%；  CSMA/CA 产生的介质争用开销通常为带宽的35%</p>\n<p>RTS/CTS 机制也会增加通信开销，影响系统吞吐量。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"2-4GHz信道\"><a href=\"#2-4GHz信道\" class=\"headerlink\" title=\"2.4GHz信道\"></a>2.4GHz信道</h3><p>IEEE将2.4GHz ISM频段划分为14条独立的信道。</p>\n<p>Table-2.4GHz信道规划</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">信道编号</th>\n<th style=\"text-align:center\">中心频率(GHz)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">2.412</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">2.417</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">2.422</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">2.427</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">2.432</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">2.437</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">2.442</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">2.447</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">2.452</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10</td>\n<td style=\"text-align:center\">2.457</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">11</td>\n<td style=\"text-align:center\">2.462</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">12</td>\n<td style=\"text-align:center\">2.467</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">13</td>\n<td style=\"text-align:center\">2.472</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">14</td>\n<td style=\"text-align:center\"><strong>2.484</strong></td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>802.11 DSSS 和 802.11 HR-DSSS使用的是22MHz的信道<br>信道中心频率间隔5MHz<br>OFDM技术使用的是20MHz的信道带宽。<br>2.4G一般有三个不重叠信道：1，6，11   或 2,7,12 或 3，8，13</p>\n<h3 id=\"5GHz信道\"><a href=\"#5GHz信道\" class=\"headerlink\" title=\"5GHz信道\"></a>5GHz信道</h3><p>信道中心频率 = 信道编号 X 5 + 5000<br>例如：<br>36 X 5 + 5000 = 5180MHz</p>\n<p><strong>5GHz 信道</strong><br>36，40，44，48，52，56，60，64，100，104，108，112，116，120，124，128，132，136，140，144，149，153，157，161，165，，169，173，177，181</p>\n<h3 id=\"非重叠信道\"><a href=\"#非重叠信道\" class=\"headerlink\" title=\"非重叠信道\"></a>非重叠信道</h3><p>802.11 DSSS信道中心频率必须相隔30MHz，认为互不重叠；<br>802.11b HR-DSSS和 802.11g ERP信道中心频率必须相隔25MHz认为互不重叠；<br>5G OFDM信道中心频率之间必须相关20MHz，认为互不重叠；</p>\n<h3 id=\"邻信道干扰\"><a href=\"#邻信道干扰\" class=\"headerlink\" title=\"邻信道干扰\"></a>邻信道干扰</h3><p>用于描述信道复用设计不当导致的频率空间重叠。</p>\n<h3 id=\"吞吐量与带宽\"><a href=\"#吞吐量与带宽\" class=\"headerlink\" title=\"吞吐量与带宽\"></a>吞吐量与带宽</h3><p>影响数据吞吐量的因素有：</p>\n<blockquote>\n<p>带宽<br>数据编码<br>调制<br>介质争用<br>加密</p>\n</blockquote>\n<p>数据编码和调制方式决定了数据速率，数据速率有时又称为数据带宽。<br>例如：<br>802.11a OFDM无线接口能以6，9，12，18，24，36，48，54Mbps的速率传输数据，但所有的U-NII信道的频率带宽相同，速率不同时由<br>数据编码和调试方式不同。</p>\n<p>802.11网络采用带冲突避免的载波监听多路访问（CSMA/CA）作为介质访问方式，以确保在任何给定的时间，只有一台无线设备可以使用介质传输数据。</p>\n<p>802.11 a/b/g实际数总吞吐量一般不会超过数据速率的50%；  CSMA/CA 产生的介质争用开销通常为带宽的50%<br>802.11 n/ac传输，实际吞吐量为数据速率的60%~70%；  CSMA/CA 产生的介质争用开销通常为带宽的35%</p>\n<p>RTS/CTS 机制也会增加通信开销，影响系统吞吐量。</p>\n"},{"title":"CWNA：射频组件、度量与数学计算","date":"2022-01-11T06:47:12.000Z","_content":"射频组件\n> 发射机\n> 天线\n> 接收机\n> 有意辐射器\n> 等效全向辐射功率\n\n功率单位与比较单位\n> 瓦特\n> 毫瓦\n> 分贝\n> 各向同性分贝\n> 偶极子分贝\n> 毫瓦分贝\n> 平方反比定律\n\n射频数学计算\n> 10与3规则\n> 射频数学计算小结\n\n本地噪声\n信噪比\n信干比\n接收信号强度指示\n链路预算\n衰落裕度/系统运行裕度\n\n通信的三项基本要求：\n> 两台或多台设备要求通信\n> 必须存在某种通信介质、手段或方法\n> 必须遵守一系列通信规则\n\n### 射频组件\n**发射机**\n计算机将数据传送给发射机，由发射机启动射频通信过程。\n\n**天线**\n通信系统中天线具备两种功能。\n与发射机相连，天线收集发射机传送的交流信号，并以特定于天线类型的模式将射频波引导或辐射出去。\n与接收机相连，天线捕捉空中的射频波，并以交流信号引导至接收机，在由接收机转换为比特和字节。\n\n增加天线功率输出的两种方法：\n增加发射机的输出功率\n引导或聚焦天线辐射出去的射频信号。\n\n**接收机**\n接收机获取天线收到的载波信号，并将已调信号转换为1和0，然后将数据交由计算机处理。\n\n**有意辐射器**\n发射机与天线之间的任何设备构成。IR的功率在提供天线输入的连接器处测定。\n\n**等效全向辐射功率**\n特定天线辐射出去的最大射频信号的强度。\n\n### 功率单位与比较单位\n覆盖和性能是802.11无线网络设计中的两个重要因素，切实掌握射频功率、比较单位与射频数学计算对于网络设计大有裨益。\n功率单位（绝对值）\n> 瓦特(W)\n> 毫瓦(mW)\n> 毫瓦分贝(dBm)\n\n比较单位(相对值)\n> 分贝(dB)\n> 各向同性分贝(dBi)\n> 偶极子分贝(dBd)\n\n**瓦特**\n瓦特(W)是基本的功率单位，得名于18世纪的苏格兰发明家詹姆斯·瓦特。\n**毫瓦**\n千分之一瓦。\n多数市内802.11设备的发射功率介于1mW和100mW之间。\n\n**分贝**\n分贝是比较单位而非功率单位，用于描述两个值之间的差异。\n$ B = log10(P1/P2) $\n$ dB = 10log10(P1/P2) $\n\n由于分贝在描述信号衰减和增益的时候比瓦特和毫瓦方便很多，因而广泛采用分贝描述。\n\n**各向同性分贝**\n与各项同性辐射器产生的功率相比，天线的功率增益称为各项同性分贝(dBi)\ndBi是天线增益的度量。\n\n**偶极子分贝**\ndBd描述某幅天线相对于偶极子天线信号的增益。\n\n**毫瓦分贝**\ndBm描述相对于1mW的分贝。\n$0dBm = 1mW$\n$20dBm = 100mW$\n\n由于自由空间路径损耗的影响，接收信号总是低于1mW. 即便极强的接收信号，功率也只有-40dBm,也就是0.0001mW(1mW的万分之一)\n大多数无线接口可以解析从-30dBm ~ -100dBm的接收信号。\n\n**平方反比定律**\n功率变化与距离变化的平方成反比。\n$$ 自由空间路径损耗 = 36.6 + 20xlog10(f) + 20xlog10(d)$$\n从该公式可知，距离越远损耗越大，频率越高损耗越大。\n\n（未完待续...)\n\n","source":"_posts/CWNA：射频组件、度量与数学计算.md","raw":"---\ntitle: CWNA：射频组件、度量与数学计算\ndate: 2022-01-11 14:47:12\ntags: 'Wi-Fi'\n---\n射频组件\n> 发射机\n> 天线\n> 接收机\n> 有意辐射器\n> 等效全向辐射功率\n\n功率单位与比较单位\n> 瓦特\n> 毫瓦\n> 分贝\n> 各向同性分贝\n> 偶极子分贝\n> 毫瓦分贝\n> 平方反比定律\n\n射频数学计算\n> 10与3规则\n> 射频数学计算小结\n\n本地噪声\n信噪比\n信干比\n接收信号强度指示\n链路预算\n衰落裕度/系统运行裕度\n\n通信的三项基本要求：\n> 两台或多台设备要求通信\n> 必须存在某种通信介质、手段或方法\n> 必须遵守一系列通信规则\n\n### 射频组件\n**发射机**\n计算机将数据传送给发射机，由发射机启动射频通信过程。\n\n**天线**\n通信系统中天线具备两种功能。\n与发射机相连，天线收集发射机传送的交流信号，并以特定于天线类型的模式将射频波引导或辐射出去。\n与接收机相连，天线捕捉空中的射频波，并以交流信号引导至接收机，在由接收机转换为比特和字节。\n\n增加天线功率输出的两种方法：\n增加发射机的输出功率\n引导或聚焦天线辐射出去的射频信号。\n\n**接收机**\n接收机获取天线收到的载波信号，并将已调信号转换为1和0，然后将数据交由计算机处理。\n\n**有意辐射器**\n发射机与天线之间的任何设备构成。IR的功率在提供天线输入的连接器处测定。\n\n**等效全向辐射功率**\n特定天线辐射出去的最大射频信号的强度。\n\n### 功率单位与比较单位\n覆盖和性能是802.11无线网络设计中的两个重要因素，切实掌握射频功率、比较单位与射频数学计算对于网络设计大有裨益。\n功率单位（绝对值）\n> 瓦特(W)\n> 毫瓦(mW)\n> 毫瓦分贝(dBm)\n\n比较单位(相对值)\n> 分贝(dB)\n> 各向同性分贝(dBi)\n> 偶极子分贝(dBd)\n\n**瓦特**\n瓦特(W)是基本的功率单位，得名于18世纪的苏格兰发明家詹姆斯·瓦特。\n**毫瓦**\n千分之一瓦。\n多数市内802.11设备的发射功率介于1mW和100mW之间。\n\n**分贝**\n分贝是比较单位而非功率单位，用于描述两个值之间的差异。\n$ B = log10(P1/P2) $\n$ dB = 10log10(P1/P2) $\n\n由于分贝在描述信号衰减和增益的时候比瓦特和毫瓦方便很多，因而广泛采用分贝描述。\n\n**各向同性分贝**\n与各项同性辐射器产生的功率相比，天线的功率增益称为各项同性分贝(dBi)\ndBi是天线增益的度量。\n\n**偶极子分贝**\ndBd描述某幅天线相对于偶极子天线信号的增益。\n\n**毫瓦分贝**\ndBm描述相对于1mW的分贝。\n$0dBm = 1mW$\n$20dBm = 100mW$\n\n由于自由空间路径损耗的影响，接收信号总是低于1mW. 即便极强的接收信号，功率也只有-40dBm,也就是0.0001mW(1mW的万分之一)\n大多数无线接口可以解析从-30dBm ~ -100dBm的接收信号。\n\n**平方反比定律**\n功率变化与距离变化的平方成反比。\n$$ 自由空间路径损耗 = 36.6 + 20xlog10(f) + 20xlog10(d)$$\n从该公式可知，距离越远损耗越大，频率越高损耗越大。\n\n（未完待续...)\n\n","slug":"CWNA：射频组件、度量与数学计算","published":1,"updated":"2022-01-11T10:28:36.743Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632k000yh6fd95385zlf","content":"<p>射频组件</p>\n<blockquote>\n<p>发射机<br>天线<br>接收机<br>有意辐射器<br>等效全向辐射功率</p>\n</blockquote>\n<p>功率单位与比较单位</p>\n<blockquote>\n<p>瓦特<br>毫瓦<br>分贝<br>各向同性分贝<br>偶极子分贝<br>毫瓦分贝<br>平方反比定律</p>\n</blockquote>\n<p>射频数学计算</p>\n<blockquote>\n<p>10与3规则<br>射频数学计算小结</p>\n</blockquote>\n<p>本地噪声<br>信噪比<br>信干比<br>接收信号强度指示<br>链路预算<br>衰落裕度/系统运行裕度</p>\n<p>通信的三项基本要求：</p>\n<blockquote>\n<p>两台或多台设备要求通信<br>必须存在某种通信介质、手段或方法<br>必须遵守一系列通信规则</p>\n</blockquote>\n<h3 id=\"射频组件\"><a href=\"#射频组件\" class=\"headerlink\" title=\"射频组件\"></a>射频组件</h3><p><strong>发射机</strong><br>计算机将数据传送给发射机，由发射机启动射频通信过程。</p>\n<p><strong>天线</strong><br>通信系统中天线具备两种功能。<br>与发射机相连，天线收集发射机传送的交流信号，并以特定于天线类型的模式将射频波引导或辐射出去。<br>与接收机相连，天线捕捉空中的射频波，并以交流信号引导至接收机，在由接收机转换为比特和字节。</p>\n<p>增加天线功率输出的两种方法：<br>增加发射机的输出功率<br>引导或聚焦天线辐射出去的射频信号。</p>\n<p><strong>接收机</strong><br>接收机获取天线收到的载波信号，并将已调信号转换为1和0，然后将数据交由计算机处理。</p>\n<p><strong>有意辐射器</strong><br>发射机与天线之间的任何设备构成。IR的功率在提供天线输入的连接器处测定。</p>\n<p><strong>等效全向辐射功率</strong><br>特定天线辐射出去的最大射频信号的强度。</p>\n<h3 id=\"功率单位与比较单位\"><a href=\"#功率单位与比较单位\" class=\"headerlink\" title=\"功率单位与比较单位\"></a>功率单位与比较单位</h3><p>覆盖和性能是802.11无线网络设计中的两个重要因素，切实掌握射频功率、比较单位与射频数学计算对于网络设计大有裨益。<br>功率单位（绝对值）</p>\n<blockquote>\n<p>瓦特(W)<br>毫瓦(mW)<br>毫瓦分贝(dBm)</p>\n</blockquote>\n<p>比较单位(相对值)</p>\n<blockquote>\n<p>分贝(dB)<br>各向同性分贝(dBi)<br>偶极子分贝(dBd)</p>\n</blockquote>\n<p><strong>瓦特</strong><br>瓦特(W)是基本的功率单位，得名于18世纪的苏格兰发明家詹姆斯·瓦特。<br><strong>毫瓦</strong><br>千分之一瓦。<br>多数市内802.11设备的发射功率介于1mW和100mW之间。</p>\n<p><strong>分贝</strong><br>分贝是比较单位而非功率单位，用于描述两个值之间的差异。<br>$ B = log10(P1/P2) $<br>$ dB = 10log10(P1/P2) $</p>\n<p>由于分贝在描述信号衰减和增益的时候比瓦特和毫瓦方便很多，因而广泛采用分贝描述。</p>\n<p><strong>各向同性分贝</strong><br>与各项同性辐射器产生的功率相比，天线的功率增益称为各项同性分贝(dBi)<br>dBi是天线增益的度量。</p>\n<p><strong>偶极子分贝</strong><br>dBd描述某幅天线相对于偶极子天线信号的增益。</p>\n<p><strong>毫瓦分贝</strong><br>dBm描述相对于1mW的分贝。<br>$0dBm = 1mW$<br>$20dBm = 100mW$</p>\n<p>由于自由空间路径损耗的影响，接收信号总是低于1mW. 即便极强的接收信号，功率也只有-40dBm,也就是0.0001mW(1mW的万分之一)<br>大多数无线接口可以解析从-30dBm ~ -100dBm的接收信号。</p>\n<p><strong>平方反比定律</strong><br>功率变化与距离变化的平方成反比。</p>\n<script type=\"math/tex; mode=display\">自由空间路径损耗 = 36.6 + 20xlog10(f) + 20xlog10(d)</script><p>从该公式可知，距离越远损耗越大，频率越高损耗越大。</p>\n<p>（未完待续…)</p>\n","site":{"data":{}},"excerpt":"","more":"<p>射频组件</p>\n<blockquote>\n<p>发射机<br>天线<br>接收机<br>有意辐射器<br>等效全向辐射功率</p>\n</blockquote>\n<p>功率单位与比较单位</p>\n<blockquote>\n<p>瓦特<br>毫瓦<br>分贝<br>各向同性分贝<br>偶极子分贝<br>毫瓦分贝<br>平方反比定律</p>\n</blockquote>\n<p>射频数学计算</p>\n<blockquote>\n<p>10与3规则<br>射频数学计算小结</p>\n</blockquote>\n<p>本地噪声<br>信噪比<br>信干比<br>接收信号强度指示<br>链路预算<br>衰落裕度/系统运行裕度</p>\n<p>通信的三项基本要求：</p>\n<blockquote>\n<p>两台或多台设备要求通信<br>必须存在某种通信介质、手段或方法<br>必须遵守一系列通信规则</p>\n</blockquote>\n<h3 id=\"射频组件\"><a href=\"#射频组件\" class=\"headerlink\" title=\"射频组件\"></a>射频组件</h3><p><strong>发射机</strong><br>计算机将数据传送给发射机，由发射机启动射频通信过程。</p>\n<p><strong>天线</strong><br>通信系统中天线具备两种功能。<br>与发射机相连，天线收集发射机传送的交流信号，并以特定于天线类型的模式将射频波引导或辐射出去。<br>与接收机相连，天线捕捉空中的射频波，并以交流信号引导至接收机，在由接收机转换为比特和字节。</p>\n<p>增加天线功率输出的两种方法：<br>增加发射机的输出功率<br>引导或聚焦天线辐射出去的射频信号。</p>\n<p><strong>接收机</strong><br>接收机获取天线收到的载波信号，并将已调信号转换为1和0，然后将数据交由计算机处理。</p>\n<p><strong>有意辐射器</strong><br>发射机与天线之间的任何设备构成。IR的功率在提供天线输入的连接器处测定。</p>\n<p><strong>等效全向辐射功率</strong><br>特定天线辐射出去的最大射频信号的强度。</p>\n<h3 id=\"功率单位与比较单位\"><a href=\"#功率单位与比较单位\" class=\"headerlink\" title=\"功率单位与比较单位\"></a>功率单位与比较单位</h3><p>覆盖和性能是802.11无线网络设计中的两个重要因素，切实掌握射频功率、比较单位与射频数学计算对于网络设计大有裨益。<br>功率单位（绝对值）</p>\n<blockquote>\n<p>瓦特(W)<br>毫瓦(mW)<br>毫瓦分贝(dBm)</p>\n</blockquote>\n<p>比较单位(相对值)</p>\n<blockquote>\n<p>分贝(dB)<br>各向同性分贝(dBi)<br>偶极子分贝(dBd)</p>\n</blockquote>\n<p><strong>瓦特</strong><br>瓦特(W)是基本的功率单位，得名于18世纪的苏格兰发明家詹姆斯·瓦特。<br><strong>毫瓦</strong><br>千分之一瓦。<br>多数市内802.11设备的发射功率介于1mW和100mW之间。</p>\n<p><strong>分贝</strong><br>分贝是比较单位而非功率单位，用于描述两个值之间的差异。<br>$ B = log10(P1/P2) $<br>$ dB = 10log10(P1/P2) $</p>\n<p>由于分贝在描述信号衰减和增益的时候比瓦特和毫瓦方便很多，因而广泛采用分贝描述。</p>\n<p><strong>各向同性分贝</strong><br>与各项同性辐射器产生的功率相比，天线的功率增益称为各项同性分贝(dBi)<br>dBi是天线增益的度量。</p>\n<p><strong>偶极子分贝</strong><br>dBd描述某幅天线相对于偶极子天线信号的增益。</p>\n<p><strong>毫瓦分贝</strong><br>dBm描述相对于1mW的分贝。<br>$0dBm = 1mW$<br>$20dBm = 100mW$</p>\n<p>由于自由空间路径损耗的影响，接收信号总是低于1mW. 即便极强的接收信号，功率也只有-40dBm,也就是0.0001mW(1mW的万分之一)<br>大多数无线接口可以解析从-30dBm ~ -100dBm的接收信号。</p>\n<p><strong>平方反比定律</strong><br>功率变化与距离变化的平方成反比。</p>\n<script type=\"math/tex; mode=display\">自由空间路径损耗 = 36.6 + 20xlog10(f) + 20xlog10(d)</script><p>从该公式可知，距离越远损耗越大，频率越高损耗越大。</p>\n<p>（未完待续…)</p>\n"},{"title":"Step by step to build personal blog.","date":"2021-12-08T15:48:18.000Z","_content":"## OS:ubuntu\n1.https://nodejs.org/en/ 下载nodejs\n2.解压下载的nodejs\n``` bash\n$ tar -xvf node-v16.13.1-linux-x64.tar.xz\n```\n3.配置nodejs\n``` bash\n$ cp node-v16.13.1-linux-x64 ~/nodejs\n$ sudo ln -s ~/nodejs/bin/npm /usr/bin/\n$ sudo ln -s ~/nodejs/bin/npm /usr/bin/\n```\n4.安装cnpm\n``` bash\n$ sudo npm install -g cnpm --registry=https://registry.npm.taobao.org\n$ sudo ln -s ~/nodejs/bin/cnpm /usr/bin/\n```\n\n5.安装hexo\n``` bash\n$ cnpm install -g hexo-cli\n$ sudo ln -s ~/nodejs/bin/hexo /usr/bin/\n```\n\n6.创建目录\n``` bash\n$ mkdir blog\n$ cd blog\n```\n\n7.生成博客\n``` bash\n$ hexo init\n```\n\n8.启动博客\n``` bash\n$ hexo s\n```\n\n9.浏览器打开本地预览\n> http://localhost:4000\n\n10.清理\n``` bash\n$ hexo clean\n```\n\n11.生成博客\n``` bash\n$ hexo g\n$ hexo s\n```\n\n12.浏览器打开\n> http://localhost:4000 \n\n13.安装部署工具\n``` bash\n$ cnpm install --save hexo-deployer-git\n```\n\n14.修改配置用于部署\n> 在__config.yml最后添加：\n    deploy:\n    type: git\n    repo: https://github.com/nld2019/nld2019.github.io.git\n    branch: master\n\n15.部署博客\n``` bash\n$ hexo d\n```\n\n16.根据仓库名称访问博客\n> https://nld2019.github.io/\n","source":"_posts/Step-by-step-to-build-personal-blog.md","raw":"---\ntitle: Step by step to build personal blog.\ndate: 2021-12-08 23:48:18\ntags:\n---\n## OS:ubuntu\n1.https://nodejs.org/en/ 下载nodejs\n2.解压下载的nodejs\n``` bash\n$ tar -xvf node-v16.13.1-linux-x64.tar.xz\n```\n3.配置nodejs\n``` bash\n$ cp node-v16.13.1-linux-x64 ~/nodejs\n$ sudo ln -s ~/nodejs/bin/npm /usr/bin/\n$ sudo ln -s ~/nodejs/bin/npm /usr/bin/\n```\n4.安装cnpm\n``` bash\n$ sudo npm install -g cnpm --registry=https://registry.npm.taobao.org\n$ sudo ln -s ~/nodejs/bin/cnpm /usr/bin/\n```\n\n5.安装hexo\n``` bash\n$ cnpm install -g hexo-cli\n$ sudo ln -s ~/nodejs/bin/hexo /usr/bin/\n```\n\n6.创建目录\n``` bash\n$ mkdir blog\n$ cd blog\n```\n\n7.生成博客\n``` bash\n$ hexo init\n```\n\n8.启动博客\n``` bash\n$ hexo s\n```\n\n9.浏览器打开本地预览\n> http://localhost:4000\n\n10.清理\n``` bash\n$ hexo clean\n```\n\n11.生成博客\n``` bash\n$ hexo g\n$ hexo s\n```\n\n12.浏览器打开\n> http://localhost:4000 \n\n13.安装部署工具\n``` bash\n$ cnpm install --save hexo-deployer-git\n```\n\n14.修改配置用于部署\n> 在__config.yml最后添加：\n    deploy:\n    type: git\n    repo: https://github.com/nld2019/nld2019.github.io.git\n    branch: master\n\n15.部署博客\n``` bash\n$ hexo d\n```\n\n16.根据仓库名称访问博客\n> https://nld2019.github.io/\n","slug":"Step-by-step-to-build-personal-blog","published":1,"updated":"2021-12-11T14:58:26.372Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632k0010h6fdapr17e02","content":"<h2 id=\"OS-ubuntu\"><a href=\"#OS-ubuntu\" class=\"headerlink\" title=\"OS:ubuntu\"></a>OS:ubuntu</h2><p>1.<a href=\"https://nodejs.org/en/\">https://nodejs.org/en/</a> 下载nodejs<br>2.解压下载的nodejs<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar -xvf node-v16.13.1-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><br>3.配置nodejs<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp node-v16.13.1-linux-x64 ~/nodejs</span><br><span class=\"line\">$ sudo ln -s ~/nodejs/bin/npm /usr/bin/</span><br><span class=\"line\">$ sudo ln -s ~/nodejs/bin/npm /usr/bin/</span><br></pre></td></tr></table></figure><br>4.安装cnpm<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">$ sudo ln -s ~/nodejs/bin/cnpm /usr/bin/</span><br></pre></td></tr></table></figure></p>\n<p>5.安装hexo<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cnpm install -g hexo-cli</span><br><span class=\"line\">$ sudo ln -s ~/nodejs/bin/hexo /usr/bin/</span><br></pre></td></tr></table></figure></p>\n<p>6.创建目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir blog</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> blog</span><br></pre></td></tr></table></figure></p>\n<p>7.生成博客<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init</span><br></pre></td></tr></table></figure></p>\n<p>8.启动博客<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure></p>\n<p>9.浏览器打开本地预览</p>\n<blockquote>\n<p><a href=\"http://localhost:4000\">http://localhost:4000</a></p>\n</blockquote>\n<p>10.清理<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure></p>\n<p>11.生成博客<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure></p>\n<p>12.浏览器打开</p>\n<blockquote>\n<p><a href=\"http://localhost:4000\">http://localhost:4000</a> </p>\n</blockquote>\n<p>13.安装部署工具<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></p>\n<p>14.修改配置用于部署</p>\n<blockquote>\n<p>在__config.yml最后添加：<br>    deploy:<br>    type: git<br>    repo: <a href=\"https://github.com/nld2019/nld2019.github.io.git\">https://github.com/nld2019/nld2019.github.io.git</a><br>    branch: master</p>\n</blockquote>\n<p>15.部署博客<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure></p>\n<p>16.根据仓库名称访问博客</p>\n<blockquote>\n<p><a href=\"https://nld2019.github.io/\">https://nld2019.github.io/</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"OS-ubuntu\"><a href=\"#OS-ubuntu\" class=\"headerlink\" title=\"OS:ubuntu\"></a>OS:ubuntu</h2><p>1.<a href=\"https://nodejs.org/en/\">https://nodejs.org/en/</a> 下载nodejs<br>2.解压下载的nodejs<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar -xvf node-v16.13.1-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><br>3.配置nodejs<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cp node-v16.13.1-linux-x64 ~/nodejs</span><br><span class=\"line\">$ sudo ln -s ~/nodejs/bin/npm /usr/bin/</span><br><span class=\"line\">$ sudo ln -s ~/nodejs/bin/npm /usr/bin/</span><br></pre></td></tr></table></figure><br>4.安装cnpm<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class=\"line\">$ sudo ln -s ~/nodejs/bin/cnpm /usr/bin/</span><br></pre></td></tr></table></figure></p>\n<p>5.安装hexo<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cnpm install -g hexo-cli</span><br><span class=\"line\">$ sudo ln -s ~/nodejs/bin/hexo /usr/bin/</span><br></pre></td></tr></table></figure></p>\n<p>6.创建目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir blog</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> blog</span><br></pre></td></tr></table></figure></p>\n<p>7.生成博客<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init</span><br></pre></td></tr></table></figure></p>\n<p>8.启动博客<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure></p>\n<p>9.浏览器打开本地预览</p>\n<blockquote>\n<p><a href=\"http://localhost:4000\">http://localhost:4000</a></p>\n</blockquote>\n<p>10.清理<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure></p>\n<p>11.生成博客<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br><span class=\"line\">$ hexo s</span><br></pre></td></tr></table></figure></p>\n<p>12.浏览器打开</p>\n<blockquote>\n<p><a href=\"http://localhost:4000\">http://localhost:4000</a> </p>\n</blockquote>\n<p>13.安装部署工具<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></p>\n<p>14.修改配置用于部署</p>\n<blockquote>\n<p>在__config.yml最后添加：<br>    deploy:<br>    type: git<br>    repo: <a href=\"https://github.com/nld2019/nld2019.github.io.git\">https://github.com/nld2019/nld2019.github.io.git</a><br>    branch: master</p>\n</blockquote>\n<p>15.部署博客<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure></p>\n<p>16.根据仓库名称访问博客</p>\n<blockquote>\n<p><a href=\"https://nld2019.github.io/\">https://nld2019.github.io/</a></p>\n</blockquote>\n"},{"title":"SVN服务仓库搭建记录","date":"2021-12-16T15:41:15.000Z","_content":"## 目标\n在ubuntu上搭建SVN仓库，通过windows访问仓库以记录和管理文档。\n\n## 步骤\n1.检查ubuntu是否已经安装SVN工具\n``` bash\n$ svn --version\n```\n2.如果没有SVN则安装SVN工具\n``` bash\n$ sudo apt install subversion\n```\n3.再次检查SVN\n``` bash\n$ svn --version\nsvn, version 1.9.7 (r1800392)\n   compiled Mar 28 2018, 08:49:13 on x86_64-pc-linux-gnu\n   ......\n```\n4.创建SVN仓库测试目录\n``` bash\n$ mkdir test\n$ cd test/\n$ mkdir svn\n$ cd svn/\n```\n5.创建第一个SVN仓库，取名为repo1\n``` bash\n$ svnadmin create ~/work/test/svn/repo1\n$ ls\nrepo1\n$ cd repo1/\n$ ls\nconf  db  format  hooks  locks  README.txt\n```\n\n6.进入仓库配置目录\n``` bash\n$ cd conf/\n$ ls\nauthz  hooks-env.tmpl  passwd  svnserve.conf\n```\n\n7.配置仓库\n> $ 修改文件svnserve.conf以设置以下选项 \n  anon-access = none\n  auth-access = write\n  password-db = passwd\n  authz-db = authz\n  realm = My First Repository\n\n8.修改文件passwod,以配置访问密码\n> //配置用户名为admin,等号右边为admin密码\n  [users]\n  admin = admin\n\n9.修改文件authz,以配置访问权限和路径\n> [groups]\n  g_admin = admin\n>  \n  [/]\n  @g_admin = rw\n> \\* = r\n\n10.启动SVN服务,即可通过 svn://192.168.0.110/repo1使用仓库\n``` bash\n$ pwd\n~/work/test/svn\n$ ifconfig获取IP地址为: 192.168.0.110\n```\n\n11.在windows上安装TortoiseSVN\n12.通过安装的TortoiseSVN工具访问SVN仓库\n> 首次使用示例\n  1)创建test文件夹\n  2)鼠标右键->TortoiseSVN->Repo-broswer\n  3)输入仓库地址 svn://192.168.0.110/repo1\n  4)输入账号登陆即可浏览仓库\n  5)也可以鼠标右键->SVN checkout...到本地文件夹\n  6)更新仓库到最新，修改文件，提交文件到远程仓库\n\n\n## 后记\n今天状态不好，错误的修改了文档，发现不好恢复到原始模样，所以记录一下SVN版本控制工具。\n","source":"_posts/SVN服务仓库搭建记录.md","raw":"---\ntitle: SVN服务仓库搭建记录\ndate: 2021-12-16 23:41:15\ntags:\n---\n## 目标\n在ubuntu上搭建SVN仓库，通过windows访问仓库以记录和管理文档。\n\n## 步骤\n1.检查ubuntu是否已经安装SVN工具\n``` bash\n$ svn --version\n```\n2.如果没有SVN则安装SVN工具\n``` bash\n$ sudo apt install subversion\n```\n3.再次检查SVN\n``` bash\n$ svn --version\nsvn, version 1.9.7 (r1800392)\n   compiled Mar 28 2018, 08:49:13 on x86_64-pc-linux-gnu\n   ......\n```\n4.创建SVN仓库测试目录\n``` bash\n$ mkdir test\n$ cd test/\n$ mkdir svn\n$ cd svn/\n```\n5.创建第一个SVN仓库，取名为repo1\n``` bash\n$ svnadmin create ~/work/test/svn/repo1\n$ ls\nrepo1\n$ cd repo1/\n$ ls\nconf  db  format  hooks  locks  README.txt\n```\n\n6.进入仓库配置目录\n``` bash\n$ cd conf/\n$ ls\nauthz  hooks-env.tmpl  passwd  svnserve.conf\n```\n\n7.配置仓库\n> $ 修改文件svnserve.conf以设置以下选项 \n  anon-access = none\n  auth-access = write\n  password-db = passwd\n  authz-db = authz\n  realm = My First Repository\n\n8.修改文件passwod,以配置访问密码\n> //配置用户名为admin,等号右边为admin密码\n  [users]\n  admin = admin\n\n9.修改文件authz,以配置访问权限和路径\n> [groups]\n  g_admin = admin\n>  \n  [/]\n  @g_admin = rw\n> \\* = r\n\n10.启动SVN服务,即可通过 svn://192.168.0.110/repo1使用仓库\n``` bash\n$ pwd\n~/work/test/svn\n$ ifconfig获取IP地址为: 192.168.0.110\n```\n\n11.在windows上安装TortoiseSVN\n12.通过安装的TortoiseSVN工具访问SVN仓库\n> 首次使用示例\n  1)创建test文件夹\n  2)鼠标右键->TortoiseSVN->Repo-broswer\n  3)输入仓库地址 svn://192.168.0.110/repo1\n  4)输入账号登陆即可浏览仓库\n  5)也可以鼠标右键->SVN checkout...到本地文件夹\n  6)更新仓库到最新，修改文件，提交文件到远程仓库\n\n\n## 后记\n今天状态不好，错误的修改了文档，发现不好恢复到原始模样，所以记录一下SVN版本控制工具。\n","slug":"SVN服务仓库搭建记录","published":1,"updated":"2021-12-17T07:16:12.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632l0012h6fdhl1a63cq","content":"<h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><p>在ubuntu上搭建SVN仓库，通过windows访问仓库以记录和管理文档。</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>1.检查ubuntu是否已经安装SVN工具<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ svn --version</span><br></pre></td></tr></table></figure><br>2.如果没有SVN则安装SVN工具<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install subversion</span><br></pre></td></tr></table></figure><br>3.再次检查SVN<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ svn --version</span><br><span class=\"line\">svn, version 1.9.7 (r1800392)</span><br><span class=\"line\">   compiled Mar 28 2018, 08:49:13 on x86_64-pc-linux-gnu</span><br><span class=\"line\">   ......</span><br></pre></td></tr></table></figure><br>4.创建SVN仓库测试目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir <span class=\"built_in\">test</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"built_in\">test</span>/</span><br><span class=\"line\">$ mkdir svn</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> svn/</span><br></pre></td></tr></table></figure><br>5.创建第一个SVN仓库，取名为repo1<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ svnadmin create ~/work/<span class=\"built_in\">test</span>/svn/repo1</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">repo1</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> repo1/</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">conf  db  format  hooks  locks  README.txt</span><br></pre></td></tr></table></figure></p>\n<p>6.进入仓库配置目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> conf/</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">authz  hooks-env.tmpl  passwd  svnserve.conf</span><br></pre></td></tr></table></figure></p>\n<p>7.配置仓库</p>\n<blockquote>\n<p>$ 修改文件svnserve.conf以设置以下选项<br>  anon-access = none<br>  auth-access = write<br>  password-db = passwd<br>  authz-db = authz<br>  realm = My First Repository</p>\n</blockquote>\n<p>8.修改文件passwod,以配置访问密码</p>\n<blockquote>\n<p>//配置用户名为admin,等号右边为admin密码<br>  [users]<br>  admin = admin</p>\n</blockquote>\n<p>9.修改文件authz,以配置访问权限和路径</p>\n<blockquote>\n<p>[groups]<br>  g_admin = admin</p>\n<p>  [/]<br>  @g_admin = rw<br>* = r</p>\n</blockquote>\n<p>10.启动SVN服务,即可通过 svn://192.168.0.110/repo1使用仓库<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">pwd</span></span><br><span class=\"line\">~/work/<span class=\"built_in\">test</span>/svn</span><br><span class=\"line\">$ ifconfig获取IP地址为: 192.168.0.110</span><br></pre></td></tr></table></figure></p>\n<p>11.在windows上安装TortoiseSVN<br>12.通过安装的TortoiseSVN工具访问SVN仓库</p>\n<blockquote>\n<p>首次使用示例<br>  1)创建test文件夹<br>  2)鼠标右键-&gt;TortoiseSVN-&gt;Repo-broswer<br>  3)输入仓库地址 svn://192.168.0.110/repo1<br>  4)输入账号登陆即可浏览仓库<br>  5)也可以鼠标右键-&gt;SVN checkout…到本地文件夹<br>  6)更新仓库到最新，修改文件，提交文件到远程仓库</p>\n</blockquote>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>今天状态不好，错误的修改了文档，发现不好恢复到原始模样，所以记录一下SVN版本控制工具。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><p>在ubuntu上搭建SVN仓库，通过windows访问仓库以记录和管理文档。</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>1.检查ubuntu是否已经安装SVN工具<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ svn --version</span><br></pre></td></tr></table></figure><br>2.如果没有SVN则安装SVN工具<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt install subversion</span><br></pre></td></tr></table></figure><br>3.再次检查SVN<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ svn --version</span><br><span class=\"line\">svn, version 1.9.7 (r1800392)</span><br><span class=\"line\">   compiled Mar 28 2018, 08:49:13 on x86_64-pc-linux-gnu</span><br><span class=\"line\">   ......</span><br></pre></td></tr></table></figure><br>4.创建SVN仓库测试目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir <span class=\"built_in\">test</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> <span class=\"built_in\">test</span>/</span><br><span class=\"line\">$ mkdir svn</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> svn/</span><br></pre></td></tr></table></figure><br>5.创建第一个SVN仓库，取名为repo1<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ svnadmin create ~/work/<span class=\"built_in\">test</span>/svn/repo1</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">repo1</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> repo1/</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">conf  db  format  hooks  locks  README.txt</span><br></pre></td></tr></table></figure></p>\n<p>6.进入仓库配置目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> conf/</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">authz  hooks-env.tmpl  passwd  svnserve.conf</span><br></pre></td></tr></table></figure></p>\n<p>7.配置仓库</p>\n<blockquote>\n<p>$ 修改文件svnserve.conf以设置以下选项<br>  anon-access = none<br>  auth-access = write<br>  password-db = passwd<br>  authz-db = authz<br>  realm = My First Repository</p>\n</blockquote>\n<p>8.修改文件passwod,以配置访问密码</p>\n<blockquote>\n<p>//配置用户名为admin,等号右边为admin密码<br>  [users]<br>  admin = admin</p>\n</blockquote>\n<p>9.修改文件authz,以配置访问权限和路径</p>\n<blockquote>\n<p>[groups]<br>  g_admin = admin</p>\n<p>  [/]<br>  @g_admin = rw<br>* = r</p>\n</blockquote>\n<p>10.启动SVN服务,即可通过 svn://192.168.0.110/repo1使用仓库<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">pwd</span></span><br><span class=\"line\">~/work/<span class=\"built_in\">test</span>/svn</span><br><span class=\"line\">$ ifconfig获取IP地址为: 192.168.0.110</span><br></pre></td></tr></table></figure></p>\n<p>11.在windows上安装TortoiseSVN<br>12.通过安装的TortoiseSVN工具访问SVN仓库</p>\n<blockquote>\n<p>首次使用示例<br>  1)创建test文件夹<br>  2)鼠标右键-&gt;TortoiseSVN-&gt;Repo-broswer<br>  3)输入仓库地址 svn://192.168.0.110/repo1<br>  4)输入账号登陆即可浏览仓库<br>  5)也可以鼠标右键-&gt;SVN checkout…到本地文件夹<br>  6)更新仓库到最新，修改文件，提交文件到远程仓库</p>\n</blockquote>\n<h2 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h2><p>今天状态不好，错误的修改了文档，发现不好恢复到原始模样，所以记录一下SVN版本控制工具。</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-12-11T14:58:26.373Z","updated":"2021-12-11T14:58:26.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632l0014h6fdbvx4g1gx","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"vim+cscope+ctags阅读源码","date":"2021-12-22T06:20:21.000Z","_content":"使用vim + cscope/ctags，就能够实现Source Insight的功能，可以很方便地查看分析源代码。\n\n关键词: vim, cscope, ctags, tags\n\n\n1.查看vim是否支持cscope\n> $ vim --version | grep cscope\n\n2.查看帮助\n> $ man cscope\n  $ man ctags\n  :help cscope (vim command)\n\n3.使用cscope[2]\n    当前目录有main.c，其中调用了cstest.c中的print()，此函数在cstest.h中进行了声明。\n    使用下面的命令生成代码的符号索引文件：\n    $ cscope -Rbkq\n    这个命令会生成三个文件：cscope.out, cscope.in.out, cscope.po.out。\n\n    其中cscope.out是基本的符号索引，后两个文件是使用\"-q\"选项生成的，可以加快cscope的索引速度。上面命令的参数含义如下：\n    -R: 在生成索引文件时，搜索子目录树中的代码\n    -b: 只生成索引文件，不进入cscope的界面\n    -k: 在生成索引文件时，不搜索/usr/include目录\n    -q: 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度\n    -i: 如果保存文件列表的文件名不是cscope.files时，需要加此选项告诉cscope到哪儿去找源文件列表。可以使用\"-\"，表示由标准输入获得文件列表。\n    -I dir: 在-I选项指出的目录中查找头文件\n    -u: 扫描所有文件，重新生成交叉索引文件\n    -C: 在搜索时忽略大小写\n    -P path: 在以相对路径表示的文件前加上的path，这样，你不用切换到你数据库文件所在的目录也可以使用它了。\n\n    在缺省情况下，cscope在生成数据库后就会进入它自己的查询界面，一般不用这个界面，所以使用了\"-b\"选项。如果已经进入了这个界面，按CTRL-D退出。\n\n\t查看阅读c++代码[3]\n    cscope缺省只解析C文件(.c和.h)、lex文件(.l)和yacc文件(.y)，虽然它也可以支持C++以及Java，但它在扫描目录时会跳过C++及Java后缀的文件。\n\t如果希望cscope解析C++或Java文件，需要把这些文件的名字和路径保存在一个名为cscope.files的文件。\n\t当cscope发现在当前目录中存在cscope.files时，就会为cscope.files中列出的所有文件生成索引数据库。\n    下面的命令会查找当前目录及子目录中所有后缀名为\".h\", \".c\", \"cc\"和\".cpp\"的文件，并把查找结果重定向到文件cscope.files中。\n\t然后cscope根据cscope.files中的所有文件，生成符号索引文件。最后一条命令使用ctags命令，\n\t生成一个tags文件，在vim中执行\":help tags\"命令查询它的用法。它可以和cscope一起使用。\n\n    $ find . -name \"*.h\" -o -name \"*.c\" -o -name \"*.cc\" -o \"*.cpp\" > cscope.files\n    $ cscope -bkq -i cscope.files\n    $ ctags -R\n\n    接下来可以在vim里浏览代码了\n    $ vim main.c\n    在vim里命令状态下添加符号索引库\n    : cscope add cscope.out\n    然后可以查看相应的函数定义或文件，ctrl+t返回。\n    : cscope find g print\n    : cscope find f cstest.h\n\n    #注意# 所生成的cscope.out和tags文件要在打开VIM所在的文件夹，否则VIM无法找到相关符号信息。\n\n\n4.创建相应的快捷键\n    将以下内容添加到~/.vimrc中，vim会自动加载当前目录下的符号索引cscope.out，可以使用ctrl+t、ctrl+]等。\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n    function UpdateCtags()\n         let curdir=getcwd()\n         while !filereadable(\"./tags\")\n             cd ..\n             if getcwd() == \"/\"\n                 break\n             endif\n         endwhile\n         if filewritable(\"./tags\")\n             :!ctags -R\n         endif\n         execute \":cd \" . curdir\n     endfunction\n    \n     function UpdateCStags()\n         let curdir=getcwd()\n         while !filereadable(\"./cscope.out\")\n             cd ..\n             if getcwd() == \"/\"\n                 break\n             endif\n         endwhile\n         if filewritable(\"./cscope.out\")\n             :!cscope -Rbq\n             execute \":cscope kill 0\"\n             execute \":cscope add cscope.out\"\n         endif\n         execute \":cd \" . curdir\n     endfunction\n    \n     nmap <F8> :call UpdateCtags()<CR>\n     nmap <F9> :call UpdateCStags()<CR>\n    \n     \" 这样就可以在更新源代码文件后，随时使用<F8>及<F9>更新tags及cscope.out文件，\n     \" 不必关闭编辑文件，执行ctags -R/cscope -Rbq及重新打开文件。\n    \n     if has(\"cscope\")\n     set cscopetag   \" 使支持用 Ctrl+]  和 Ctrl+t 快捷键在代码间跳来跳去\n     \" check cscope for definition of a symbol before checking ctags:\n     \" set to 1 if you want the reverse search order.\n     set csto=1\n    \n     \" add any cscope database in current directory\n     if filereadable(\"cscope.out\")\n     cs add cscope.out\n     \" else add the database pointed to by environment variable\n     elseif $CSCOPE_DB !=\"\"\n     cs add $CSCOPE_DB\n     endif\n    \n     \" show msg when any other cscope db added\n     set cscopeverbose\n    \n     nmap <C-\\>s :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>g :cs find g <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>c :cs find c <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>t :cs find t <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>e :cs find e <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>f :cs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n     nmap <C-\\>i :cs find i <C-R>=expand(\"<cfile>\")<CR><CR>\n     nmap <C-\\>d :cs find d <C-R>=expand(\"<cword>\")<CR><CR>\n     endif\n    \n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\t其中<C-/>g是先同时按ctrl+\\键，之后再按一个g。功能就是查看当前光标所在符号的定义。\n\n5.vim阅读代码\n    添加cscope符号索引数据库后，可以调用\"cscope find\"命令进行查找，vim支持8种cscope的查询功能。\n\t如在代码中查找调用work()函数的函数，可以在vim命令状态下输入\":cs find c work\"，回车即可。还可以进行字符串查找，\n\t它会对双引号或单引号括起来的内容查找。还可以输入一个正则表达式，这类似于egrep程序的功能。\n    :cs help (vim command下查询)\n\n    s: 查找C语言符号，即查找函数名、宏、枚举值等出现的地方\n    g: 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能\n    d: 查找本函数调用的函数\n    c: 查找调用本函数的函数\n    t: 查找指定的字符串\n    e: 查找egrep模式，相当于egrep功能，但查找速度快多了\n    f: 查找并打开文件，类似vim的find功能\n    i: 查找包含本文件的文件\n\n\n6.在vim中使用tags查找符号\n    查看ctags帮助\n    $ man ctags\n    :help ctags  (vim command)\n    :help tags   (vim command)\n\n    在源代码根目录下执行 ctags -R 命令用来为程序源代码生成标签文件，其-R选项表示递归操作，同时为子目录也生成标签文件。\n\tvim利用生成的标签文件，可以进行相应检索、并在不同的文件C语言元素之间来回切换。\n    $ ctags -R\n\n    A) vim中使用\":tag xxx\"跳到函数或数据结构xxx处。使用tag命令时，可以使用TAB键进行匹配查找，继续按TAB键向下切换。\n    某个函数有多个定义时\n\n    D) 运行vim的时候，必须在\"tags\"文件所在的目录下运行。否则，运行vim的时候还要用\":set tags=xxx\"命令设定\"tags\"文件的路径，\n\t这样vim才能找到\"tags\"文件（这儿我们已经设置过了\"set tags=tags;\"，在子目录中也可以使用）。\n\n    E) 在函数中移动光标的快捷键:\n    gd 转到当前光标所指的局部变量的定义\n    * 转到当前光标所指的单词下一次出现的地方\n    # 转到当前光标所指的单词上一次出现的地方\n\n\t:ta tagname 跳转到标签tagname定义的地方\n\t:stag tagname 在分割窗口中查看包含tagname的文件\n\t:tags 查看到达当前位置所经过的标签路径\n\t:ts tagname   :tselect\t列出匹配tagname的标签，如为空，则使用标签栈中最后的标签\n\t如果想跳到包含block的标识符\":tag /block\" 然后用TAB键来选择。这里'/'就是告诉vim 'block'是一个语句块标签。\n\n\t:tf 跳转至第一个匹配的标签\n\t:tlast   :tl 跳转至最后一个匹配的标签\n\t:tnext\t\t\t:tn  跳转到下一个匹配的标签\n\t:[count]tnext\n    :[count]tprevious   :[count] tp     跳到前count个\n\n\t跳转快捷键：\n\tctrl-] ：跳转至光标所在对象定义之处\n\tctrl-t：返回跳转前位置\n\n\n7.taglist插件使用[4]\n    该插件可以像Source Insight那样将当前文件中的宏、全局变量、函数等tag显示在Symbol窗口，用鼠标点上述tag，就跳到该tag定义的位置；\n\t可以按字母序、该tag所属的类或scope，以及该tag在文件中出现的位置进行排序；\n\t如果切换到另外一个文件，Symbol窗口更新显示这个文件中的tag。taglist依赖于ctags。\n\n    要使用taglist插件，必须满足：\n    1).打开VIM的文件类型自动检测功能；\n    2).系统中装了Exuberant ctags工具，并且taglist能够找到此工具（因为taglist需要调用它来生成tag文件）；\n    3).你的VIM支持system()调用；\n\n    安装taglist插件\n    # emerge -av app-vim/taglist\n\n    查看帮助\n    :help helptags\n    :help taglist\n    :help taglist-intro\n\n    打开tag窗口\n    :TlistToggle\n\n    .vimrc中配置如下\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n    \" ctags setting\n    set tags=./tags,./../tags,./*/tags;\n    \n    \" Tag list (ctags)\n    \n    filetype on                            \"文件类型自动检测\n    \n    if MySys() == \"windows\"                \"设定windows系统中ctags程序的位置\n       let Tlist_Ctags_Cmd = 'ctags'\n    elseif MySys() == \"linux\"              \"设定linux系统中ctags程序的位置\n       let Tlist_Ctags_Cmd = '/usr/bin/ctags'\n    endif\n    \n    let Tlist_Show_One_File = 1            \"不同时显示多个文件的tag，只显示当前文件的\n    let Tlist_Exit_OnlyWindow = 1          \"如果taglist窗口是最后一个窗口，则退出vim\n    let Tlist_Use_Right_Window = 1         \"在右侧窗口中显示taglist窗口\n    \n    map <silent> <F8> :TlistToggle<cr>     \"在映射F8键打开tags窗口\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n","source":"_posts/vim-cscope-ctags阅读源码.md","raw":"---\ntitle: vim+cscope+ctags阅读源码\ndate: 2021-12-22 14:20:21\ntags:\n---\n使用vim + cscope/ctags，就能够实现Source Insight的功能，可以很方便地查看分析源代码。\n\n关键词: vim, cscope, ctags, tags\n\n\n1.查看vim是否支持cscope\n> $ vim --version | grep cscope\n\n2.查看帮助\n> $ man cscope\n  $ man ctags\n  :help cscope (vim command)\n\n3.使用cscope[2]\n    当前目录有main.c，其中调用了cstest.c中的print()，此函数在cstest.h中进行了声明。\n    使用下面的命令生成代码的符号索引文件：\n    $ cscope -Rbkq\n    这个命令会生成三个文件：cscope.out, cscope.in.out, cscope.po.out。\n\n    其中cscope.out是基本的符号索引，后两个文件是使用\"-q\"选项生成的，可以加快cscope的索引速度。上面命令的参数含义如下：\n    -R: 在生成索引文件时，搜索子目录树中的代码\n    -b: 只生成索引文件，不进入cscope的界面\n    -k: 在生成索引文件时，不搜索/usr/include目录\n    -q: 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度\n    -i: 如果保存文件列表的文件名不是cscope.files时，需要加此选项告诉cscope到哪儿去找源文件列表。可以使用\"-\"，表示由标准输入获得文件列表。\n    -I dir: 在-I选项指出的目录中查找头文件\n    -u: 扫描所有文件，重新生成交叉索引文件\n    -C: 在搜索时忽略大小写\n    -P path: 在以相对路径表示的文件前加上的path，这样，你不用切换到你数据库文件所在的目录也可以使用它了。\n\n    在缺省情况下，cscope在生成数据库后就会进入它自己的查询界面，一般不用这个界面，所以使用了\"-b\"选项。如果已经进入了这个界面，按CTRL-D退出。\n\n\t查看阅读c++代码[3]\n    cscope缺省只解析C文件(.c和.h)、lex文件(.l)和yacc文件(.y)，虽然它也可以支持C++以及Java，但它在扫描目录时会跳过C++及Java后缀的文件。\n\t如果希望cscope解析C++或Java文件，需要把这些文件的名字和路径保存在一个名为cscope.files的文件。\n\t当cscope发现在当前目录中存在cscope.files时，就会为cscope.files中列出的所有文件生成索引数据库。\n    下面的命令会查找当前目录及子目录中所有后缀名为\".h\", \".c\", \"cc\"和\".cpp\"的文件，并把查找结果重定向到文件cscope.files中。\n\t然后cscope根据cscope.files中的所有文件，生成符号索引文件。最后一条命令使用ctags命令，\n\t生成一个tags文件，在vim中执行\":help tags\"命令查询它的用法。它可以和cscope一起使用。\n\n    $ find . -name \"*.h\" -o -name \"*.c\" -o -name \"*.cc\" -o \"*.cpp\" > cscope.files\n    $ cscope -bkq -i cscope.files\n    $ ctags -R\n\n    接下来可以在vim里浏览代码了\n    $ vim main.c\n    在vim里命令状态下添加符号索引库\n    : cscope add cscope.out\n    然后可以查看相应的函数定义或文件，ctrl+t返回。\n    : cscope find g print\n    : cscope find f cstest.h\n\n    #注意# 所生成的cscope.out和tags文件要在打开VIM所在的文件夹，否则VIM无法找到相关符号信息。\n\n\n4.创建相应的快捷键\n    将以下内容添加到~/.vimrc中，vim会自动加载当前目录下的符号索引cscope.out，可以使用ctrl+t、ctrl+]等。\n\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n    function UpdateCtags()\n         let curdir=getcwd()\n         while !filereadable(\"./tags\")\n             cd ..\n             if getcwd() == \"/\"\n                 break\n             endif\n         endwhile\n         if filewritable(\"./tags\")\n             :!ctags -R\n         endif\n         execute \":cd \" . curdir\n     endfunction\n    \n     function UpdateCStags()\n         let curdir=getcwd()\n         while !filereadable(\"./cscope.out\")\n             cd ..\n             if getcwd() == \"/\"\n                 break\n             endif\n         endwhile\n         if filewritable(\"./cscope.out\")\n             :!cscope -Rbq\n             execute \":cscope kill 0\"\n             execute \":cscope add cscope.out\"\n         endif\n         execute \":cd \" . curdir\n     endfunction\n    \n     nmap <F8> :call UpdateCtags()<CR>\n     nmap <F9> :call UpdateCStags()<CR>\n    \n     \" 这样就可以在更新源代码文件后，随时使用<F8>及<F9>更新tags及cscope.out文件，\n     \" 不必关闭编辑文件，执行ctags -R/cscope -Rbq及重新打开文件。\n    \n     if has(\"cscope\")\n     set cscopetag   \" 使支持用 Ctrl+]  和 Ctrl+t 快捷键在代码间跳来跳去\n     \" check cscope for definition of a symbol before checking ctags:\n     \" set to 1 if you want the reverse search order.\n     set csto=1\n    \n     \" add any cscope database in current directory\n     if filereadable(\"cscope.out\")\n     cs add cscope.out\n     \" else add the database pointed to by environment variable\n     elseif $CSCOPE_DB !=\"\"\n     cs add $CSCOPE_DB\n     endif\n    \n     \" show msg when any other cscope db added\n     set cscopeverbose\n    \n     nmap <C-\\>s :cs find s <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>g :cs find g <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>c :cs find c <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>t :cs find t <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>e :cs find e <C-R>=expand(\"<cword>\")<CR><CR>\n     nmap <C-\\>f :cs find f <C-R>=expand(\"<cfile>\")<CR><CR>\n     nmap <C-\\>i :cs find i <C-R>=expand(\"<cfile>\")<CR><CR>\n     nmap <C-\\>d :cs find d <C-R>=expand(\"<cword>\")<CR><CR>\n     endif\n    \n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\t其中<C-/>g是先同时按ctrl+\\键，之后再按一个g。功能就是查看当前光标所在符号的定义。\n\n5.vim阅读代码\n    添加cscope符号索引数据库后，可以调用\"cscope find\"命令进行查找，vim支持8种cscope的查询功能。\n\t如在代码中查找调用work()函数的函数，可以在vim命令状态下输入\":cs find c work\"，回车即可。还可以进行字符串查找，\n\t它会对双引号或单引号括起来的内容查找。还可以输入一个正则表达式，这类似于egrep程序的功能。\n    :cs help (vim command下查询)\n\n    s: 查找C语言符号，即查找函数名、宏、枚举值等出现的地方\n    g: 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能\n    d: 查找本函数调用的函数\n    c: 查找调用本函数的函数\n    t: 查找指定的字符串\n    e: 查找egrep模式，相当于egrep功能，但查找速度快多了\n    f: 查找并打开文件，类似vim的find功能\n    i: 查找包含本文件的文件\n\n\n6.在vim中使用tags查找符号\n    查看ctags帮助\n    $ man ctags\n    :help ctags  (vim command)\n    :help tags   (vim command)\n\n    在源代码根目录下执行 ctags -R 命令用来为程序源代码生成标签文件，其-R选项表示递归操作，同时为子目录也生成标签文件。\n\tvim利用生成的标签文件，可以进行相应检索、并在不同的文件C语言元素之间来回切换。\n    $ ctags -R\n\n    A) vim中使用\":tag xxx\"跳到函数或数据结构xxx处。使用tag命令时，可以使用TAB键进行匹配查找，继续按TAB键向下切换。\n    某个函数有多个定义时\n\n    D) 运行vim的时候，必须在\"tags\"文件所在的目录下运行。否则，运行vim的时候还要用\":set tags=xxx\"命令设定\"tags\"文件的路径，\n\t这样vim才能找到\"tags\"文件（这儿我们已经设置过了\"set tags=tags;\"，在子目录中也可以使用）。\n\n    E) 在函数中移动光标的快捷键:\n    gd 转到当前光标所指的局部变量的定义\n    * 转到当前光标所指的单词下一次出现的地方\n    # 转到当前光标所指的单词上一次出现的地方\n\n\t:ta tagname 跳转到标签tagname定义的地方\n\t:stag tagname 在分割窗口中查看包含tagname的文件\n\t:tags 查看到达当前位置所经过的标签路径\n\t:ts tagname   :tselect\t列出匹配tagname的标签，如为空，则使用标签栈中最后的标签\n\t如果想跳到包含block的标识符\":tag /block\" 然后用TAB键来选择。这里'/'就是告诉vim 'block'是一个语句块标签。\n\n\t:tf 跳转至第一个匹配的标签\n\t:tlast   :tl 跳转至最后一个匹配的标签\n\t:tnext\t\t\t:tn  跳转到下一个匹配的标签\n\t:[count]tnext\n    :[count]tprevious   :[count] tp     跳到前count个\n\n\t跳转快捷键：\n\tctrl-] ：跳转至光标所在对象定义之处\n\tctrl-t：返回跳转前位置\n\n\n7.taglist插件使用[4]\n    该插件可以像Source Insight那样将当前文件中的宏、全局变量、函数等tag显示在Symbol窗口，用鼠标点上述tag，就跳到该tag定义的位置；\n\t可以按字母序、该tag所属的类或scope，以及该tag在文件中出现的位置进行排序；\n\t如果切换到另外一个文件，Symbol窗口更新显示这个文件中的tag。taglist依赖于ctags。\n\n    要使用taglist插件，必须满足：\n    1).打开VIM的文件类型自动检测功能；\n    2).系统中装了Exuberant ctags工具，并且taglist能够找到此工具（因为taglist需要调用它来生成tag文件）；\n    3).你的VIM支持system()调用；\n\n    安装taglist插件\n    # emerge -av app-vim/taglist\n\n    查看帮助\n    :help helptags\n    :help taglist\n    :help taglist-intro\n\n    打开tag窗口\n    :TlistToggle\n\n    .vimrc中配置如下\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n    \" ctags setting\n    set tags=./tags,./../tags,./*/tags;\n    \n    \" Tag list (ctags)\n    \n    filetype on                            \"文件类型自动检测\n    \n    if MySys() == \"windows\"                \"设定windows系统中ctags程序的位置\n       let Tlist_Ctags_Cmd = 'ctags'\n    elseif MySys() == \"linux\"              \"设定linux系统中ctags程序的位置\n       let Tlist_Ctags_Cmd = '/usr/bin/ctags'\n    endif\n    \n    let Tlist_Show_One_File = 1            \"不同时显示多个文件的tag，只显示当前文件的\n    let Tlist_Exit_OnlyWindow = 1          \"如果taglist窗口是最后一个窗口，则退出vim\n    let Tlist_Use_Right_Window = 1         \"在右侧窗口中显示taglist窗口\n    \n    map <silent> <F8> :TlistToggle<cr>     \"在映射F8键打开tags窗口\n    \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n","slug":"vim-cscope-ctags阅读源码","published":1,"updated":"2021-12-22T06:33:11.719Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632m0015h6fd41wvbndl","content":"<p>使用vim + cscope/ctags，就能够实现Source Insight的功能，可以很方便地查看分析源代码。</p>\n<p>关键词: vim, cscope, ctags, tags</p>\n<p>1.查看vim是否支持cscope</p>\n<blockquote>\n<p>$ vim —version | grep cscope</p>\n</blockquote>\n<p>2.查看帮助</p>\n<blockquote>\n<p>$ man cscope<br>  $ man ctags<br>  :help cscope (vim command)</p>\n</blockquote>\n<p>3.使用cscope[2]<br>    当前目录有main.c，其中调用了cstest.c中的print()，此函数在cstest.h中进行了声明。<br>    使用下面的命令生成代码的符号索引文件：<br>    $ cscope -Rbkq<br>    这个命令会生成三个文件：cscope.out, cscope.in.out, cscope.po.out。</p>\n<pre><code>其中cscope.out是基本的符号索引，后两个文件是使用&quot;-q&quot;选项生成的，可以加快cscope的索引速度。上面命令的参数含义如下：\n-R: 在生成索引文件时，搜索子目录树中的代码\n-b: 只生成索引文件，不进入cscope的界面\n-k: 在生成索引文件时，不搜索/usr/include目录\n-q: 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度\n-i: 如果保存文件列表的文件名不是cscope.files时，需要加此选项告诉cscope到哪儿去找源文件列表。可以使用&quot;-&quot;，表示由标准输入获得文件列表。\n-I dir: 在-I选项指出的目录中查找头文件\n-u: 扫描所有文件，重新生成交叉索引文件\n-C: 在搜索时忽略大小写\n-P path: 在以相对路径表示的文件前加上的path，这样，你不用切换到你数据库文件所在的目录也可以使用它了。\n\n在缺省情况下，cscope在生成数据库后就会进入它自己的查询界面，一般不用这个界面，所以使用了&quot;-b&quot;选项。如果已经进入了这个界面，按CTRL-D退出。\n\n查看阅读c++代码[3]\ncscope缺省只解析C文件(.c和.h)、lex文件(.l)和yacc文件(.y)，虽然它也可以支持C++以及Java，但它在扫描目录时会跳过C++及Java后缀的文件。\n如果希望cscope解析C++或Java文件，需要把这些文件的名字和路径保存在一个名为cscope.files的文件。\n当cscope发现在当前目录中存在cscope.files时，就会为cscope.files中列出的所有文件生成索引数据库。\n下面的命令会查找当前目录及子目录中所有后缀名为&quot;.h&quot;, &quot;.c&quot;, &quot;cc&quot;和&quot;.cpp&quot;的文件，并把查找结果重定向到文件cscope.files中。\n然后cscope根据cscope.files中的所有文件，生成符号索引文件。最后一条命令使用ctags命令，\n生成一个tags文件，在vim中执行&quot;:help tags&quot;命令查询它的用法。它可以和cscope一起使用。\n\n$ find . -name &quot;*.h&quot; -o -name &quot;*.c&quot; -o -name &quot;*.cc&quot; -o &quot;*.cpp&quot; &gt; cscope.files\n$ cscope -bkq -i cscope.files\n$ ctags -R\n\n接下来可以在vim里浏览代码了\n$ vim main.c\n在vim里命令状态下添加符号索引库\n: cscope add cscope.out\n然后可以查看相应的函数定义或文件，ctrl+t返回。\n: cscope find g print\n: cscope find f cstest.h\n\n#注意# 所生成的cscope.out和tags文件要在打开VIM所在的文件夹，否则VIM无法找到相关符号信息。\n</code></pre><p>4.创建相应的快捷键<br>    将以下内容添加到~/.vimrc中，vim会自动加载当前目录下的符号索引cscope.out，可以使用ctrl+t、ctrl+]等。</p>\n<pre><code>&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\nfunction UpdateCtags()\n     let curdir=getcwd()\n     while !filereadable(&quot;./tags&quot;)\n         cd ..\n         if getcwd() == &quot;/&quot;\n             break\n         endif\n     endwhile\n     if filewritable(&quot;./tags&quot;)\n         :!ctags -R\n     endif\n     execute &quot;:cd &quot; . curdir\n endfunction\n\n function UpdateCStags()\n     let curdir=getcwd()\n     while !filereadable(&quot;./cscope.out&quot;)\n         cd ..\n         if getcwd() == &quot;/&quot;\n             break\n         endif\n     endwhile\n     if filewritable(&quot;./cscope.out&quot;)\n         :!cscope -Rbq\n         execute &quot;:cscope kill 0&quot;\n         execute &quot;:cscope add cscope.out&quot;\n     endif\n     execute &quot;:cd &quot; . curdir\n endfunction\n\n nmap &lt;F8&gt; :call UpdateCtags()&lt;CR&gt;\n nmap &lt;F9&gt; :call UpdateCStags()&lt;CR&gt;\n\n &quot; 这样就可以在更新源代码文件后，随时使用&lt;F8&gt;及&lt;F9&gt;更新tags及cscope.out文件，\n &quot; 不必关闭编辑文件，执行ctags -R/cscope -Rbq及重新打开文件。\n\n if has(&quot;cscope&quot;)\n set cscopetag   &quot; 使支持用 Ctrl+]  和 Ctrl+t 快捷键在代码间跳来跳去\n &quot; check cscope for definition of a symbol before checking ctags:\n &quot; set to 1 if you want the reverse search order.\n set csto=1\n\n &quot; add any cscope database in current directory\n if filereadable(&quot;cscope.out&quot;)\n cs add cscope.out\n &quot; else add the database pointed to by environment variable\n elseif $CSCOPE_DB !=&quot;&quot;\n cs add $CSCOPE_DB\n endif\n\n &quot; show msg when any other cscope db added\n set cscopeverbose\n\n nmap &lt;C-\\&gt;s :cs find s &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;g :cs find g &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;c :cs find c &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;t :cs find t &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;e :cs find e &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;f :cs find f &lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;i :cs find i &lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;d :cs find d &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n endif\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n其中&lt;C-/&gt;g是先同时按ctrl+\\键，之后再按一个g。功能就是查看当前光标所在符号的定义。\n</code></pre><p>5.vim阅读代码<br>    添加cscope符号索引数据库后，可以调用”cscope find”命令进行查找，vim支持8种cscope的查询功能。<br>    如在代码中查找调用work()函数的函数，可以在vim命令状态下输入”:cs find c work”，回车即可。还可以进行字符串查找，<br>    它会对双引号或单引号括起来的内容查找。还可以输入一个正则表达式，这类似于egrep程序的功能。<br>    :cs help (vim command下查询)</p>\n<pre><code>s: 查找C语言符号，即查找函数名、宏、枚举值等出现的地方\ng: 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能\nd: 查找本函数调用的函数\nc: 查找调用本函数的函数\nt: 查找指定的字符串\ne: 查找egrep模式，相当于egrep功能，但查找速度快多了\nf: 查找并打开文件，类似vim的find功能\ni: 查找包含本文件的文件\n</code></pre><p>6.在vim中使用tags查找符号<br>    查看ctags帮助<br>    $ man ctags<br>    :help ctags  (vim command)<br>    :help tags   (vim command)</p>\n<pre><code>在源代码根目录下执行 ctags -R 命令用来为程序源代码生成标签文件，其-R选项表示递归操作，同时为子目录也生成标签文件。\nvim利用生成的标签文件，可以进行相应检索、并在不同的文件C语言元素之间来回切换。\n$ ctags -R\n\nA) vim中使用&quot;:tag xxx&quot;跳到函数或数据结构xxx处。使用tag命令时，可以使用TAB键进行匹配查找，继续按TAB键向下切换。\n某个函数有多个定义时\n\nD) 运行vim的时候，必须在&quot;tags&quot;文件所在的目录下运行。否则，运行vim的时候还要用&quot;:set tags=xxx&quot;命令设定&quot;tags&quot;文件的路径，\n这样vim才能找到&quot;tags&quot;文件（这儿我们已经设置过了&quot;set tags=tags;&quot;，在子目录中也可以使用）。\n\nE) 在函数中移动光标的快捷键:\ngd 转到当前光标所指的局部变量的定义\n* 转到当前光标所指的单词下一次出现的地方\n# 转到当前光标所指的单词上一次出现的地方\n\n:ta tagname 跳转到标签tagname定义的地方\n:stag tagname 在分割窗口中查看包含tagname的文件\n:tags 查看到达当前位置所经过的标签路径\n:ts tagname   :tselect    列出匹配tagname的标签，如为空，则使用标签栈中最后的标签\n如果想跳到包含block的标识符&quot;:tag /block&quot; 然后用TAB键来选择。这里&#39;/&#39;就是告诉vim &#39;block&#39;是一个语句块标签。\n\n:tf 跳转至第一个匹配的标签\n:tlast   :tl 跳转至最后一个匹配的标签\n:tnext            :tn  跳转到下一个匹配的标签\n:[count]tnext\n:[count]tprevious   :[count] tp     跳到前count个\n\n跳转快捷键：\nctrl-] ：跳转至光标所在对象定义之处\nctrl-t：返回跳转前位置\n</code></pre><p>7.taglist插件使用[4]<br>    该插件可以像Source Insight那样将当前文件中的宏、全局变量、函数等tag显示在Symbol窗口，用鼠标点上述tag，就跳到该tag定义的位置；<br>    可以按字母序、该tag所属的类或scope，以及该tag在文件中出现的位置进行排序；<br>    如果切换到另外一个文件，Symbol窗口更新显示这个文件中的tag。taglist依赖于ctags。</p>\n<pre><code>要使用taglist插件，必须满足：\n1).打开VIM的文件类型自动检测功能；\n2).系统中装了Exuberant ctags工具，并且taglist能够找到此工具（因为taglist需要调用它来生成tag文件）；\n3).你的VIM支持system()调用；\n\n安装taglist插件\n# emerge -av app-vim/taglist\n\n查看帮助\n:help helptags\n:help taglist\n:help taglist-intro\n\n打开tag窗口\n:TlistToggle\n\n.vimrc中配置如下\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; ctags setting\nset tags=./tags,./../tags,./*/tags;\n\n&quot; Tag list (ctags)\n\nfiletype on                            &quot;文件类型自动检测\n\nif MySys() == &quot;windows&quot;                &quot;设定windows系统中ctags程序的位置\n   let Tlist_Ctags_Cmd = &#39;ctags&#39;\nelseif MySys() == &quot;linux&quot;              &quot;设定linux系统中ctags程序的位置\n   let Tlist_Ctags_Cmd = &#39;/usr/bin/ctags&#39;\nendif\n\nlet Tlist_Show_One_File = 1            &quot;不同时显示多个文件的tag，只显示当前文件的\nlet Tlist_Exit_OnlyWindow = 1          &quot;如果taglist窗口是最后一个窗口，则退出vim\nlet Tlist_Use_Right_Window = 1         &quot;在右侧窗口中显示taglist窗口\n\nmap &lt;silent&gt; &lt;F8&gt; :TlistToggle&lt;cr&gt;     &quot;在映射F8键打开tags窗口\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>使用vim + cscope/ctags，就能够实现Source Insight的功能，可以很方便地查看分析源代码。</p>\n<p>关键词: vim, cscope, ctags, tags</p>\n<p>1.查看vim是否支持cscope</p>\n<blockquote>\n<p>$ vim —version | grep cscope</p>\n</blockquote>\n<p>2.查看帮助</p>\n<blockquote>\n<p>$ man cscope<br>  $ man ctags<br>  :help cscope (vim command)</p>\n</blockquote>\n<p>3.使用cscope[2]<br>    当前目录有main.c，其中调用了cstest.c中的print()，此函数在cstest.h中进行了声明。<br>    使用下面的命令生成代码的符号索引文件：<br>    $ cscope -Rbkq<br>    这个命令会生成三个文件：cscope.out, cscope.in.out, cscope.po.out。</p>\n<pre><code>其中cscope.out是基本的符号索引，后两个文件是使用&quot;-q&quot;选项生成的，可以加快cscope的索引速度。上面命令的参数含义如下：\n-R: 在生成索引文件时，搜索子目录树中的代码\n-b: 只生成索引文件，不进入cscope的界面\n-k: 在生成索引文件时，不搜索/usr/include目录\n-q: 生成cscope.in.out和cscope.po.out文件，加快cscope的索引速度\n-i: 如果保存文件列表的文件名不是cscope.files时，需要加此选项告诉cscope到哪儿去找源文件列表。可以使用&quot;-&quot;，表示由标准输入获得文件列表。\n-I dir: 在-I选项指出的目录中查找头文件\n-u: 扫描所有文件，重新生成交叉索引文件\n-C: 在搜索时忽略大小写\n-P path: 在以相对路径表示的文件前加上的path，这样，你不用切换到你数据库文件所在的目录也可以使用它了。\n\n在缺省情况下，cscope在生成数据库后就会进入它自己的查询界面，一般不用这个界面，所以使用了&quot;-b&quot;选项。如果已经进入了这个界面，按CTRL-D退出。\n\n查看阅读c++代码[3]\ncscope缺省只解析C文件(.c和.h)、lex文件(.l)和yacc文件(.y)，虽然它也可以支持C++以及Java，但它在扫描目录时会跳过C++及Java后缀的文件。\n如果希望cscope解析C++或Java文件，需要把这些文件的名字和路径保存在一个名为cscope.files的文件。\n当cscope发现在当前目录中存在cscope.files时，就会为cscope.files中列出的所有文件生成索引数据库。\n下面的命令会查找当前目录及子目录中所有后缀名为&quot;.h&quot;, &quot;.c&quot;, &quot;cc&quot;和&quot;.cpp&quot;的文件，并把查找结果重定向到文件cscope.files中。\n然后cscope根据cscope.files中的所有文件，生成符号索引文件。最后一条命令使用ctags命令，\n生成一个tags文件，在vim中执行&quot;:help tags&quot;命令查询它的用法。它可以和cscope一起使用。\n\n$ find . -name &quot;*.h&quot; -o -name &quot;*.c&quot; -o -name &quot;*.cc&quot; -o &quot;*.cpp&quot; &gt; cscope.files\n$ cscope -bkq -i cscope.files\n$ ctags -R\n\n接下来可以在vim里浏览代码了\n$ vim main.c\n在vim里命令状态下添加符号索引库\n: cscope add cscope.out\n然后可以查看相应的函数定义或文件，ctrl+t返回。\n: cscope find g print\n: cscope find f cstest.h\n\n#注意# 所生成的cscope.out和tags文件要在打开VIM所在的文件夹，否则VIM无法找到相关符号信息。\n</code></pre><p>4.创建相应的快捷键<br>    将以下内容添加到~/.vimrc中，vim会自动加载当前目录下的符号索引cscope.out，可以使用ctrl+t、ctrl+]等。</p>\n<pre><code>&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\nfunction UpdateCtags()\n     let curdir=getcwd()\n     while !filereadable(&quot;./tags&quot;)\n         cd ..\n         if getcwd() == &quot;/&quot;\n             break\n         endif\n     endwhile\n     if filewritable(&quot;./tags&quot;)\n         :!ctags -R\n     endif\n     execute &quot;:cd &quot; . curdir\n endfunction\n\n function UpdateCStags()\n     let curdir=getcwd()\n     while !filereadable(&quot;./cscope.out&quot;)\n         cd ..\n         if getcwd() == &quot;/&quot;\n             break\n         endif\n     endwhile\n     if filewritable(&quot;./cscope.out&quot;)\n         :!cscope -Rbq\n         execute &quot;:cscope kill 0&quot;\n         execute &quot;:cscope add cscope.out&quot;\n     endif\n     execute &quot;:cd &quot; . curdir\n endfunction\n\n nmap &lt;F8&gt; :call UpdateCtags()&lt;CR&gt;\n nmap &lt;F9&gt; :call UpdateCStags()&lt;CR&gt;\n\n &quot; 这样就可以在更新源代码文件后，随时使用&lt;F8&gt;及&lt;F9&gt;更新tags及cscope.out文件，\n &quot; 不必关闭编辑文件，执行ctags -R/cscope -Rbq及重新打开文件。\n\n if has(&quot;cscope&quot;)\n set cscopetag   &quot; 使支持用 Ctrl+]  和 Ctrl+t 快捷键在代码间跳来跳去\n &quot; check cscope for definition of a symbol before checking ctags:\n &quot; set to 1 if you want the reverse search order.\n set csto=1\n\n &quot; add any cscope database in current directory\n if filereadable(&quot;cscope.out&quot;)\n cs add cscope.out\n &quot; else add the database pointed to by environment variable\n elseif $CSCOPE_DB !=&quot;&quot;\n cs add $CSCOPE_DB\n endif\n\n &quot; show msg when any other cscope db added\n set cscopeverbose\n\n nmap &lt;C-\\&gt;s :cs find s &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;g :cs find g &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;c :cs find c &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;t :cs find t &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;e :cs find e &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;f :cs find f &lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;i :cs find i &lt;C-R&gt;=expand(&quot;&lt;cfile&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n nmap &lt;C-\\&gt;d :cs find d &lt;C-R&gt;=expand(&quot;&lt;cword&gt;&quot;)&lt;CR&gt;&lt;CR&gt;\n endif\n\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n其中&lt;C-/&gt;g是先同时按ctrl+\\键，之后再按一个g。功能就是查看当前光标所在符号的定义。\n</code></pre><p>5.vim阅读代码<br>    添加cscope符号索引数据库后，可以调用”cscope find”命令进行查找，vim支持8种cscope的查询功能。<br>    如在代码中查找调用work()函数的函数，可以在vim命令状态下输入”:cs find c work”，回车即可。还可以进行字符串查找，<br>    它会对双引号或单引号括起来的内容查找。还可以输入一个正则表达式，这类似于egrep程序的功能。<br>    :cs help (vim command下查询)</p>\n<pre><code>s: 查找C语言符号，即查找函数名、宏、枚举值等出现的地方\ng: 查找函数、宏、枚举等定义的位置，类似ctags所提供的功能\nd: 查找本函数调用的函数\nc: 查找调用本函数的函数\nt: 查找指定的字符串\ne: 查找egrep模式，相当于egrep功能，但查找速度快多了\nf: 查找并打开文件，类似vim的find功能\ni: 查找包含本文件的文件\n</code></pre><p>6.在vim中使用tags查找符号<br>    查看ctags帮助<br>    $ man ctags<br>    :help ctags  (vim command)<br>    :help tags   (vim command)</p>\n<pre><code>在源代码根目录下执行 ctags -R 命令用来为程序源代码生成标签文件，其-R选项表示递归操作，同时为子目录也生成标签文件。\nvim利用生成的标签文件，可以进行相应检索、并在不同的文件C语言元素之间来回切换。\n$ ctags -R\n\nA) vim中使用&quot;:tag xxx&quot;跳到函数或数据结构xxx处。使用tag命令时，可以使用TAB键进行匹配查找，继续按TAB键向下切换。\n某个函数有多个定义时\n\nD) 运行vim的时候，必须在&quot;tags&quot;文件所在的目录下运行。否则，运行vim的时候还要用&quot;:set tags=xxx&quot;命令设定&quot;tags&quot;文件的路径，\n这样vim才能找到&quot;tags&quot;文件（这儿我们已经设置过了&quot;set tags=tags;&quot;，在子目录中也可以使用）。\n\nE) 在函数中移动光标的快捷键:\ngd 转到当前光标所指的局部变量的定义\n* 转到当前光标所指的单词下一次出现的地方\n# 转到当前光标所指的单词上一次出现的地方\n\n:ta tagname 跳转到标签tagname定义的地方\n:stag tagname 在分割窗口中查看包含tagname的文件\n:tags 查看到达当前位置所经过的标签路径\n:ts tagname   :tselect    列出匹配tagname的标签，如为空，则使用标签栈中最后的标签\n如果想跳到包含block的标识符&quot;:tag /block&quot; 然后用TAB键来选择。这里&#39;/&#39;就是告诉vim &#39;block&#39;是一个语句块标签。\n\n:tf 跳转至第一个匹配的标签\n:tlast   :tl 跳转至最后一个匹配的标签\n:tnext            :tn  跳转到下一个匹配的标签\n:[count]tnext\n:[count]tprevious   :[count] tp     跳到前count个\n\n跳转快捷键：\nctrl-] ：跳转至光标所在对象定义之处\nctrl-t：返回跳转前位置\n</code></pre><p>7.taglist插件使用[4]<br>    该插件可以像Source Insight那样将当前文件中的宏、全局变量、函数等tag显示在Symbol窗口，用鼠标点上述tag，就跳到该tag定义的位置；<br>    可以按字母序、该tag所属的类或scope，以及该tag在文件中出现的位置进行排序；<br>    如果切换到另外一个文件，Symbol窗口更新显示这个文件中的tag。taglist依赖于ctags。</p>\n<pre><code>要使用taglist插件，必须满足：\n1).打开VIM的文件类型自动检测功能；\n2).系统中装了Exuberant ctags工具，并且taglist能够找到此工具（因为taglist需要调用它来生成tag文件）；\n3).你的VIM支持system()调用；\n\n安装taglist插件\n# emerge -av app-vim/taglist\n\n查看帮助\n:help helptags\n:help taglist\n:help taglist-intro\n\n打开tag窗口\n:TlistToggle\n\n.vimrc中配置如下\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n&quot; ctags setting\nset tags=./tags,./../tags,./*/tags;\n\n&quot; Tag list (ctags)\n\nfiletype on                            &quot;文件类型自动检测\n\nif MySys() == &quot;windows&quot;                &quot;设定windows系统中ctags程序的位置\n   let Tlist_Ctags_Cmd = &#39;ctags&#39;\nelseif MySys() == &quot;linux&quot;              &quot;设定linux系统中ctags程序的位置\n   let Tlist_Ctags_Cmd = &#39;/usr/bin/ctags&#39;\nendif\n\nlet Tlist_Show_One_File = 1            &quot;不同时显示多个文件的tag，只显示当前文件的\nlet Tlist_Exit_OnlyWindow = 1          &quot;如果taglist窗口是最后一个窗口，则退出vim\nlet Tlist_Use_Right_Window = 1         &quot;在右侧窗口中显示taglist窗口\n\nmap &lt;silent&gt; &lt;F8&gt; :TlistToggle&lt;cr&gt;     &quot;在映射F8键打开tags窗口\n&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;\n</code></pre>"},{"title":"CWNA:射频基础知识（2）","date":"2022-01-11T05:13:36.000Z","_content":"\n传播介质对射频波的传播影响极大。\n\n**吸收**\n2.4GHz射频信号通过混凝土墙后，功率降低到原来的1/16，而同样的信号穿过石膏板后，功率损失1/2.\n吸收是导致信号衰减的主要原因。\n成年人的身体平均含水量50%~60%，水会吸收信号，导致信号衰减。\n\n**反射**\n反射分为天波反射和微波反射两大类。\n频率低于1GHz的信号会发生天波反射，它会从地球电离层带电粒子的表面反弹回来。\n反射导致多径效应，多径会降低接收信号的强度和质量，甚至导致数据损坏和信号相消。\n\n在遗留的802.11/a/b/无线接口时，反射和多径往往导致性能下降的罪魁祸首。而802.11n/ac无线接口采用\n多输入多输出(MIMO)天线和高级数字信号处理技术，使得多径效应具有建设性影响。\n\n**散射**\n天空之所以呈现蓝色是由于瑞利散射（Rayleigh scattering),得名于19世纪英国物理学家约翰·威廉·斯特拉特，后者曾受封瑞利勋爵。\n\n散射就是波向四面八方反射。\n\n**折射**\n波进入密度不均匀的介质后会发生折射。\n\n**衍射**\n信号遇到障碍物时发生弯曲。\n障碍物正后方的区域称为射频阴影（RF shadow)。射频阴影可能称为信号覆盖死角，天线安装位置需要考虑。\n\n**损耗**\n损耗又称为衰减，用于描述振幅和信号强度的降低。\n介质会导致波的损耗。\n\n**自由空间损耗**\n即便没有障碍物，吸收，反射，衍射等因素造成的衰减，电磁信号在传输过程中也会因为物理定律而衰减。由于波的自然展宽引起的信号强度衰减称为自由空间路径损耗，一般称为波束发散。\n\n距离每增加一倍，振幅将减少6dB。\n\n信号的成功接收，不仅要确保射频信号不会衰减到无线接口的接收灵敏度以下，也要确保信号不会衰减到接近或低于本底噪声的水平。\n\n**多径**\n多径，指信号沿着两条或多条路径同时或相隔极短时间到达接收天线。上述波的各种行为多数会导致多径现象。\n\n电视图像的重影就是多径效应引起。\n\n多径引起的4种结果：\n增强\n减弱\n消失\n损坏\n\n**增益**\n描述信号或信号强度的增加。分为有源增益和无源增益\n有源增益————收发器\n无源增益————天线\n\n两种信号测量工具\n频域工具————频谱分析仪\n时域工具————示波器\n\n### 提示\n遇到网络问题，最好从物理层开始排除网络故障。无论是以太网还是无线局域网。\n","source":"_posts/CWNA-射频基础知识（2）.md","raw":"---\ntitle: 'CWNA:射频基础知识（2）'\ndate: 2022-01-11 13:13:36\ntags: 'Wi-Fi'\n---\n\n传播介质对射频波的传播影响极大。\n\n**吸收**\n2.4GHz射频信号通过混凝土墙后，功率降低到原来的1/16，而同样的信号穿过石膏板后，功率损失1/2.\n吸收是导致信号衰减的主要原因。\n成年人的身体平均含水量50%~60%，水会吸收信号，导致信号衰减。\n\n**反射**\n反射分为天波反射和微波反射两大类。\n频率低于1GHz的信号会发生天波反射，它会从地球电离层带电粒子的表面反弹回来。\n反射导致多径效应，多径会降低接收信号的强度和质量，甚至导致数据损坏和信号相消。\n\n在遗留的802.11/a/b/无线接口时，反射和多径往往导致性能下降的罪魁祸首。而802.11n/ac无线接口采用\n多输入多输出(MIMO)天线和高级数字信号处理技术，使得多径效应具有建设性影响。\n\n**散射**\n天空之所以呈现蓝色是由于瑞利散射（Rayleigh scattering),得名于19世纪英国物理学家约翰·威廉·斯特拉特，后者曾受封瑞利勋爵。\n\n散射就是波向四面八方反射。\n\n**折射**\n波进入密度不均匀的介质后会发生折射。\n\n**衍射**\n信号遇到障碍物时发生弯曲。\n障碍物正后方的区域称为射频阴影（RF shadow)。射频阴影可能称为信号覆盖死角，天线安装位置需要考虑。\n\n**损耗**\n损耗又称为衰减，用于描述振幅和信号强度的降低。\n介质会导致波的损耗。\n\n**自由空间损耗**\n即便没有障碍物，吸收，反射，衍射等因素造成的衰减，电磁信号在传输过程中也会因为物理定律而衰减。由于波的自然展宽引起的信号强度衰减称为自由空间路径损耗，一般称为波束发散。\n\n距离每增加一倍，振幅将减少6dB。\n\n信号的成功接收，不仅要确保射频信号不会衰减到无线接口的接收灵敏度以下，也要确保信号不会衰减到接近或低于本底噪声的水平。\n\n**多径**\n多径，指信号沿着两条或多条路径同时或相隔极短时间到达接收天线。上述波的各种行为多数会导致多径现象。\n\n电视图像的重影就是多径效应引起。\n\n多径引起的4种结果：\n增强\n减弱\n消失\n损坏\n\n**增益**\n描述信号或信号强度的增加。分为有源增益和无源增益\n有源增益————收发器\n无源增益————天线\n\n两种信号测量工具\n频域工具————频谱分析仪\n时域工具————示波器\n\n### 提示\n遇到网络问题，最好从物理层开始排除网络故障。无论是以太网还是无线局域网。\n","slug":"CWNA-射频基础知识（2）","published":1,"updated":"2022-01-11T06:26:13.811Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632m0016h6fdej2z23x4","content":"<p>传播介质对射频波的传播影响极大。</p>\n<p><strong>吸收</strong><br>2.4GHz射频信号通过混凝土墙后，功率降低到原来的1/16，而同样的信号穿过石膏板后，功率损失1/2.<br>吸收是导致信号衰减的主要原因。<br>成年人的身体平均含水量50%~60%，水会吸收信号，导致信号衰减。</p>\n<p><strong>反射</strong><br>反射分为天波反射和微波反射两大类。<br>频率低于1GHz的信号会发生天波反射，它会从地球电离层带电粒子的表面反弹回来。<br>反射导致多径效应，多径会降低接收信号的强度和质量，甚至导致数据损坏和信号相消。</p>\n<p>在遗留的802.11/a/b/无线接口时，反射和多径往往导致性能下降的罪魁祸首。而802.11n/ac无线接口采用<br>多输入多输出(MIMO)天线和高级数字信号处理技术，使得多径效应具有建设性影响。</p>\n<p><strong>散射</strong><br>天空之所以呈现蓝色是由于瑞利散射（Rayleigh scattering),得名于19世纪英国物理学家约翰·威廉·斯特拉特，后者曾受封瑞利勋爵。</p>\n<p>散射就是波向四面八方反射。</p>\n<p><strong>折射</strong><br>波进入密度不均匀的介质后会发生折射。</p>\n<p><strong>衍射</strong><br>信号遇到障碍物时发生弯曲。<br>障碍物正后方的区域称为射频阴影（RF shadow)。射频阴影可能称为信号覆盖死角，天线安装位置需要考虑。</p>\n<p><strong>损耗</strong><br>损耗又称为衰减，用于描述振幅和信号强度的降低。<br>介质会导致波的损耗。</p>\n<p><strong>自由空间损耗</strong><br>即便没有障碍物，吸收，反射，衍射等因素造成的衰减，电磁信号在传输过程中也会因为物理定律而衰减。由于波的自然展宽引起的信号强度衰减称为自由空间路径损耗，一般称为波束发散。</p>\n<p>距离每增加一倍，振幅将减少6dB。</p>\n<p>信号的成功接收，不仅要确保射频信号不会衰减到无线接口的接收灵敏度以下，也要确保信号不会衰减到接近或低于本底噪声的水平。</p>\n<p><strong>多径</strong><br>多径，指信号沿着两条或多条路径同时或相隔极短时间到达接收天线。上述波的各种行为多数会导致多径现象。</p>\n<p>电视图像的重影就是多径效应引起。</p>\n<p>多径引起的4种结果：<br>增强<br>减弱<br>消失<br>损坏</p>\n<p><strong>增益</strong><br>描述信号或信号强度的增加。分为有源增益和无源增益<br>有源增益————收发器<br>无源增益————天线</p>\n<p>两种信号测量工具<br>频域工具————频谱分析仪<br>时域工具————示波器</p>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><p>遇到网络问题，最好从物理层开始排除网络故障。无论是以太网还是无线局域网。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>传播介质对射频波的传播影响极大。</p>\n<p><strong>吸收</strong><br>2.4GHz射频信号通过混凝土墙后，功率降低到原来的1/16，而同样的信号穿过石膏板后，功率损失1/2.<br>吸收是导致信号衰减的主要原因。<br>成年人的身体平均含水量50%~60%，水会吸收信号，导致信号衰减。</p>\n<p><strong>反射</strong><br>反射分为天波反射和微波反射两大类。<br>频率低于1GHz的信号会发生天波反射，它会从地球电离层带电粒子的表面反弹回来。<br>反射导致多径效应，多径会降低接收信号的强度和质量，甚至导致数据损坏和信号相消。</p>\n<p>在遗留的802.11/a/b/无线接口时，反射和多径往往导致性能下降的罪魁祸首。而802.11n/ac无线接口采用<br>多输入多输出(MIMO)天线和高级数字信号处理技术，使得多径效应具有建设性影响。</p>\n<p><strong>散射</strong><br>天空之所以呈现蓝色是由于瑞利散射（Rayleigh scattering),得名于19世纪英国物理学家约翰·威廉·斯特拉特，后者曾受封瑞利勋爵。</p>\n<p>散射就是波向四面八方反射。</p>\n<p><strong>折射</strong><br>波进入密度不均匀的介质后会发生折射。</p>\n<p><strong>衍射</strong><br>信号遇到障碍物时发生弯曲。<br>障碍物正后方的区域称为射频阴影（RF shadow)。射频阴影可能称为信号覆盖死角，天线安装位置需要考虑。</p>\n<p><strong>损耗</strong><br>损耗又称为衰减，用于描述振幅和信号强度的降低。<br>介质会导致波的损耗。</p>\n<p><strong>自由空间损耗</strong><br>即便没有障碍物，吸收，反射，衍射等因素造成的衰减，电磁信号在传输过程中也会因为物理定律而衰减。由于波的自然展宽引起的信号强度衰减称为自由空间路径损耗，一般称为波束发散。</p>\n<p>距离每增加一倍，振幅将减少6dB。</p>\n<p>信号的成功接收，不仅要确保射频信号不会衰减到无线接口的接收灵敏度以下，也要确保信号不会衰减到接近或低于本底噪声的水平。</p>\n<p><strong>多径</strong><br>多径，指信号沿着两条或多条路径同时或相隔极短时间到达接收天线。上述波的各种行为多数会导致多径现象。</p>\n<p>电视图像的重影就是多径效应引起。</p>\n<p>多径引起的4种结果：<br>增强<br>减弱<br>消失<br>损坏</p>\n<p><strong>增益</strong><br>描述信号或信号强度的增加。分为有源增益和无源增益<br>有源增益————收发器<br>无源增益————天线</p>\n<p>两种信号测量工具<br>频域工具————频谱分析仪<br>时域工具————示波器</p>\n<h3 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h3><p>遇到网络问题，最好从物理层开始排除网络故障。无论是以太网还是无线局域网。</p>\n"},{"title":"CWNA:射频基础知识(5)","date":"2022-01-12T02:11:56.000Z","_content":"\n### 本底噪声\n本底噪声(noise floor)，特定信道上的无线电能量的环境或背景电平。\n这种背景能量来自附近传输数据的802.11无线接口产生的调制或编码比特，也包括非802.11设备（如微波炉，蓝牙设备等）产生的未调制能量。\n本底噪声也称为背景噪声，它因环境而异。\n2.4GHz ISM信道的本底噪声通常为 -100dBm左右。\n5GHz的本底噪声几乎总是低于2.4GHz信道。\n\n### 信噪比(SNR)\n接收信号与背景噪声之间的分贝差值，而并非比值。\n信噪比过低会引起数据破坏，并引起二层重传，从而降低数据吞吐量。\nSNR > 25dB 信号质量较好\nSNR < 10dB 信号质量较差\n\n### 信干噪比(SINR)\n主射频信号功率相对于射频干扰和背景噪声功率之和的差值。\n描述了主射频信号与干扰和噪声之间的关系，更好的描述信号在特定时间发生的变化。\n\n### 接收信号强度指示\n接收灵敏度，表示接收机无线接口成功接收射频信号所需的功率电平。\n\n无线通信中无处不在的折衷，需要根据需要进行选择。关键是做好平衡。\n> 功率越高支持的数据速率越高；\n> 调制技术和编码方案产生的数据速率也不同；\n> 调制技术和编码方案的数据速率越高，数据越容易遭到破坏；\n> 调制和编码方法的数据速率越低，数据越不易遭到破坏。\n\nRSSI，信号强度指示，不同供应商之间的定义范围不同，不能直接比较。\n\n接收灵敏度阈值\n\n|数据速率|接收信号的振幅|\n|:----------:|:------:|\n|MCS7|-77dBm|\n|MCS6|-78dBm|\n|MCS5|-80dBm|\n|MCS4|-85dBm|\n|MCS3|-88dBm|\n|MCS2|-90dBm|\n|MCS1|-90dBm|\n|MCS0|-90dBm|\n|54Mbps|-79dBm|\n|48Mbps|-80dBm|\n|36Mbps|-85dBm|\n|24Mbps|-87dBm|\n|18Mbps|-90dBm|\n|12Mbps|-91dBm|\n|9Mbps|-91dBm|\n|6Mbps|-91dBm|\n\n### 链路预算\n发射机无线接口经由射频介质到达接收机无线接口的所有增益与损耗之和。\n旨在确保最终接收到的信号振幅高于接收机无线接口的接收灵敏度。\n\n在所有的射频传输中，导致信号丢失的罪魁祸首是**自由空间路径损耗**\n\n### 衰落裕度(fade margin)\n最终接收信号与接收灵敏度阈值之间存在的缓冲空间，称为衰落裕度。\n由于射频信号受到多种外部因素影响，衰落裕度用来确保链路可靠性的做法十分普遍。\n\n### 系统运行裕度\n实际接收信号与实现可靠通信所需要的信号之间的差值。\n\n","source":"_posts/CWNA-射频基础知识-5.md","raw":"---\ntitle: 'CWNA:射频基础知识(5)'\ndate: 2022-01-12 10:11:56\ntags: 'Wi-Fi'\n---\n\n### 本底噪声\n本底噪声(noise floor)，特定信道上的无线电能量的环境或背景电平。\n这种背景能量来自附近传输数据的802.11无线接口产生的调制或编码比特，也包括非802.11设备（如微波炉，蓝牙设备等）产生的未调制能量。\n本底噪声也称为背景噪声，它因环境而异。\n2.4GHz ISM信道的本底噪声通常为 -100dBm左右。\n5GHz的本底噪声几乎总是低于2.4GHz信道。\n\n### 信噪比(SNR)\n接收信号与背景噪声之间的分贝差值，而并非比值。\n信噪比过低会引起数据破坏，并引起二层重传，从而降低数据吞吐量。\nSNR > 25dB 信号质量较好\nSNR < 10dB 信号质量较差\n\n### 信干噪比(SINR)\n主射频信号功率相对于射频干扰和背景噪声功率之和的差值。\n描述了主射频信号与干扰和噪声之间的关系，更好的描述信号在特定时间发生的变化。\n\n### 接收信号强度指示\n接收灵敏度，表示接收机无线接口成功接收射频信号所需的功率电平。\n\n无线通信中无处不在的折衷，需要根据需要进行选择。关键是做好平衡。\n> 功率越高支持的数据速率越高；\n> 调制技术和编码方案产生的数据速率也不同；\n> 调制技术和编码方案的数据速率越高，数据越容易遭到破坏；\n> 调制和编码方法的数据速率越低，数据越不易遭到破坏。\n\nRSSI，信号强度指示，不同供应商之间的定义范围不同，不能直接比较。\n\n接收灵敏度阈值\n\n|数据速率|接收信号的振幅|\n|:----------:|:------:|\n|MCS7|-77dBm|\n|MCS6|-78dBm|\n|MCS5|-80dBm|\n|MCS4|-85dBm|\n|MCS3|-88dBm|\n|MCS2|-90dBm|\n|MCS1|-90dBm|\n|MCS0|-90dBm|\n|54Mbps|-79dBm|\n|48Mbps|-80dBm|\n|36Mbps|-85dBm|\n|24Mbps|-87dBm|\n|18Mbps|-90dBm|\n|12Mbps|-91dBm|\n|9Mbps|-91dBm|\n|6Mbps|-91dBm|\n\n### 链路预算\n发射机无线接口经由射频介质到达接收机无线接口的所有增益与损耗之和。\n旨在确保最终接收到的信号振幅高于接收机无线接口的接收灵敏度。\n\n在所有的射频传输中，导致信号丢失的罪魁祸首是**自由空间路径损耗**\n\n### 衰落裕度(fade margin)\n最终接收信号与接收灵敏度阈值之间存在的缓冲空间，称为衰落裕度。\n由于射频信号受到多种外部因素影响，衰落裕度用来确保链路可靠性的做法十分普遍。\n\n### 系统运行裕度\n实际接收信号与实现可靠通信所需要的信号之间的差值。\n\n","slug":"CWNA-射频基础知识-5","published":1,"updated":"2022-01-12T03:11:26.832Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632n0017h6fd070whlzo","content":"<h3 id=\"本底噪声\"><a href=\"#本底噪声\" class=\"headerlink\" title=\"本底噪声\"></a>本底噪声</h3><p>本底噪声(noise floor)，特定信道上的无线电能量的环境或背景电平。<br>这种背景能量来自附近传输数据的802.11无线接口产生的调制或编码比特，也包括非802.11设备（如微波炉，蓝牙设备等）产生的未调制能量。<br>本底噪声也称为背景噪声，它因环境而异。<br>2.4GHz ISM信道的本底噪声通常为 -100dBm左右。<br>5GHz的本底噪声几乎总是低于2.4GHz信道。</p>\n<h3 id=\"信噪比-SNR\"><a href=\"#信噪比-SNR\" class=\"headerlink\" title=\"信噪比(SNR)\"></a>信噪比(SNR)</h3><p>接收信号与背景噪声之间的分贝差值，而并非比值。<br>信噪比过低会引起数据破坏，并引起二层重传，从而降低数据吞吐量。<br>SNR &gt; 25dB 信号质量较好<br>SNR &lt; 10dB 信号质量较差</p>\n<h3 id=\"信干噪比-SINR\"><a href=\"#信干噪比-SINR\" class=\"headerlink\" title=\"信干噪比(SINR)\"></a>信干噪比(SINR)</h3><p>主射频信号功率相对于射频干扰和背景噪声功率之和的差值。<br>描述了主射频信号与干扰和噪声之间的关系，更好的描述信号在特定时间发生的变化。</p>\n<h3 id=\"接收信号强度指示\"><a href=\"#接收信号强度指示\" class=\"headerlink\" title=\"接收信号强度指示\"></a>接收信号强度指示</h3><p>接收灵敏度，表示接收机无线接口成功接收射频信号所需的功率电平。</p>\n<p>无线通信中无处不在的折衷，需要根据需要进行选择。关键是做好平衡。</p>\n<blockquote>\n<p>功率越高支持的数据速率越高；<br>调制技术和编码方案产生的数据速率也不同；<br>调制技术和编码方案的数据速率越高，数据越容易遭到破坏；<br>调制和编码方法的数据速率越低，数据越不易遭到破坏。</p>\n</blockquote>\n<p>RSSI，信号强度指示，不同供应商之间的定义范围不同，不能直接比较。</p>\n<p>接收灵敏度阈值</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据速率</th>\n<th style=\"text-align:center\">接收信号的振幅</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">MCS7</td>\n<td style=\"text-align:center\">-77dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS6</td>\n<td style=\"text-align:center\">-78dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS5</td>\n<td style=\"text-align:center\">-80dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS4</td>\n<td style=\"text-align:center\">-85dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS3</td>\n<td style=\"text-align:center\">-88dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS2</td>\n<td style=\"text-align:center\">-90dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS1</td>\n<td style=\"text-align:center\">-90dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS0</td>\n<td style=\"text-align:center\">-90dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">54Mbps</td>\n<td style=\"text-align:center\">-79dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">48Mbps</td>\n<td style=\"text-align:center\">-80dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">36Mbps</td>\n<td style=\"text-align:center\">-85dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">24Mbps</td>\n<td style=\"text-align:center\">-87dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">18Mbps</td>\n<td style=\"text-align:center\">-90dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">12Mbps</td>\n<td style=\"text-align:center\">-91dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9Mbps</td>\n<td style=\"text-align:center\">-91dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6Mbps</td>\n<td style=\"text-align:center\">-91dBm</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"链路预算\"><a href=\"#链路预算\" class=\"headerlink\" title=\"链路预算\"></a>链路预算</h3><p>发射机无线接口经由射频介质到达接收机无线接口的所有增益与损耗之和。<br>旨在确保最终接收到的信号振幅高于接收机无线接口的接收灵敏度。</p>\n<p>在所有的射频传输中，导致信号丢失的罪魁祸首是<strong>自由空间路径损耗</strong></p>\n<h3 id=\"衰落裕度-fade-margin\"><a href=\"#衰落裕度-fade-margin\" class=\"headerlink\" title=\"衰落裕度(fade margin)\"></a>衰落裕度(fade margin)</h3><p>最终接收信号与接收灵敏度阈值之间存在的缓冲空间，称为衰落裕度。<br>由于射频信号受到多种外部因素影响，衰落裕度用来确保链路可靠性的做法十分普遍。</p>\n<h3 id=\"系统运行裕度\"><a href=\"#系统运行裕度\" class=\"headerlink\" title=\"系统运行裕度\"></a>系统运行裕度</h3><p>实际接收信号与实现可靠通信所需要的信号之间的差值。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"本底噪声\"><a href=\"#本底噪声\" class=\"headerlink\" title=\"本底噪声\"></a>本底噪声</h3><p>本底噪声(noise floor)，特定信道上的无线电能量的环境或背景电平。<br>这种背景能量来自附近传输数据的802.11无线接口产生的调制或编码比特，也包括非802.11设备（如微波炉，蓝牙设备等）产生的未调制能量。<br>本底噪声也称为背景噪声，它因环境而异。<br>2.4GHz ISM信道的本底噪声通常为 -100dBm左右。<br>5GHz的本底噪声几乎总是低于2.4GHz信道。</p>\n<h3 id=\"信噪比-SNR\"><a href=\"#信噪比-SNR\" class=\"headerlink\" title=\"信噪比(SNR)\"></a>信噪比(SNR)</h3><p>接收信号与背景噪声之间的分贝差值，而并非比值。<br>信噪比过低会引起数据破坏，并引起二层重传，从而降低数据吞吐量。<br>SNR &gt; 25dB 信号质量较好<br>SNR &lt; 10dB 信号质量较差</p>\n<h3 id=\"信干噪比-SINR\"><a href=\"#信干噪比-SINR\" class=\"headerlink\" title=\"信干噪比(SINR)\"></a>信干噪比(SINR)</h3><p>主射频信号功率相对于射频干扰和背景噪声功率之和的差值。<br>描述了主射频信号与干扰和噪声之间的关系，更好的描述信号在特定时间发生的变化。</p>\n<h3 id=\"接收信号强度指示\"><a href=\"#接收信号强度指示\" class=\"headerlink\" title=\"接收信号强度指示\"></a>接收信号强度指示</h3><p>接收灵敏度，表示接收机无线接口成功接收射频信号所需的功率电平。</p>\n<p>无线通信中无处不在的折衷，需要根据需要进行选择。关键是做好平衡。</p>\n<blockquote>\n<p>功率越高支持的数据速率越高；<br>调制技术和编码方案产生的数据速率也不同；<br>调制技术和编码方案的数据速率越高，数据越容易遭到破坏；<br>调制和编码方法的数据速率越低，数据越不易遭到破坏。</p>\n</blockquote>\n<p>RSSI，信号强度指示，不同供应商之间的定义范围不同，不能直接比较。</p>\n<p>接收灵敏度阈值</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">数据速率</th>\n<th style=\"text-align:center\">接收信号的振幅</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">MCS7</td>\n<td style=\"text-align:center\">-77dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS6</td>\n<td style=\"text-align:center\">-78dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS5</td>\n<td style=\"text-align:center\">-80dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS4</td>\n<td style=\"text-align:center\">-85dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS3</td>\n<td style=\"text-align:center\">-88dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS2</td>\n<td style=\"text-align:center\">-90dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS1</td>\n<td style=\"text-align:center\">-90dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MCS0</td>\n<td style=\"text-align:center\">-90dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">54Mbps</td>\n<td style=\"text-align:center\">-79dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">48Mbps</td>\n<td style=\"text-align:center\">-80dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">36Mbps</td>\n<td style=\"text-align:center\">-85dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">24Mbps</td>\n<td style=\"text-align:center\">-87dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">18Mbps</td>\n<td style=\"text-align:center\">-90dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">12Mbps</td>\n<td style=\"text-align:center\">-91dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9Mbps</td>\n<td style=\"text-align:center\">-91dBm</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6Mbps</td>\n<td style=\"text-align:center\">-91dBm</td>\n</tr>\n</tbody>\n</table>\n</div>\n<h3 id=\"链路预算\"><a href=\"#链路预算\" class=\"headerlink\" title=\"链路预算\"></a>链路预算</h3><p>发射机无线接口经由射频介质到达接收机无线接口的所有增益与损耗之和。<br>旨在确保最终接收到的信号振幅高于接收机无线接口的接收灵敏度。</p>\n<p>在所有的射频传输中，导致信号丢失的罪魁祸首是<strong>自由空间路径损耗</strong></p>\n<h3 id=\"衰落裕度-fade-margin\"><a href=\"#衰落裕度-fade-margin\" class=\"headerlink\" title=\"衰落裕度(fade margin)\"></a>衰落裕度(fade margin)</h3><p>最终接收信号与接收灵敏度阈值之间存在的缓冲空间，称为衰落裕度。<br>由于射频信号受到多种外部因素影响，衰落裕度用来确保链路可靠性的做法十分普遍。</p>\n<h3 id=\"系统运行裕度\"><a href=\"#系统运行裕度\" class=\"headerlink\" title=\"系统运行裕度\"></a>系统运行裕度</h3><p>实际接收信号与实现可靠通信所需要的信号之间的差值。</p>\n"},{"title":"CWNA:射频基础知识","date":"2022-01-10T09:10:14.000Z","_content":"\n**射频信号定义**\n\n**射频特性**\n> 波长\n> 频率\n> 振幅\n> 相位\n\n**射频行为**\n> 波传播\n> 吸收\n> 反射\n> 散射\n> 折射\n> 衍射\n> 损耗（衰减）\n> 自由空间路径损耗\n> 多径\n> 增益（放大）\n\n\n为了深入理解802.11技术，需要掌握无线信号在OSI模型的物理层上的原理。射频通信是物理层核心所在。\n有线通信，信号在有界介质中传输。\n无线通信，信号在无界介质中传输，信号向四面八方辐射到周围环境中，因而容易受环境影响。\n\n**射频信号的定义**\n电磁频谱通常简称频谱，表示所有可能的电磁辐射的范围，这种辐射以自传播的电磁波的形式存在。\n\n射频信号始于发射机产生的交流信号，在传输过程中，射频信号会产生多种运动行为，称为传播行为。\n\n\n**射频信号的特性**\n**波长**，连续两个波峰或者连续两个波谷之间的距离。也是射频信号在一个周期内实际传播的距离。\n$λ=c/f$\n表示波长等于光速除以频率。\n\n射频信号在空间或物质中传输会出现衰减。衰减的原因并非频率和波长，而是距离。所有天线都存在接收\n功率的有效区域，称为天线孔径(aperture)。天线的频率越高，天线孔径能捕获的能量频率越低。人们总\n感觉波长较短的高频信号衰减较快。从理论上讲，电磁波在空中传播永不停歇；从本质上将，信号永远可以\n到达接收机，但是会因为强度过低而难以被检测到。\n\n人们认为，与波长较短的高频信号相比，波长较长的低频信号能传播更远的距离。实际情况是，高频天线的\n孔径能够捕获的能量远低于低频天线的孔径所能捕获的能量。\n\n多数802.11无线接口使用2.4GHz和5GHz频段的数据。\n2.45GHz对应的波长12.24cm\n5.775GHz对应的波长5.19cm\n\n高频信号在通过各种物理介质时，衰减的速度一般比低频信号要快。衰减的原因：\n信号的自由空间损耗；\n频率越高穿越障碍物的能力越差。2.4GHz比5GHz的穿墙能力更好。\n\n**频率**\n频率，在指定时间内发生的次数，单位Hz,得名于德国物理学家海因里希·鲁道夫·赫兹。\n> 1Hz:每秒循环1次\n> 1kHz:每秒循环1000次\n> 1MHz:每秒循环1 000 000次\n> 1GHz:每秒循环1 000 000 000次\n因此，2.4GHz信号每秒振荡24亿次。\n\n**振幅**\n振幅，表征信号的强度或功率。\n不同类型的射频技术要求的发射振幅有所不同。\n调幅广播电台发射的窄带信号功率可能达到50kW\n802.11接入点的发射功率介于1mW和100mW之间。\n802.11无线接口可以接收并解调振幅低于十亿分之一毫瓦的信号。\n\n**相位**\n相位，描述两个或多个同频信号之间的关系。\n同相，两个同频信号的波峰同一时刻精确对齐。\n异相，两个同频信号的波峰在同一时刻没有精确对齐。\n相位影响信号叠加的强度。多径效应就是有异相信号引起的。\n\n（未完待续...)\n\n\n\n\n","source":"_posts/CWNA-射频基础知识.md","raw":"---\ntitle: CWNA:射频基础知识\ndate: 2022-01-10 17:10:14\ntags: 'Wi-Fi'\n---\n\n**射频信号定义**\n\n**射频特性**\n> 波长\n> 频率\n> 振幅\n> 相位\n\n**射频行为**\n> 波传播\n> 吸收\n> 反射\n> 散射\n> 折射\n> 衍射\n> 损耗（衰减）\n> 自由空间路径损耗\n> 多径\n> 增益（放大）\n\n\n为了深入理解802.11技术，需要掌握无线信号在OSI模型的物理层上的原理。射频通信是物理层核心所在。\n有线通信，信号在有界介质中传输。\n无线通信，信号在无界介质中传输，信号向四面八方辐射到周围环境中，因而容易受环境影响。\n\n**射频信号的定义**\n电磁频谱通常简称频谱，表示所有可能的电磁辐射的范围，这种辐射以自传播的电磁波的形式存在。\n\n射频信号始于发射机产生的交流信号，在传输过程中，射频信号会产生多种运动行为，称为传播行为。\n\n\n**射频信号的特性**\n**波长**，连续两个波峰或者连续两个波谷之间的距离。也是射频信号在一个周期内实际传播的距离。\n$λ=c/f$\n表示波长等于光速除以频率。\n\n射频信号在空间或物质中传输会出现衰减。衰减的原因并非频率和波长，而是距离。所有天线都存在接收\n功率的有效区域，称为天线孔径(aperture)。天线的频率越高，天线孔径能捕获的能量频率越低。人们总\n感觉波长较短的高频信号衰减较快。从理论上讲，电磁波在空中传播永不停歇；从本质上将，信号永远可以\n到达接收机，但是会因为强度过低而难以被检测到。\n\n人们认为，与波长较短的高频信号相比，波长较长的低频信号能传播更远的距离。实际情况是，高频天线的\n孔径能够捕获的能量远低于低频天线的孔径所能捕获的能量。\n\n多数802.11无线接口使用2.4GHz和5GHz频段的数据。\n2.45GHz对应的波长12.24cm\n5.775GHz对应的波长5.19cm\n\n高频信号在通过各种物理介质时，衰减的速度一般比低频信号要快。衰减的原因：\n信号的自由空间损耗；\n频率越高穿越障碍物的能力越差。2.4GHz比5GHz的穿墙能力更好。\n\n**频率**\n频率，在指定时间内发生的次数，单位Hz,得名于德国物理学家海因里希·鲁道夫·赫兹。\n> 1Hz:每秒循环1次\n> 1kHz:每秒循环1000次\n> 1MHz:每秒循环1 000 000次\n> 1GHz:每秒循环1 000 000 000次\n因此，2.4GHz信号每秒振荡24亿次。\n\n**振幅**\n振幅，表征信号的强度或功率。\n不同类型的射频技术要求的发射振幅有所不同。\n调幅广播电台发射的窄带信号功率可能达到50kW\n802.11接入点的发射功率介于1mW和100mW之间。\n802.11无线接口可以接收并解调振幅低于十亿分之一毫瓦的信号。\n\n**相位**\n相位，描述两个或多个同频信号之间的关系。\n同相，两个同频信号的波峰同一时刻精确对齐。\n异相，两个同频信号的波峰在同一时刻没有精确对齐。\n相位影响信号叠加的强度。多径效应就是有异相信号引起的。\n\n（未完待续...)\n\n\n\n\n","slug":"CWNA-射频基础知识","published":1,"updated":"2022-01-11T01:42:38.601Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckznz632o0019h6fdbm3kbovh","content":"<p><strong>射频信号定义</strong></p>\n<p><strong>射频特性</strong></p>\n<blockquote>\n<p>波长<br>频率<br>振幅<br>相位</p>\n</blockquote>\n<p><strong>射频行为</strong></p>\n<blockquote>\n<p>波传播<br>吸收<br>反射<br>散射<br>折射<br>衍射<br>损耗（衰减）<br>自由空间路径损耗<br>多径<br>增益（放大）</p>\n</blockquote>\n<p>为了深入理解802.11技术，需要掌握无线信号在OSI模型的物理层上的原理。射频通信是物理层核心所在。<br>有线通信，信号在有界介质中传输。<br>无线通信，信号在无界介质中传输，信号向四面八方辐射到周围环境中，因而容易受环境影响。</p>\n<p><strong>射频信号的定义</strong><br>电磁频谱通常简称频谱，表示所有可能的电磁辐射的范围，这种辐射以自传播的电磁波的形式存在。</p>\n<p>射频信号始于发射机产生的交流信号，在传输过程中，射频信号会产生多种运动行为，称为传播行为。</p>\n<p><strong>射频信号的特性</strong><br><strong>波长</strong>，连续两个波峰或者连续两个波谷之间的距离。也是射频信号在一个周期内实际传播的距离。<br>$λ=c/f$<br>表示波长等于光速除以频率。</p>\n<p>射频信号在空间或物质中传输会出现衰减。衰减的原因并非频率和波长，而是距离。所有天线都存在接收<br>功率的有效区域，称为天线孔径(aperture)。天线的频率越高，天线孔径能捕获的能量频率越低。人们总<br>感觉波长较短的高频信号衰减较快。从理论上讲，电磁波在空中传播永不停歇；从本质上将，信号永远可以<br>到达接收机，但是会因为强度过低而难以被检测到。</p>\n<p>人们认为，与波长较短的高频信号相比，波长较长的低频信号能传播更远的距离。实际情况是，高频天线的<br>孔径能够捕获的能量远低于低频天线的孔径所能捕获的能量。</p>\n<p>多数802.11无线接口使用2.4GHz和5GHz频段的数据。<br>2.45GHz对应的波长12.24cm<br>5.775GHz对应的波长5.19cm</p>\n<p>高频信号在通过各种物理介质时，衰减的速度一般比低频信号要快。衰减的原因：<br>信号的自由空间损耗；<br>频率越高穿越障碍物的能力越差。2.4GHz比5GHz的穿墙能力更好。</p>\n<p><strong>频率</strong><br>频率，在指定时间内发生的次数，单位Hz,得名于德国物理学家海因里希·鲁道夫·赫兹。</p>\n<blockquote>\n<p>1Hz:每秒循环1次<br>1kHz:每秒循环1000次<br>1MHz:每秒循环1 000 000次<br>1GHz:每秒循环1 000 000 000次<br>因此，2.4GHz信号每秒振荡24亿次。</p>\n</blockquote>\n<p><strong>振幅</strong><br>振幅，表征信号的强度或功率。<br>不同类型的射频技术要求的发射振幅有所不同。<br>调幅广播电台发射的窄带信号功率可能达到50kW<br>802.11接入点的发射功率介于1mW和100mW之间。<br>802.11无线接口可以接收并解调振幅低于十亿分之一毫瓦的信号。</p>\n<p><strong>相位</strong><br>相位，描述两个或多个同频信号之间的关系。<br>同相，两个同频信号的波峰同一时刻精确对齐。<br>异相，两个同频信号的波峰在同一时刻没有精确对齐。<br>相位影响信号叠加的强度。多径效应就是有异相信号引起的。</p>\n<p>（未完待续…)</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>射频信号定义</strong></p>\n<p><strong>射频特性</strong></p>\n<blockquote>\n<p>波长<br>频率<br>振幅<br>相位</p>\n</blockquote>\n<p><strong>射频行为</strong></p>\n<blockquote>\n<p>波传播<br>吸收<br>反射<br>散射<br>折射<br>衍射<br>损耗（衰减）<br>自由空间路径损耗<br>多径<br>增益（放大）</p>\n</blockquote>\n<p>为了深入理解802.11技术，需要掌握无线信号在OSI模型的物理层上的原理。射频通信是物理层核心所在。<br>有线通信，信号在有界介质中传输。<br>无线通信，信号在无界介质中传输，信号向四面八方辐射到周围环境中，因而容易受环境影响。</p>\n<p><strong>射频信号的定义</strong><br>电磁频谱通常简称频谱，表示所有可能的电磁辐射的范围，这种辐射以自传播的电磁波的形式存在。</p>\n<p>射频信号始于发射机产生的交流信号，在传输过程中，射频信号会产生多种运动行为，称为传播行为。</p>\n<p><strong>射频信号的特性</strong><br><strong>波长</strong>，连续两个波峰或者连续两个波谷之间的距离。也是射频信号在一个周期内实际传播的距离。<br>$λ=c/f$<br>表示波长等于光速除以频率。</p>\n<p>射频信号在空间或物质中传输会出现衰减。衰减的原因并非频率和波长，而是距离。所有天线都存在接收<br>功率的有效区域，称为天线孔径(aperture)。天线的频率越高，天线孔径能捕获的能量频率越低。人们总<br>感觉波长较短的高频信号衰减较快。从理论上讲，电磁波在空中传播永不停歇；从本质上将，信号永远可以<br>到达接收机，但是会因为强度过低而难以被检测到。</p>\n<p>人们认为，与波长较短的高频信号相比，波长较长的低频信号能传播更远的距离。实际情况是，高频天线的<br>孔径能够捕获的能量远低于低频天线的孔径所能捕获的能量。</p>\n<p>多数802.11无线接口使用2.4GHz和5GHz频段的数据。<br>2.45GHz对应的波长12.24cm<br>5.775GHz对应的波长5.19cm</p>\n<p>高频信号在通过各种物理介质时，衰减的速度一般比低频信号要快。衰减的原因：<br>信号的自由空间损耗；<br>频率越高穿越障碍物的能力越差。2.4GHz比5GHz的穿墙能力更好。</p>\n<p><strong>频率</strong><br>频率，在指定时间内发生的次数，单位Hz,得名于德国物理学家海因里希·鲁道夫·赫兹。</p>\n<blockquote>\n<p>1Hz:每秒循环1次<br>1kHz:每秒循环1000次<br>1MHz:每秒循环1 000 000次<br>1GHz:每秒循环1 000 000 000次<br>因此，2.4GHz信号每秒振荡24亿次。</p>\n</blockquote>\n<p><strong>振幅</strong><br>振幅，表征信号的强度或功率。<br>不同类型的射频技术要求的发射振幅有所不同。<br>调幅广播电台发射的窄带信号功率可能达到50kW<br>802.11接入点的发射功率介于1mW和100mW之间。<br>802.11无线接口可以接收并解调振幅低于十亿分之一毫瓦的信号。</p>\n<p><strong>相位</strong><br>相位，描述两个或多个同频信号之间的关系。<br>同相，两个同频信号的波峰同一时刻精确对齐。<br>异相，两个同频信号的波峰在同一时刻没有精确对齐。<br>相位影响信号叠加的强度。多径效应就是有异相信号引起的。</p>\n<p>（未完待续…)</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckznz631v0004h6fde6sf04ff","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz631x0007h6fd522u4j0o"},{"post_id":"ckznz631m0000h6fdakx3eoj0","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz631y0009h6fd7shl2z0z"},{"post_id":"ckznz631w0005h6fd5uo45r3w","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz631z000bh6fdeyucdexr"},{"post_id":"ckznz631y0008h6fdgrz26ei4","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz631z000ch6fd79th4iuz"},{"post_id":"ckznz631r0001h6fd9722gldu","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz631z000dh6fdcowjgh2y"},{"post_id":"ckznz631u0003h6fd6bo85bb8","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz631z000eh6fd7oqy7m5y"},{"post_id":"ckznz632b000fh6fda2xkcybj","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632d000hh6fddgtnh1kt"},{"post_id":"ckznz632c000gh6fd3jrnd4i6","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632f000jh6fd5i21ga3u"},{"post_id":"ckznz632d000ih6fd46js9phc","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632f000lh6fd4nu6bo8l"},{"post_id":"ckznz632f000kh6fd5mkyb46s","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632g000nh6fd9hyi6r4d"},{"post_id":"ckznz632g000mh6fde6n6e6vu","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632h000ph6fd6fvge6pw"},{"post_id":"ckznz632g000oh6fd0csq1l6f","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632i000rh6fd2ocsgfwy"},{"post_id":"ckznz632h000qh6fdatmu9ynq","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632i000th6fd4k5h91sh"},{"post_id":"ckznz632i000sh6fda3vb4bjs","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632j000vh6fdfgwp5oko"},{"post_id":"ckznz632j000wh6fder8t8i1v","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632k000zh6fd684s87sa"},{"post_id":"ckznz632k000yh6fd95385zlf","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632l0011h6fdbz3oh7is"},{"post_id":"ckznz632i000uh6fd93p2g191","tag_id":"ckznz632j000xh6fdeuw5at77","_id":"ckznz632l0013h6fd88xydauj"},{"post_id":"ckznz632m0016h6fdej2z23x4","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632n0018h6fd0y2l9ux8"},{"post_id":"ckznz632n0017h6fd070whlzo","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632o001ah6fddmj4d2dk"},{"post_id":"ckznz632o0019h6fdbm3kbovh","tag_id":"ckznz631t0002h6fd6gub2nt0","_id":"ckznz632o001bh6fd1myi2wx7"}],"Tag":[{"name":"Wi-Fi","_id":"ckznz631t0002h6fd6gub2nt0"},{"name":"Shell script","_id":"ckznz632j000xh6fdeuw5at77"}]}}